unit curl;

interface

uses
  fp_socket,
  fp_curl;

  {$IFDEF FPC}
  {$PACKRECORDS C}
  {$ENDIF}


type
  PCURL = ^TCURL;
  TCURL = pointer;

  PCURLSH = ^TCURLSH;
  TCURLSH = pointer;

type
  TCurl_easy = TCURL;
  TCurl_share = TCURLSH;

type
  Pcurl_socket_t = ^Tcurl_socket_t;
  Tcurl_socket_t = longint;

const
  CURL_SOCKET_BAD = -(1);

type
  Pcurl_sslbackend = ^Tcurl_sslbackend;
  Tcurl_sslbackend = longint;

const
  CURLSSLBACKEND_NONE = 0;
  CURLSSLBACKEND_OPENSSL = 1;
  CURLSSLBACKEND_GNUTLS = 2;
  CURLSSLBACKEND_NSS = 3;
  CURLSSLBACKEND_OBSOLETE4 = 4;
  CURLSSLBACKEND_GSKIT = 5;
  CURLSSLBACKEND_POLARSSL = 6;
  CURLSSLBACKEND_WOLFSSL = 7;
  CURLSSLBACKEND_SCHANNEL = 8;
  CURLSSLBACKEND_SECURETRANSPORT = 9;
  CURLSSLBACKEND_AXTLS = 10;
  CURLSSLBACKEND_MBEDTLS = 11;
  CURLSSLBACKEND_MESALINK = 12;
  CURLSSLBACKEND_BEARSSL = 13;
  CURLSSLBACKEND_RUSTLS = 14;

const
  CURLSSLBACKEND_AWSLC = CURLSSLBACKEND_OPENSSL;
  CURLSSLBACKEND_BORINGSSL = CURLSSLBACKEND_OPENSSL;
  CURLSSLBACKEND_LIBRESSL = CURLSSLBACKEND_OPENSSL;
  CURLSSLBACKEND_CYASSL = CURLSSLBACKEND_WOLFSSL;
  CURLSSLBACKEND_DARWINSSL = CURLSSLBACKEND_SECURETRANSPORT;

type
  PPcurl_slist = ^Pcurl_slist;
  Pcurl_slist = ^Tcurl_slist;

  Tcurl_slist = record
    data: pchar;
    next: Pcurl_slist;
  end;

type
  PPcurl_httppost = ^Pcurl_httppost;
  Pcurl_httppost = ^Tcurl_httppost;

  Tcurl_httppost = record
    next: Pcurl_httppost;
    name: pchar;
    namelength: longint;
    contents: pchar;
    contentslength: longint;
    buffer: pchar;
    bufferlength: longint;
    contenttype: pchar;
    contentheader: Pcurl_slist;
    more: Pcurl_httppost;
    flags: longint;
    showfilename: pchar;
    userp: pointer;
    contentlen: Tcurl_off_t;
  end;

const
  CURL_HTTPPOST_FILENAME = 1 shl 0;
  CURL_HTTPPOST_READFILE = 1 shl 1;
  CURL_HTTPPOST_PTRNAME = 1 shl 2;
  CURL_HTTPPOST_PTRCONTENTS = 1 shl 3;
  CURL_HTTPPOST_BUFFER = 1 shl 4;
  CURL_HTTPPOST_PTRBUFFER = 1 shl 5;
  CURL_HTTPPOST_CALLBACK = 1 shl 6;
  CURL_HTTPPOST_LARGE = 1 shl 7;
  CURL_PROGRESSFUNC_CONTINUE = $10000001;

type
  Tcurl_progress_callback = function(clientp: pointer; dltotal: double; dlnow: double; ultotal: double; ulnow: double): longint; cdecl;
  Tcurl_xferinfo_callback = function(clientp: pointer; dltotal: Tcurl_off_t; dlnow: Tcurl_off_t; ultotal: Tcurl_off_t; ulnow: Tcurl_off_t): longint; cdecl;

const
  CURL_MAX_READ_SIZE = (10 * 1024) * 1024;
  CURL_MAX_WRITE_SIZE = 16384;
  CURL_MAX_HTTP_HEADER = 100 * 1024;
  CURL_WRITEFUNC_PAUSE = $10000001;
  CURL_WRITEFUNC_ERROR = $FFFFFFFF;

type
  Tcurl_write_callback = function(buffer: pchar; size: Tsize_t; nitems: Tsize_t; outstream: pointer): Tsize_t; cdecl;
  Tcurl_resolver_start_callback = function(resolver_state: pointer; reserved: pointer; userdata: pointer): longint; cdecl;

  Pcurlfiletype = ^Tcurlfiletype;
  Tcurlfiletype = longint;

const
  CURLFILETYPE_FILE = 0;
  CURLFILETYPE_DIRECTORY = 1;
  CURLFILETYPE_SYMLINK = 2;
  CURLFILETYPE_DEVICE_BLOCK = 3;
  CURLFILETYPE_DEVICE_CHAR = 4;
  CURLFILETYPE_NAMEDPIPE = 5;
  CURLFILETYPE_SOCKET = 6;
  CURLFILETYPE_DOOR = 7;
  CURLFILETYPE_UNKNOWN = 8;

const
  CURLFINFOFLAG_KNOWN_FILENAME = 1 shl 0;
  CURLFINFOFLAG_KNOWN_FILETYPE = 1 shl 1;
  CURLFINFOFLAG_KNOWN_TIME = 1 shl 2;
  CURLFINFOFLAG_KNOWN_PERM = 1 shl 3;
  CURLFINFOFLAG_KNOWN_UID = 1 shl 4;
  CURLFINFOFLAG_KNOWN_GID = 1 shl 5;
  CURLFINFOFLAG_KNOWN_SIZE = 1 shl 6;
  CURLFINFOFLAG_KNOWN_HLINKCOUNT = 1 shl 7;

type
  Tcurl_fileinfo = record
    filename: pchar;
    filetype: Tcurlfiletype;
    time: Ttime_t;
    perm: dword;
    uid: longint;
    gid: longint;
    size: Tcurl_off_t;
    hardlinks: longint;
    strings: record
      time: pchar;
      perm: pchar;
      user: pchar;
      group: pchar;
      target: pchar;
      end;
    flags: dword;
    b_data: pchar;
    b_size: Tsize_t;
    b_used: Tsize_t;
  end;
  Pcurl_fileinfo = ^Tcurl_fileinfo;

const
  CURL_CHUNK_BGN_FUNC_OK = 0;
  CURL_CHUNK_BGN_FUNC_FAIL = 1;
  CURL_CHUNK_BGN_FUNC_SKIP = 2;

type
  Tcurl_chunk_bgn_callback = function(transfer_info: pointer; ptr: pointer; remains: longint): longint; cdecl;

const
  CURL_CHUNK_END_FUNC_OK = 0;
  CURL_CHUNK_END_FUNC_FAIL = 1;

type
  Tcurl_chunk_end_callback = function(ptr: pointer): longint; cdecl;

const
  CURL_FNMATCHFUNC_MATCH = 0;
  CURL_FNMATCHFUNC_NOMATCH = 1;
  CURL_FNMATCHFUNC_FAIL = 2;

type
  Tcurl_fnmatch_callback = function(ptr: pointer; pattern: pchar; _string: pchar): longint; cdecl;

const
  CURL_SEEKFUNC_OK = 0;
  CURL_SEEKFUNC_FAIL = 1;
  CURL_SEEKFUNC_CANTSEEK = 2;

type
  Tcurl_seek_callback = function(instream: pointer; offset: Tcurl_off_t; origin: longint): longint; cdecl;

const
  CURL_READFUNC_ABORT = $10000000;
  CURL_READFUNC_PAUSE = $10000001;
  CURL_TRAILERFUNC_OK = 0;
  CURL_TRAILERFUNC_ABORT = 1;

type
  Tcurl_read_callback = function(buffer: pchar; size: Tsize_t; nitems: Tsize_t; instream: pointer): Tsize_t; cdecl;
  Tcurl_trailer_callback = function(list: PPcurl_slist; userdata: pointer): longint; cdecl;

  Pcurlsocktype = ^Tcurlsocktype;
  Tcurlsocktype = longint;

const
  CURLSOCKTYPE_IPCXN = 0;
  CURLSOCKTYPE_ACCEPT = 1;
  CURLSOCKTYPE_LAST = 2;

const
  CURL_SOCKOPT_OK = 0;
  CURL_SOCKOPT_ERROR = 1;
  CURL_SOCKOPT_ALREADY_CONNECTED = 2;

type
  Tcurl_sockopt_callback = function(clientp: pointer; curlfd: Tcurl_socket_t; purpose: Tcurlsocktype): longint; cdecl;

  Tcurl_sockaddr = record
    family: longint;
    socktype: longint;
    protocol: longint;
    addrlen: dword;
    addr: Tsockaddr;
  end;
  Pcurl_sockaddr = ^Tcurl_sockaddr;

  Tcurl_opensocket_callback = function(clientp: pointer; purpose: Tcurlsocktype; address: Pcurl_sockaddr): Tcurl_socket_t; cdecl;
  Tcurl_closesocket_callback = function(clientp: pointer; item: Tcurl_socket_t): longint; cdecl;

  Pcurlioerr = ^Tcurlioerr;
  Tcurlioerr = longint;

const
  CURLIOE_OK = 0;
  CURLIOE_UNKNOWNCMD = 1;
  CURLIOE_FAILRESTART = 2;
  CURLIOE_LAST = 3;

type
  Pcurliocmd = ^Tcurliocmd;
  Tcurliocmd = longint;

const
  CURLIOCMD_NOP = 0;
  CURLIOCMD_RESTARTREAD = 1;
  CURLIOCMD_LAST = 2;

type
  Tcurl_ioctl_callback = function(handle: PCURL; cmd: longint; clientp: pointer): Tcurlioerr; cdecl;

type
  Tcurl_malloc_callback = function(size: Tsize_t): pointer; cdecl;
  Tcurl_free_callback = procedure(ptr: pointer); cdecl;
  Tcurl_realloc_callback = function(ptr: pointer; size: Tsize_t): pointer; cdecl;
  Tcurl_strdup_callback = function(str: pchar): pchar; cdecl;
  Tcurl_calloc_callback = function(nmemb: Tsize_t; size: Tsize_t): pointer; cdecl;

type
  Pcurl_infotype = ^Tcurl_infotype;
  Tcurl_infotype = longint;

const
  CURLINFO_TEXT = 0;
  CURLINFO_HEADER_IN = 1;
  CURLINFO_HEADER_OUT = 2;
  CURLINFO_DATA_IN = 3;
  CURLINFO_DATA_OUT = 4;
  CURLINFO_SSL_DATA_IN = 5;
  CURLINFO_SSL_DATA_OUT = 6;
  CURLINFO_END = 7;

type
  Tcurl_debug_callback = function(handle: PCURL; _type: Tcurl_infotype; data: pchar; size: Tsize_t; userptr: pointer): longint; cdecl;
  Tcurl_prereq_callback = function(clientp: pointer; conn_primary_ip: pchar; conn_local_ip: pchar; conn_primary_port: longint; conn_local_port: longint): longint; cdecl;

const
  CURL_PREREQFUNC_OK = 0;
  CURL_PREREQFUNC_ABORT = 1;

type
  PCURLcode = ^TCURLcode;
  TCURLcode = longint;

const
  CURLE_OK = 0;
  CURLE_UNSUPPORTED_PROTOCOL = 1;
  CURLE_FAILED_INIT = 2;
  CURLE_URL_MALFORMAT = 3;
  CURLE_NOT_BUILT_IN = 4;
  CURLE_COULDNT_RESOLVE_PROXY = 5;
  CURLE_COULDNT_RESOLVE_HOST = 6;
  CURLE_COULDNT_CONNECT = 7;
  CURLE_WEIRD_SERVER_REPLY = 8;
  CURLE_REMOTE_ACCESS_DENIED = 9;
  CURLE_FTP_ACCEPT_FAILED = 10;
  CURLE_FTP_WEIRD_PASS_REPLY = 11;
  CURLE_FTP_ACCEPT_TIMEOUT = 12;
  CURLE_FTP_WEIRD_PASV_REPLY = 13;
  CURLE_FTP_WEIRD_227_FORMAT = 14;
  CURLE_FTP_CANT_GET_HOST = 15;
  CURLE_HTTP2 = 16;
  CURLE_FTP_COULDNT_SET_TYPE = 17;
  CURLE_PARTIAL_FILE = 18;
  CURLE_FTP_COULDNT_RETR_FILE = 19;
  CURLE_OBSOLETE20 = 20;
  CURLE_QUOTE_ERROR = 21;
  CURLE_HTTP_RETURNED_ERROR = 22;
  CURLE_WRITE_ERROR = 23;
  CURLE_OBSOLETE24 = 24;
  CURLE_UPLOAD_FAILED = 25;
  CURLE_READ_ERROR = 26;
  CURLE_OUT_OF_MEMORY = 27;
  CURLE_OPERATION_TIMEDOUT = 28;
  CURLE_OBSOLETE29 = 29;
  CURLE_FTP_PORT_FAILED = 30;
  CURLE_FTP_COULDNT_USE_REST = 31;
  CURLE_OBSOLETE32 = 32;
  CURLE_RANGE_ERROR = 33;
  CURLE_HTTP_POST_ERROR = 34;
  CURLE_SSL_CONNECT_ERROR = 35;
  CURLE_BAD_DOWNLOAD_RESUME = 36;
  CURLE_FILE_COULDNT_READ_FILE = 37;
  CURLE_LDAP_CANNOT_BIND = 38;
  CURLE_LDAP_SEARCH_FAILED = 39;
  CURLE_OBSOLETE40 = 40;
  CURLE_FUNCTION_NOT_FOUND = 41;
  CURLE_ABORTED_BY_CALLBACK = 42;
  CURLE_BAD_FUNCTION_ARGUMENT = 43;
  CURLE_OBSOLETE44 = 44;
  CURLE_INTERFACE_FAILED = 45;
  CURLE_OBSOLETE46 = 46;
  CURLE_TOO_MANY_REDIRECTS = 47;
  CURLE_UNKNOWN_OPTION = 48;
  CURLE_SETOPT_OPTION_SYNTAX = 49;
  CURLE_OBSOLETE50 = 50;
  CURLE_OBSOLETE51 = 51;
  CURLE_GOT_NOTHING = 52;
  CURLE_SSL_ENGINE_NOTFOUND = 53;
  CURLE_SSL_ENGINE_SETFAILED = 54;
  CURLE_SEND_ERROR = 55;
  CURLE_RECV_ERROR = 56;
  CURLE_OBSOLETE57 = 57;
  CURLE_SSL_CERTPROBLEM = 58;
  CURLE_SSL_CIPHER = 59;
  CURLE_PEER_FAILED_VERIFICATION = 60;
  CURLE_BAD_CONTENT_ENCODING = 61;
  CURLE_OBSOLETE62 = 62;
  CURLE_FILESIZE_EXCEEDED = 63;
  CURLE_USE_SSL_FAILED = 64;
  CURLE_SEND_FAIL_REWIND = 65;
  CURLE_SSL_ENGINE_INITFAILED = 66;
  CURLE_LOGIN_DENIED = 67;
  CURLE_TFTP_NOTFOUND = 68;
  CURLE_TFTP_PERM = 69;
  CURLE_REMOTE_DISK_FULL = 70;
  CURLE_TFTP_ILLEGAL = 71;
  CURLE_TFTP_UNKNOWNID = 72;
  CURLE_REMOTE_FILE_EXISTS = 73;
  CURLE_TFTP_NOSUCHUSER = 74;
  CURLE_OBSOLETE75 = 75;
  CURLE_OBSOLETE76 = 76;
  CURLE_SSL_CACERT_BADFILE = 77;
  CURLE_REMOTE_FILE_NOT_FOUND = 78;
  CURLE_SSH = 79;
  CURLE_SSL_SHUTDOWN_FAILED = 80;
  CURLE_AGAIN = 81;
  CURLE_SSL_CRL_BADFILE = 82;
  CURLE_SSL_ISSUER_ERROR = 83;
  CURLE_FTP_PRET_FAILED = 84;
  CURLE_RTSP_CSEQ_ERROR = 85;
  CURLE_RTSP_SESSION_ERROR = 86;
  CURLE_FTP_BAD_FILE_LIST = 87;
  CURLE_CHUNK_FAILED = 88;
  CURLE_NO_CONNECTION_AVAILABLE = 89;
  CURLE_SSL_PINNEDPUBKEYNOTMATCH = 90;
  CURLE_SSL_INVALIDCERTSTATUS = 91;
  CURLE_HTTP2_STREAM = 92;
  CURLE_RECURSIVE_API_CALL = 93;
  CURLE_AUTH_ERROR = 94;
  CURLE_HTTP3 = 95;
  CURLE_QUIC_CONNECT_ERROR = 96;
  CURLE_PROXY = 97;
  CURLE_SSL_CLIENTCERT = 98;
  CURLE_UNRECOVERABLE_POLL = 99;
  CURL_LAST = 100;

type
  PCURLproxycode = ^TCURLproxycode;
  TCURLproxycode = longint;

const
  CURLPX_OK = 0;
  CURLPX_BAD_ADDRESS_TYPE = 1;
  CURLPX_BAD_VERSION = 2;
  CURLPX_CLOSED = 3;
  CURLPX_GSSAPI = 4;
  CURLPX_GSSAPI_PERMSG = 5;
  CURLPX_GSSAPI_PROTECTION = 6;
  CURLPX_IDENTD = 7;
  CURLPX_IDENTD_DIFFER = 8;
  CURLPX_LONG_HOSTNAME = 9;
  CURLPX_LONG_PASSWD = 10;
  CURLPX_LONG_USER = 11;
  CURLPX_NO_AUTH = 12;
  CURLPX_RECV_ADDRESS = 13;
  CURLPX_RECV_AUTH = 14;
  CURLPX_RECV_CONNECT = 15;
  CURLPX_RECV_REQACK = 16;
  CURLPX_REPLY_ADDRESS_TYPE_NOT_SUPPORTED = 17;
  CURLPX_REPLY_COMMAND_NOT_SUPPORTED = 18;
  CURLPX_REPLY_CONNECTION_REFUSED = 19;
  CURLPX_REPLY_GENERAL_SERVER_FAILURE = 20;
  CURLPX_REPLY_HOST_UNREACHABLE = 21;
  CURLPX_REPLY_NETWORK_UNREACHABLE = 22;
  CURLPX_REPLY_NOT_ALLOWED = 23;
  CURLPX_REPLY_TTL_EXPIRED = 24;
  CURLPX_REPLY_UNASSIGNED = 25;
  CURLPX_REQUEST_FAILED = 26;
  CURLPX_RESOLVE_HOST = 27;
  CURLPX_SEND_AUTH = 28;
  CURLPX_SEND_CONNECT = 29;
  CURLPX_SEND_REQUEST = 30;
  CURLPX_UNKNOWN_FAIL = 31;
  CURLPX_UNKNOWN_MODE = 32;
  CURLPX_USER_REJECTED = 33;
  CURLPX_LAST = 34;

type
  Tcurl_conv_callback = function(buffer: pchar; length: Tsize_t): TCURLcode; cdecl;
  Tcurl_ssl_ctx_callback = function(curl: PCURL; ssl_ctx: pointer; userptr: pointer): TCURLcode; cdecl;

  Pcurl_proxytype = ^Tcurl_proxytype;
  Tcurl_proxytype = longint;

const
  CURLPROXY_HTTP = 0;
  CURLPROXY_HTTP_1_0 = 1;
  CURLPROXY_HTTPS = 2;
  CURLPROXY_HTTPS2 = 3;
  CURLPROXY_SOCKS4 = 4;
  CURLPROXY_SOCKS5 = 5;
  CURLPROXY_SOCKS4A = 6;
  CURLPROXY_SOCKS5_HOSTNAME = 7;

const
  CURLAUTH_NONE = dword(0);
  CURLAUTH_BASIC = dword(1) shl 0;
  CURLAUTH_DIGEST = dword(1) shl 1;
  CURLAUTH_NEGOTIATE = dword(1) shl 2;
  CURLAUTH_NTLM = dword(1) shl 3;
  CURLAUTH_DIGEST_IE = dword(1) shl 4;
  CURLAUTH_NTLM_WB = dword(1) shl 5;
  CURLAUTH_BEARER = dword(1) shl 6;
  CURLAUTH_AWS_SIGV4 = dword(1) shl 7;
  CURLAUTH_ONLY = dword(1) shl 31;
  CURLAUTH_GSSNEGOTIATE = CURLAUTH_NEGOTIATE;
  CURLAUTH_GSSAPI = CURLAUTH_NEGOTIATE;

  CURLAUTH_ANY = not (CURLAUTH_DIGEST_IE);
  CURLAUTH_ANYSAFE = not (CURLAUTH_BASIC or CURLAUTH_DIGEST_IE);
  CURLSSH_AUTH_ANY = not (0);
  CURLSSH_AUTH_NONE = 0;
  CURLSSH_AUTH_PUBLICKEY = 1 shl 0;
  CURLSSH_AUTH_PASSWORD = 1 shl 1;
  CURLSSH_AUTH_HOST = 1 shl 2;
  CURLSSH_AUTH_KEYBOARD = 1 shl 3;
  CURLSSH_AUTH_AGENT = 1 shl 4;
  CURLSSH_AUTH_GSSAPI = 1 shl 5;
  CURLSSH_AUTH_DEFAULT = CURLSSH_AUTH_ANY;
  CURLGSSAPI_DELEGATION_NONE = 0;
  CURLGSSAPI_DELEGATION_POLICY_FLAG = 1 shl 0;
  CURLGSSAPI_DELEGATION_FLAG = 1 shl 1;
  CURL_ERROR_SIZE = 256;

type
  Tcurl_khtype = longint;

const
  CURLKHTYPE_UNKNOWN = 0;
  CURLKHTYPE_RSA1 = 1;
  CURLKHTYPE_RSA = 2;
  CURLKHTYPE_DSS = 3;
  CURLKHTYPE_ECDSA = 4;
  CURLKHTYPE_ED25519 = 5;

type
  Tcurl_khkey = record
    key: pchar;
    len: Tsize_t;
    keytype: Tcurl_khtype;
  end;
  Pcurl_khkey = ^Tcurl_khkey;

  Tcurl_khstat = longint;

const
  CURLKHSTAT_FINE_ADD_TO_FILE = 0;
  CURLKHSTAT_FINE = 1;
  CURLKHSTAT_REJECT = 2;
  CURLKHSTAT_DEFER = 3;
  CURLKHSTAT_FINE_REPLACE = 4;
  CURLKHSTAT_LAST = 5;

type
  Tcurl_khmatch = longint;

const
  CURLKHMATCH_OK = 0;
  CURLKHMATCH_MISMATCH = 1;
  CURLKHMATCH_MISSING = 2;
  CURLKHMATCH_LAST = 3;

type
  Tcurl_sshkeycallback = function(easy: PCURL; knownkey: Pcurl_khkey; foundkey: Pcurl_khkey; para4: Tcurl_khmatch; clientp: pointer): longint; cdecl;
  Tcurl_sshhostkeycallback = function(clientp: pointer; keytype: longint; key: pchar; keylen: Tsize_t): longint; cdecl;

  Pcurl_usessl = ^Tcurl_usessl;
  Tcurl_usessl = longint;

const
  CURLUSESSL_NONE = 0;
  CURLUSESSL_TRY = 1;
  CURLUSESSL_CONTROL = 2;
  CURLUSESSL_ALL = 3;
  CURLUSESSL_LAST = 4;

const
  CURLSSLOPT_ALLOW_BEAST = 1 shl 0;
  CURLSSLOPT_NO_REVOKE = 1 shl 1;
  CURLSSLOPT_NO_PARTIALCHAIN = 1 shl 2;
  CURLSSLOPT_REVOKE_BEST_EFFORT = 1 shl 3;
  CURLSSLOPT_NATIVE_CA = 1 shl 4;
  CURLSSLOPT_AUTO_CLIENT_CERT = 1 shl 5;
  CURL_HET_DEFAULT = 200;
  CURL_UPKEEP_INTERVAL_DEFAULT = 60000;
  CURLFTPSSL_NONE = CURLUSESSL_NONE;
  CURLFTPSSL_TRY = CURLUSESSL_TRY;
  CURLFTPSSL_CONTROL = CURLUSESSL_CONTROL;
  CURLFTPSSL_ALL = CURLUSESSL_ALL;
  CURLFTPSSL_LAST = CURLUSESSL_LAST;

type
  Tcurl_ftpssl = Tcurl_usessl;

type
  Pcurl_ftpccc = ^Tcurl_ftpccc;
  Tcurl_ftpccc = longint;

const
  CURLFTPSSL_CCC_NONE = 0;
  CURLFTPSSL_CCC_PASSIVE = 1;
  CURLFTPSSL_CCC_ACTIVE = 2;
  CURLFTPSSL_CCC_LAST = 3;

type
  Pcurl_ftpauth = ^Tcurl_ftpauth;
  Tcurl_ftpauth = longint;

const
  CURLFTPAUTH_DEFAULT = 0;
  CURLFTPAUTH_SSL = 1;
  CURLFTPAUTH_TLS = 2;
  CURLFTPAUTH_LAST = 3;

type
  Pcurl_ftpcreatedir = ^Tcurl_ftpcreatedir;
  Tcurl_ftpcreatedir = longint;

const
  CURLFTP_CREATE_DIR_NONE = 0;
  CURLFTP_CREATE_DIR = 1;
  CURLFTP_CREATE_DIR_RETRY = 2;
  CURLFTP_CREATE_DIR_LAST = 3;

type
  Pcurl_ftpmethod = ^Tcurl_ftpmethod;
  Tcurl_ftpmethod = longint;

const
  CURLFTPMETHOD_DEFAULT = 0;
  CURLFTPMETHOD_MULTICWD = 1;
  CURLFTPMETHOD_NOCWD = 2;
  CURLFTPMETHOD_SINGLECWD = 3;
  CURLFTPMETHOD_LAST = 4;

const
  CURLHEADER_UNIFIED = 0;
  CURLHEADER_SEPARATE = 1 shl 0;
  CURLALTSVC_READONLYFILE = 1 shl 2;
  CURLALTSVC_H1 = 1 shl 3;
  CURLALTSVC_H2 = 1 shl 4;
  CURLALTSVC_H3 = 1 shl 5;

type
  Tcurl_hstsentry = record
    // ????
  end;
  Pcurl_hstsentry = ^Tcurl_hstsentry;

type
  Tcurl_index = record
    index: Tsize_t;
    total: Tsize_t;
  end;
  Pcurl_index = ^Tcurl_index;


  PCURLSTScode = ^TCURLSTScode;
  TCURLSTScode = longint;

const
  CURLSTS_OK = 0;
  CURLSTS_DONE = 1;
  CURLSTS_FAIL = 2;

type
  Tcurl_hstsread_callback = function(easy: PCURL; e: Pcurl_hstsentry; userp: pointer): TCURLSTScode; cdecl;
  Tcurl_hstswrite_callback = function(easy: PCURL; e: Pcurl_hstsentry; i: Pcurl_index; userp: pointer): TCURLSTScode; cdecl;

const
  CURLHSTS_ENABLE = longint(1 shl 0);
  CURLHSTS_READONLYFILE = longint(1 shl 1);

const
  CURLPROTO_HTTP = 1 shl 0;
  CURLPROTO_HTTPS = 1 shl 1;
  CURLPROTO_FTP = 1 shl 2;
  CURLPROTO_FTPS = 1 shl 3;
  CURLPROTO_SCP = 1 shl 4;
  CURLPROTO_SFTP = 1 shl 5;
  CURLPROTO_TELNET = 1 shl 6;
  CURLPROTO_LDAP = 1 shl 7;
  CURLPROTO_LDAPS = 1 shl 8;
  CURLPROTO_DICT = 1 shl 9;
  CURLPROTO_FILE = 1 shl 10;
  CURLPROTO_TFTP = 1 shl 11;
  CURLPROTO_IMAP = 1 shl 12;
  CURLPROTO_IMAPS = 1 shl 13;
  CURLPROTO_POP3 = 1 shl 14;
  CURLPROTO_POP3S = 1 shl 15;
  CURLPROTO_SMTP = 1 shl 16;
  CURLPROTO_SMTPS = 1 shl 17;
  CURLPROTO_RTSP = 1 shl 18;
  CURLPROTO_RTMP = 1 shl 19;
  CURLPROTO_RTMPT = 1 shl 20;
  CURLPROTO_RTMPE = 1 shl 21;
  CURLPROTO_RTMPTE = 1 shl 22;
  CURLPROTO_RTMPS = 1 shl 23;
  CURLPROTO_RTMPTS = 1 shl 24;
  CURLPROTO_GOPHER = 1 shl 25;
  CURLPROTO_SMB = 1 shl 26;
  CURLPROTO_SMBS = 1 shl 27;
  CURLPROTO_MQTT = 1 shl 28;
  CURLPROTO_GOPHERS = 1 shl 29;
  CURLPROTO_ALL = not (0);
  CURLOPTTYPE_LONG = 0;
  CURLOPTTYPE_OBJECTPOINT = 10000;
  CURLOPTTYPE_FUNCTIONPOINT = 20000;
  CURLOPTTYPE_OFF_T = 30000;
  CURLOPTTYPE_BLOB = 40000;
  CURLOPTTYPE_STRINGPOINT = CURLOPTTYPE_OBJECTPOINT;
  CURLOPTTYPE_SLISTPOINT = CURLOPTTYPE_OBJECTPOINT;
  CURLOPTTYPE_CBPOINT = CURLOPTTYPE_OBJECTPOINT;
  CURLOPTTYPE_VALUES = CURLOPTTYPE_LONG;

type
  PCURLoption = ^TCURLoption;
  TCURLoption = longint;

const
  CURLOPT_WRITEDATA = CURLOPTTYPE_CBPOINT + 1;
  CURLOPT_URL = CURLOPTTYPE_STRINGPOINT + 2;
  CURLOPT_PORT = CURLOPTTYPE_LONG + 3;
  CURLOPT_PROXY = CURLOPTTYPE_STRINGPOINT + 4;
  CURLOPT_USERPWD = CURLOPTTYPE_STRINGPOINT + 5;
  CURLOPT_PROXYUSERPWD = CURLOPTTYPE_STRINGPOINT + 6;
  CURLOPT_RANGE = CURLOPTTYPE_STRINGPOINT + 7;
  CURLOPT_READDATA = CURLOPTTYPE_CBPOINT + 9;
  CURLOPT_ERRORBUFFER = CURLOPTTYPE_OBJECTPOINT + 10;
  CURLOPT_WRITEFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 11;
  CURLOPT_READFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 12;
  CURLOPT_TIMEOUT = CURLOPTTYPE_LONG + 13;
  CURLOPT_INFILESIZE = CURLOPTTYPE_LONG + 14;
  CURLOPT_POSTFIELDS = CURLOPTTYPE_OBJECTPOINT + 15;
  CURLOPT_REFERER = CURLOPTTYPE_STRINGPOINT + 16;
  CURLOPT_FTPPORT = CURLOPTTYPE_STRINGPOINT + 17;
  CURLOPT_USERAGENT = CURLOPTTYPE_STRINGPOINT + 18;
  CURLOPT_LOW_SPEED_LIMIT = CURLOPTTYPE_LONG + 19;
  CURLOPT_LOW_SPEED_TIME = CURLOPTTYPE_LONG + 20;
  CURLOPT_RESUME_FROM = CURLOPTTYPE_LONG + 21;
  CURLOPT_COOKIE = CURLOPTTYPE_STRINGPOINT + 22;
  CURLOPT_HTTPHEADER = CURLOPTTYPE_SLISTPOINT + 23;
  CURLOPT_HTTPPOST = CURLOPTTYPE_OBJECTPOINT + 24;
  CURLOPT_SSLCERT = CURLOPTTYPE_STRINGPOINT + 25;
  CURLOPT_KEYPASSWD = CURLOPTTYPE_STRINGPOINT + 26;
  CURLOPT_CRLF = CURLOPTTYPE_LONG + 27;
  CURLOPT_QUOTE = CURLOPTTYPE_SLISTPOINT + 28;
  CURLOPT_HEADERDATA = CURLOPTTYPE_CBPOINT + 29;
  CURLOPT_COOKIEFILE = CURLOPTTYPE_STRINGPOINT + 31;
  CURLOPT_SSLVERSION = CURLOPTTYPE_VALUES + 32;
  CURLOPT_TIMECONDITION = CURLOPTTYPE_VALUES + 33;
  CURLOPT_TIMEVALUE = CURLOPTTYPE_LONG + 34;
  CURLOPT_CUSTOMREQUEST = CURLOPTTYPE_STRINGPOINT + 36;
  CURLOPT_STDERR = CURLOPTTYPE_OBJECTPOINT + 37;
  CURLOPT_POSTQUOTE = CURLOPTTYPE_SLISTPOINT + 39;
  CURLOPT_OBSOLETE40 = CURLOPTTYPE_OBJECTPOINT + 40;
  CURLOPT_VERBOSE = CURLOPTTYPE_LONG + 41;
  CURLOPT_HEADER = CURLOPTTYPE_LONG + 42;
  CURLOPT_NOPROGRESS = CURLOPTTYPE_LONG + 43;
  CURLOPT_NOBODY = CURLOPTTYPE_LONG + 44;
  CURLOPT_FAILONERROR = CURLOPTTYPE_LONG + 45;
  CURLOPT_UPLOAD = CURLOPTTYPE_LONG + 46;
  CURLOPT_POST = CURLOPTTYPE_LONG + 47;
  CURLOPT_DIRLISTONLY = CURLOPTTYPE_LONG + 48;
  CURLOPT_APPEND = CURLOPTTYPE_LONG + 50;
  CURLOPT_NETRC = CURLOPTTYPE_VALUES + 51;
  CURLOPT_FOLLOWLOCATION = CURLOPTTYPE_LONG + 52;
  CURLOPT_TRANSFERTEXT = CURLOPTTYPE_LONG + 53;
  CURLOPT_PUT = CURLOPTTYPE_LONG + 54;
  CURLOPT_PROGRESSFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 56;
  CURLOPT_XFERINFODATA = CURLOPTTYPE_CBPOINT + 57;
  CURLOPT_AUTOREFERER = CURLOPTTYPE_LONG + 58;
  CURLOPT_PROXYPORT = CURLOPTTYPE_LONG + 59;
  CURLOPT_POSTFIELDSIZE = CURLOPTTYPE_LONG + 60;
  CURLOPT_HTTPPROXYTUNNEL = CURLOPTTYPE_LONG + 61;
  CURLOPT_INTERFACE = CURLOPTTYPE_STRINGPOINT + 62;
  CURLOPT_KRBLEVEL = CURLOPTTYPE_STRINGPOINT + 63;
  CURLOPT_SSL_VERIFYPEER = CURLOPTTYPE_LONG + 64;
  CURLOPT_CAINFO = CURLOPTTYPE_STRINGPOINT + 65;
  CURLOPT_MAXREDIRS = CURLOPTTYPE_LONG + 68;
  CURLOPT_FILETIME = CURLOPTTYPE_LONG + 69;
  CURLOPT_TELNETOPTIONS = CURLOPTTYPE_SLISTPOINT + 70;
  CURLOPT_MAXCONNECTS = CURLOPTTYPE_LONG + 71;
  CURLOPT_OBSOLETE72 = CURLOPTTYPE_LONG + 72;
  CURLOPT_FRESH_CONNECT = CURLOPTTYPE_LONG + 74;
  CURLOPT_FORBID_REUSE = CURLOPTTYPE_LONG + 75;
  CURLOPT_RANDOM_FILE = CURLOPTTYPE_STRINGPOINT + 76;
  CURLOPT_EGDSOCKET = CURLOPTTYPE_STRINGPOINT + 77;
  CURLOPT_CONNECTTIMEOUT = CURLOPTTYPE_LONG + 78;
  CURLOPT_HEADERFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 79;
  CURLOPT_HTTPGET = CURLOPTTYPE_LONG + 80;
  CURLOPT_SSL_VERIFYHOST = CURLOPTTYPE_LONG + 81;
  CURLOPT_COOKIEJAR = CURLOPTTYPE_STRINGPOINT + 82;
  CURLOPT_SSL_CIPHER_LIST = CURLOPTTYPE_STRINGPOINT + 83;
  CURLOPT_HTTP_VERSION = CURLOPTTYPE_VALUES + 84;
  CURLOPT_FTP_USE_EPSV = CURLOPTTYPE_LONG + 85;
  CURLOPT_SSLCERTTYPE = CURLOPTTYPE_STRINGPOINT + 86;
  CURLOPT_SSLKEY = CURLOPTTYPE_STRINGPOINT + 87;
  CURLOPT_SSLKEYTYPE = CURLOPTTYPE_STRINGPOINT + 88;
  CURLOPT_SSLENGINE = CURLOPTTYPE_STRINGPOINT + 89;
  CURLOPT_SSLENGINE_DEFAULT = CURLOPTTYPE_LONG + 90;
  CURLOPT_DNS_USE_GLOBAL_CACHE = CURLOPTTYPE_LONG + 91;
  CURLOPT_DNS_CACHE_TIMEOUT = CURLOPTTYPE_LONG + 92;
  CURLOPT_PREQUOTE = CURLOPTTYPE_SLISTPOINT + 93;
  CURLOPT_DEBUGFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 94;
  CURLOPT_DEBUGDATA = CURLOPTTYPE_CBPOINT + 95;
  CURLOPT_COOKIESESSION = CURLOPTTYPE_LONG + 96;
  CURLOPT_CAPATH = CURLOPTTYPE_STRINGPOINT + 97;
  CURLOPT_BUFFERSIZE = CURLOPTTYPE_LONG + 98;
  CURLOPT_NOSIGNAL = CURLOPTTYPE_LONG + 99;
  CURLOPT_SHARE = CURLOPTTYPE_OBJECTPOINT + 100;
  CURLOPT_PROXYTYPE = CURLOPTTYPE_VALUES + 101;
  CURLOPT_ACCEPT_ENCODING = CURLOPTTYPE_STRINGPOINT + 102;
  CURLOPT_PRIVATE = CURLOPTTYPE_OBJECTPOINT + 103;
  CURLOPT_HTTP200ALIASES = CURLOPTTYPE_SLISTPOINT + 104;
  CURLOPT_UNRESTRICTED_AUTH = CURLOPTTYPE_LONG + 105;
  CURLOPT_FTP_USE_EPRT = CURLOPTTYPE_LONG + 106;
  CURLOPT_HTTPAUTH = CURLOPTTYPE_VALUES + 107;
  CURLOPT_SSL_CTX_FUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 108;
  CURLOPT_SSL_CTX_DATA = CURLOPTTYPE_CBPOINT + 109;
  CURLOPT_FTP_CREATE_MISSING_DIRS = CURLOPTTYPE_LONG + 110;
  CURLOPT_PROXYAUTH = CURLOPTTYPE_VALUES + 111;
  CURLOPT_SERVER_RESPONSE_TIMEOUT = CURLOPTTYPE_LONG + 112;
  CURLOPT_IPRESOLVE = CURLOPTTYPE_VALUES + 113;
  CURLOPT_MAXFILESIZE = CURLOPTTYPE_LONG + 114;
  CURLOPT_INFILESIZE_LARGE = CURLOPTTYPE_OFF_T + 115;
  CURLOPT_RESUME_FROM_LARGE = CURLOPTTYPE_OFF_T + 116;
  CURLOPT_MAXFILESIZE_LARGE = CURLOPTTYPE_OFF_T + 117;
  CURLOPT_NETRC_FILE = CURLOPTTYPE_STRINGPOINT + 118;
  CURLOPT_USE_SSL = CURLOPTTYPE_VALUES + 119;
  CURLOPT_POSTFIELDSIZE_LARGE = CURLOPTTYPE_OFF_T + 120;
  CURLOPT_TCP_NODELAY = CURLOPTTYPE_LONG + 121;
  CURLOPT_FTPSSLAUTH = CURLOPTTYPE_VALUES + 129;
  CURLOPT_IOCTLFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 130;
  CURLOPT_IOCTLDATA = CURLOPTTYPE_CBPOINT + 131;
  CURLOPT_FTP_ACCOUNT = CURLOPTTYPE_STRINGPOINT + 134;
  CURLOPT_COOKIELIST = CURLOPTTYPE_STRINGPOINT + 135;
  CURLOPT_IGNORE_CONTENT_LENGTH = CURLOPTTYPE_LONG + 136;
  CURLOPT_FTP_SKIP_PASV_IP = CURLOPTTYPE_LONG + 137;
  CURLOPT_FTP_FILEMETHOD = CURLOPTTYPE_VALUES + 138;
  CURLOPT_LOCALPORT = CURLOPTTYPE_LONG + 139;
  CURLOPT_LOCALPORTRANGE = CURLOPTTYPE_LONG + 140;
  CURLOPT_CONNECT_ONLY = CURLOPTTYPE_LONG + 141;
  CURLOPT_CONV_FROM_NETWORK_FUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 142;
  CURLOPT_CONV_TO_NETWORK_FUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 143;
  CURLOPT_CONV_FROM_UTF8_FUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 144;
  CURLOPT_MAX_SEND_SPEED_LARGE = CURLOPTTYPE_OFF_T + 145;
  CURLOPT_MAX_RECV_SPEED_LARGE = CURLOPTTYPE_OFF_T + 146;
  CURLOPT_FTP_ALTERNATIVE_TO_USER = CURLOPTTYPE_STRINGPOINT + 147;
  CURLOPT_SOCKOPTFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 148;
  CURLOPT_SOCKOPTDATA = CURLOPTTYPE_CBPOINT + 149;
  CURLOPT_SSL_SESSIONID_CACHE = CURLOPTTYPE_LONG + 150;
  CURLOPT_SSH_AUTH_TYPES = CURLOPTTYPE_VALUES + 151;
  CURLOPT_SSH_PUBLIC_KEYFILE = CURLOPTTYPE_STRINGPOINT + 152;
  CURLOPT_SSH_PRIVATE_KEYFILE = CURLOPTTYPE_STRINGPOINT + 153;
  CURLOPT_FTP_SSL_CCC = CURLOPTTYPE_LONG + 154;
  CURLOPT_TIMEOUT_MS = CURLOPTTYPE_LONG + 155;
  CURLOPT_CONNECTTIMEOUT_MS = CURLOPTTYPE_LONG + 156;
  CURLOPT_HTTP_TRANSFER_DECODING = CURLOPTTYPE_LONG + 157;
  CURLOPT_HTTP_CONTENT_DECODING = CURLOPTTYPE_LONG + 158;
  CURLOPT_NEW_FILE_PERMS = CURLOPTTYPE_LONG + 159;
  CURLOPT_NEW_DIRECTORY_PERMS = CURLOPTTYPE_LONG + 160;
  CURLOPT_POSTREDIR = CURLOPTTYPE_VALUES + 161;
  CURLOPT_SSH_HOST_PUBLIC_KEY_MD5 = CURLOPTTYPE_STRINGPOINT + 162;
  CURLOPT_OPENSOCKETFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 163;
  CURLOPT_OPENSOCKETDATA = CURLOPTTYPE_CBPOINT + 164;
  CURLOPT_COPYPOSTFIELDS = CURLOPTTYPE_OBJECTPOINT + 165;
  CURLOPT_PROXY_TRANSFER_MODE = CURLOPTTYPE_LONG + 166;
  CURLOPT_SEEKFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 167;
  CURLOPT_SEEKDATA = CURLOPTTYPE_CBPOINT + 168;
  CURLOPT_CRLFILE = CURLOPTTYPE_STRINGPOINT + 169;
  CURLOPT_ISSUERCERT = CURLOPTTYPE_STRINGPOINT + 170;
  CURLOPT_ADDRESS_SCOPE = CURLOPTTYPE_LONG + 171;
  CURLOPT_CERTINFO = CURLOPTTYPE_LONG + 172;
  CURLOPT_USERNAME = CURLOPTTYPE_STRINGPOINT + 173;
  CURLOPT_PASSWORD = CURLOPTTYPE_STRINGPOINT + 174;
  CURLOPT_PROXYUSERNAME = CURLOPTTYPE_STRINGPOINT + 175;
  CURLOPT_PROXYPASSWORD = CURLOPTTYPE_STRINGPOINT + 176;
  CURLOPT_NOPROXY = CURLOPTTYPE_STRINGPOINT + 177;
  CURLOPT_TFTP_BLKSIZE = CURLOPTTYPE_LONG + 178;
  CURLOPT_SOCKS5_GSSAPI_SERVICE = CURLOPTTYPE_STRINGPOINT + 179;
  CURLOPT_SOCKS5_GSSAPI_NEC = CURLOPTTYPE_LONG + 180;
  CURLOPT_PROTOCOLS = CURLOPTTYPE_LONG + 181;
  CURLOPT_REDIR_PROTOCOLS = CURLOPTTYPE_LONG + 182;
  CURLOPT_SSH_KNOWNHOSTS = CURLOPTTYPE_STRINGPOINT + 183;
  CURLOPT_SSH_KEYFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 184;
  CURLOPT_SSH_KEYDATA = CURLOPTTYPE_CBPOINT + 185;
  CURLOPT_MAIL_FROM = CURLOPTTYPE_STRINGPOINT + 186;
  CURLOPT_MAIL_RCPT = CURLOPTTYPE_SLISTPOINT + 187;
  CURLOPT_FTP_USE_PRET = CURLOPTTYPE_LONG + 188;
  CURLOPT_RTSP_REQUEST = CURLOPTTYPE_VALUES + 189;
  CURLOPT_RTSP_SESSION_ID = CURLOPTTYPE_STRINGPOINT + 190;
  CURLOPT_RTSP_STREAM_URI = CURLOPTTYPE_STRINGPOINT + 191;
  CURLOPT_RTSP_TRANSPORT = CURLOPTTYPE_STRINGPOINT + 192;
  CURLOPT_RTSP_CLIENT_CSEQ = CURLOPTTYPE_LONG + 193;
  CURLOPT_RTSP_SERVER_CSEQ = CURLOPTTYPE_LONG + 194;
  CURLOPT_INTERLEAVEDATA = CURLOPTTYPE_CBPOINT + 195;
  CURLOPT_INTERLEAVEFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 196;
  CURLOPT_WILDCARDMATCH = CURLOPTTYPE_LONG + 197;
  CURLOPT_CHUNK_BGN_FUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 198;
  CURLOPT_CHUNK_END_FUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 199;
  CURLOPT_FNMATCH_FUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 200;
  CURLOPT_CHUNK_DATA = CURLOPTTYPE_CBPOINT + 201;
  CURLOPT_FNMATCH_DATA = CURLOPTTYPE_CBPOINT + 202;
  CURLOPT_RESOLVE = CURLOPTTYPE_SLISTPOINT + 203;
  CURLOPT_TLSAUTH_USERNAME = CURLOPTTYPE_STRINGPOINT + 204;
  CURLOPT_TLSAUTH_PASSWORD = CURLOPTTYPE_STRINGPOINT + 205;
  CURLOPT_TLSAUTH_TYPE = CURLOPTTYPE_STRINGPOINT + 206;
  CURLOPT_TRANSFER_ENCODING = CURLOPTTYPE_LONG + 207;
  CURLOPT_CLOSESOCKETFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 208;
  CURLOPT_CLOSESOCKETDATA = CURLOPTTYPE_CBPOINT + 209;
  CURLOPT_GSSAPI_DELEGATION = CURLOPTTYPE_VALUES + 210;
  CURLOPT_DNS_SERVERS = CURLOPTTYPE_STRINGPOINT + 211;
  CURLOPT_ACCEPTTIMEOUT_MS = CURLOPTTYPE_LONG + 212;
  CURLOPT_TCP_KEEPALIVE = CURLOPTTYPE_LONG + 213;
  CURLOPT_TCP_KEEPIDLE = CURLOPTTYPE_LONG + 214;
  CURLOPT_TCP_KEEPINTVL = CURLOPTTYPE_LONG + 215;
  CURLOPT_SSL_OPTIONS = CURLOPTTYPE_VALUES + 216;
  CURLOPT_MAIL_AUTH = CURLOPTTYPE_STRINGPOINT + 217;
  CURLOPT_SASL_IR = CURLOPTTYPE_LONG + 218;
  CURLOPT_XFERINFOFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 219;
  CURLOPT_XOAUTH2_BEARER = CURLOPTTYPE_STRINGPOINT + 220;
  CURLOPT_DNS_INTERFACE = CURLOPTTYPE_STRINGPOINT + 221;
  CURLOPT_DNS_LOCAL_IP4 = CURLOPTTYPE_STRINGPOINT + 222;
  CURLOPT_DNS_LOCAL_IP6 = CURLOPTTYPE_STRINGPOINT + 223;
  CURLOPT_LOGIN_OPTIONS = CURLOPTTYPE_STRINGPOINT + 224;
  CURLOPT_SSL_ENABLE_NPN = CURLOPTTYPE_LONG + 225;
  CURLOPT_SSL_ENABLE_ALPN = CURLOPTTYPE_LONG + 226;
  CURLOPT_EXPECT_100_TIMEOUT_MS = CURLOPTTYPE_LONG + 227;
  CURLOPT_PROXYHEADER = CURLOPTTYPE_SLISTPOINT + 228;
  CURLOPT_HEADEROPT = CURLOPTTYPE_VALUES + 229;
  CURLOPT_PINNEDPUBLICKEY = CURLOPTTYPE_STRINGPOINT + 230;
  CURLOPT_UNIX_SOCKET_PATH = CURLOPTTYPE_STRINGPOINT + 231;
  CURLOPT_SSL_VERIFYSTATUS = CURLOPTTYPE_LONG + 232;
  CURLOPT_SSL_FALSESTART = CURLOPTTYPE_LONG + 233;
  CURLOPT_PATH_AS_IS = CURLOPTTYPE_LONG + 234;
  CURLOPT_PROXY_SERVICE_NAME = CURLOPTTYPE_STRINGPOINT + 235;
  CURLOPT_SERVICE_NAME = CURLOPTTYPE_STRINGPOINT + 236;
  CURLOPT_PIPEWAIT = CURLOPTTYPE_LONG + 237;
  CURLOPT_DEFAULT_PROTOCOL = CURLOPTTYPE_STRINGPOINT + 238;
  CURLOPT_STREAM_WEIGHT = CURLOPTTYPE_LONG + 239;
  CURLOPT_STREAM_DEPENDS = CURLOPTTYPE_OBJECTPOINT + 240;
  CURLOPT_STREAM_DEPENDS_E = CURLOPTTYPE_OBJECTPOINT + 241;
  CURLOPT_TFTP_NO_OPTIONS = CURLOPTTYPE_LONG + 242;
  CURLOPT_CONNECT_TO = CURLOPTTYPE_SLISTPOINT + 243;
  CURLOPT_TCP_FASTOPEN = CURLOPTTYPE_LONG + 244;
  CURLOPT_KEEP_SENDING_ON_ERROR = CURLOPTTYPE_LONG + 245;
  CURLOPT_PROXY_CAINFO = CURLOPTTYPE_STRINGPOINT + 246;
  CURLOPT_PROXY_CAPATH = CURLOPTTYPE_STRINGPOINT + 247;
  CURLOPT_PROXY_SSL_VERIFYPEER = CURLOPTTYPE_LONG + 248;
  CURLOPT_PROXY_SSL_VERIFYHOST = CURLOPTTYPE_LONG + 249;
  CURLOPT_PROXY_SSLVERSION = CURLOPTTYPE_VALUES + 250;
  CURLOPT_PROXY_TLSAUTH_USERNAME = CURLOPTTYPE_STRINGPOINT + 251;
  CURLOPT_PROXY_TLSAUTH_PASSWORD = CURLOPTTYPE_STRINGPOINT + 252;
  CURLOPT_PROXY_TLSAUTH_TYPE = CURLOPTTYPE_STRINGPOINT + 253;
  CURLOPT_PROXY_SSLCERT = CURLOPTTYPE_STRINGPOINT + 254;
  CURLOPT_PROXY_SSLCERTTYPE = CURLOPTTYPE_STRINGPOINT + 255;
  CURLOPT_PROXY_SSLKEY = CURLOPTTYPE_STRINGPOINT + 256;
  CURLOPT_PROXY_SSLKEYTYPE = CURLOPTTYPE_STRINGPOINT + 257;
  CURLOPT_PROXY_KEYPASSWD = CURLOPTTYPE_STRINGPOINT + 258;
  CURLOPT_PROXY_SSL_CIPHER_LIST = CURLOPTTYPE_STRINGPOINT + 259;
  CURLOPT_PROXY_CRLFILE = CURLOPTTYPE_STRINGPOINT + 260;
  CURLOPT_PROXY_SSL_OPTIONS = CURLOPTTYPE_LONG + 261;
  CURLOPT_PRE_PROXY = CURLOPTTYPE_STRINGPOINT + 262;
  CURLOPT_PROXY_PINNEDPUBLICKEY = CURLOPTTYPE_STRINGPOINT + 263;
  CURLOPT_ABSTRACT_UNIX_SOCKET = CURLOPTTYPE_STRINGPOINT + 264;
  CURLOPT_SUPPRESS_CONNECT_HEADERS = CURLOPTTYPE_LONG + 265;
  CURLOPT_REQUEST_TARGET = CURLOPTTYPE_STRINGPOINT + 266;
  CURLOPT_SOCKS5_AUTH = CURLOPTTYPE_LONG + 267;
  CURLOPT_SSH_COMPRESSION = CURLOPTTYPE_LONG + 268;
  CURLOPT_MIMEPOST = CURLOPTTYPE_OBJECTPOINT + 269;
  CURLOPT_TIMEVALUE_LARGE = CURLOPTTYPE_OFF_T + 270;
  CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS = CURLOPTTYPE_LONG + 271;
  CURLOPT_RESOLVER_START_FUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 272;
  CURLOPT_RESOLVER_START_DATA = CURLOPTTYPE_CBPOINT + 273;
  CURLOPT_HAPROXYPROTOCOL = CURLOPTTYPE_LONG + 274;
  CURLOPT_DNS_SHUFFLE_ADDRESSES = CURLOPTTYPE_LONG + 275;
  CURLOPT_TLS13_CIPHERS = CURLOPTTYPE_STRINGPOINT + 276;
  CURLOPT_PROXY_TLS13_CIPHERS = CURLOPTTYPE_STRINGPOINT + 277;
  CURLOPT_DISALLOW_USERNAME_IN_URL = CURLOPTTYPE_LONG + 278;
  CURLOPT_DOH_URL = CURLOPTTYPE_STRINGPOINT + 279;
  CURLOPT_UPLOAD_BUFFERSIZE = CURLOPTTYPE_LONG + 280;
  CURLOPT_UPKEEP_INTERVAL_MS = CURLOPTTYPE_LONG + 281;
  CURLOPT_CURLU = CURLOPTTYPE_OBJECTPOINT + 282;
  CURLOPT_TRAILERFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 283;
  CURLOPT_TRAILERDATA = CURLOPTTYPE_CBPOINT + 284;
  CURLOPT_HTTP09_ALLOWED = CURLOPTTYPE_LONG + 285;
  CURLOPT_ALTSVC_CTRL = CURLOPTTYPE_LONG + 286;
  CURLOPT_ALTSVC = CURLOPTTYPE_STRINGPOINT + 287;
  CURLOPT_MAXAGE_CONN = CURLOPTTYPE_LONG + 288;
  CURLOPT_SASL_AUTHZID = CURLOPTTYPE_STRINGPOINT + 289;
  CURLOPT_MAIL_RCPT_ALLOWFAILS = CURLOPTTYPE_LONG + 290;
  CURLOPT_SSLCERT_BLOB = CURLOPTTYPE_BLOB + 291;
  CURLOPT_SSLKEY_BLOB = CURLOPTTYPE_BLOB + 292;
  CURLOPT_PROXY_SSLCERT_BLOB = CURLOPTTYPE_BLOB + 293;
  CURLOPT_PROXY_SSLKEY_BLOB = CURLOPTTYPE_BLOB + 294;
  CURLOPT_ISSUERCERT_BLOB = CURLOPTTYPE_BLOB + 295;
  CURLOPT_PROXY_ISSUERCERT = CURLOPTTYPE_STRINGPOINT + 296;
  CURLOPT_PROXY_ISSUERCERT_BLOB = CURLOPTTYPE_BLOB + 297;
  CURLOPT_SSL_EC_CURVES = CURLOPTTYPE_STRINGPOINT + 298;
  CURLOPT_HSTS_CTRL = CURLOPTTYPE_LONG + 299;
  CURLOPT_HSTS = CURLOPTTYPE_STRINGPOINT + 300;
  CURLOPT_HSTSREADFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 301;
  CURLOPT_HSTSREADDATA = CURLOPTTYPE_CBPOINT + 302;
  CURLOPT_HSTSWRITEFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 303;
  CURLOPT_HSTSWRITEDATA = CURLOPTTYPE_CBPOINT + 304;
  CURLOPT_AWS_SIGV4 = CURLOPTTYPE_STRINGPOINT + 305;
  CURLOPT_DOH_SSL_VERIFYPEER = CURLOPTTYPE_LONG + 306;
  CURLOPT_DOH_SSL_VERIFYHOST = CURLOPTTYPE_LONG + 307;
  CURLOPT_DOH_SSL_VERIFYSTATUS = CURLOPTTYPE_LONG + 308;
  CURLOPT_CAINFO_BLOB = CURLOPTTYPE_BLOB + 309;
  CURLOPT_PROXY_CAINFO_BLOB = CURLOPTTYPE_BLOB + 310;
  CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256 = CURLOPTTYPE_STRINGPOINT + 311;
  CURLOPT_PREREQFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 312;
  CURLOPT_PREREQDATA = CURLOPTTYPE_CBPOINT + 313;
  CURLOPT_MAXLIFETIME_CONN = CURLOPTTYPE_LONG + 314;
  CURLOPT_MIME_OPTIONS = CURLOPTTYPE_LONG + 315;
  CURLOPT_SSH_HOSTKEYFUNCTION = CURLOPTTYPE_FUNCTIONPOINT + 316;
  CURLOPT_SSH_HOSTKEYDATA = CURLOPTTYPE_CBPOINT + 317;
  CURLOPT_PROTOCOLS_STR = CURLOPTTYPE_STRINGPOINT + 318;
  CURLOPT_REDIR_PROTOCOLS_STR = CURLOPTTYPE_STRINGPOINT + 319;
  CURLOPT_WS_OPTIONS = CURLOPTTYPE_LONG + 320;
  CURLOPT_CA_CACHE_TIMEOUT = CURLOPTTYPE_LONG + 321;
  CURLOPT_QUICK_EXIT = CURLOPTTYPE_LONG + 322;
  CURLOPT_HAPROXY_CLIENT_IP = CURLOPTTYPE_STRINGPOINT + 323;
  CURLOPT_LASTENTRY = (CURLOPTTYPE_STRINGPOINT + 323) + 1;

const
  CURLE_OBSOLETE16 = CURLE_HTTP2;
  CURLE_OBSOLETE10 = CURLE_FTP_ACCEPT_FAILED;
  CURLE_OBSOLETE12 = CURLE_FTP_ACCEPT_TIMEOUT;
  CURLOPT_ENCODING = CURLOPT_ACCEPT_ENCODING;
  CURLE_FTP_WEIRD_SERVER_REPLY = CURLE_WEIRD_SERVER_REPLY;
  CURLE_SSL_CACERT = CURLE_PEER_FAILED_VERIFICATION;
  CURLE_UNKNOWN_TELNET_OPTION = CURLE_UNKNOWN_OPTION;
  CURLE_TELNET_OPTION_SYNTAX = CURLE_SETOPT_OPTION_SYNTAX;
  CURLE_SSL_PEER_CERTIFICATE = CURLE_PEER_FAILED_VERIFICATION;
  CURLE_OBSOLETE = CURLE_OBSOLETE50;
  CURLE_BAD_PASSWORD_ENTERED = CURLE_OBSOLETE46;
  CURLE_BAD_CALLING_ORDER = CURLE_OBSOLETE44;
  CURLE_FTP_USER_PASSWORD_INCORRECT = CURLE_OBSOLETE10;
  CURLE_FTP_CANT_RECONNECT = CURLE_OBSOLETE16;
  CURLE_FTP_COULDNT_GET_SIZE = CURLE_OBSOLETE32;
  CURLE_FTP_COULDNT_SET_ASCII = CURLE_OBSOLETE29;
  CURLE_FTP_WEIRD_USER_REPLY = CURLE_OBSOLETE12;
  CURLE_FTP_WRITE_ERROR = CURLE_OBSOLETE20;
  CURLE_LIBRARY_NOT_FOUND = CURLE_OBSOLETE40;
  CURLE_MALFORMAT_USER = CURLE_OBSOLETE24;
  CURLE_SHARE_IN_USE = CURLE_OBSOLETE57;
  CURLE_URL_MALFORMAT_USER = CURLE_NOT_BUILT_IN;
  CURLE_FTP_ACCESS_DENIED = CURLE_REMOTE_ACCESS_DENIED;
  CURLE_FTP_COULDNT_SET_BINARY = CURLE_FTP_COULDNT_SET_TYPE;
  CURLE_FTP_QUOTE_ERROR = CURLE_QUOTE_ERROR;
  CURLE_TFTP_DISKFULL = CURLE_REMOTE_DISK_FULL;
  CURLE_TFTP_EXISTS = CURLE_REMOTE_FILE_EXISTS;
  CURLE_HTTP_RANGE_ERROR = CURLE_RANGE_ERROR;
  CURLE_FTP_SSL_FAILED = CURLE_USE_SSL_FAILED;
  CURLE_OPERATION_TIMEOUTED = CURLE_OPERATION_TIMEDOUT;
  CURLE_HTTP_NOT_FOUND = CURLE_HTTP_RETURNED_ERROR;
  CURLE_HTTP_PORT_FAILED = CURLE_INTERFACE_FAILED;
  CURLE_FTP_COULDNT_STOR_FILE = CURLE_UPLOAD_FAILED;
  CURLE_FTP_PARTIAL_FILE = CURLE_PARTIAL_FILE;
  CURLE_FTP_BAD_DOWNLOAD_RESUME = CURLE_BAD_DOWNLOAD_RESUME;
  CURLE_LDAP_INVALID_URL = CURLE_OBSOLETE62;
  CURLE_CONV_REQD = CURLE_OBSOLETE76;
  CURLE_CONV_FAILED = CURLE_OBSOLETE75;
  CURLE_ALREADY_COMPLETE = 99999;
  CURLOPT_FILE = CURLOPT_WRITEDATA;
  CURLOPT_INFILE = CURLOPT_READDATA;
  CURLOPT_WRITEHEADER = CURLOPT_HEADERDATA;
  CURLOPT_WRITEINFO = CURLOPT_OBSOLETE40;
  CURLOPT_CLOSEPOLICY = CURLOPT_OBSOLETE72;

const
  CURLOPT_PROGRESSDATA = CURLOPT_XFERINFODATA;
  CURLOPT_POST301 = CURLOPT_POSTREDIR;
  CURLOPT_SSLKEYPASSWD = CURLOPT_KEYPASSWD;
  CURLOPT_FTPAPPEND = CURLOPT_APPEND;
  CURLOPT_FTPLISTONLY = CURLOPT_DIRLISTONLY;
  CURLOPT_FTP_SSL = CURLOPT_USE_SSL;
  CURLOPT_SSLCERTPASSWD = CURLOPT_KEYPASSWD;
  CURLOPT_KRB4LEVEL = CURLOPT_KRBLEVEL;
  CURLOPT_FTP_RESPONSE_TIMEOUT = CURLOPT_SERVER_RESPONSE_TIMEOUT;
  CURLOPT_MAIL_RCPT_ALLLOWFAILS = CURLOPT_MAIL_RCPT_ALLOWFAILS;

const
  CURL_IPRESOLVE_WHATEVER = 0;
  CURL_IPRESOLVE_V4 = 1;
  CURL_IPRESOLVE_V6 = 2;
  CURLOPT_RTSPHEADER = CURLOPT_HTTPHEADER;

const
  CURL_HTTP_VERSION_NONE = 0;
  CURL_HTTP_VERSION_1_0 = 1;
  CURL_HTTP_VERSION_1_1 = 2;
  CURL_HTTP_VERSION_2_0 = 3;
  CURL_HTTP_VERSION_2TLS = 4;
  CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE = 5;
  CURL_HTTP_VERSION_3 = 30;
  CURL_HTTP_VERSION_3ONLY = 31;
  CURL_HTTP_VERSION_LAST = 32;
  CURL_HTTP_VERSION_2 = CURL_HTTP_VERSION_2_0;

const
  CURL_RTSPREQ_NONE = 0;
  CURL_RTSPREQ_OPTIONS = 1;
  CURL_RTSPREQ_DESCRIBE = 2;
  CURL_RTSPREQ_ANNOUNCE = 3;
  CURL_RTSPREQ_SETUP = 4;
  CURL_RTSPREQ_PLAY = 5;
  CURL_RTSPREQ_PAUSE = 6;
  CURL_RTSPREQ_TEARDOWN = 7;
  CURL_RTSPREQ_GET_PARAMETER = 8;
  CURL_RTSPREQ_SET_PARAMETER = 9;
  CURL_RTSPREQ_RECORD = 10;
  CURL_RTSPREQ_RECEIVE = 11;
  CURL_RTSPREQ_LAST = 12;

type
  TCURL_NETRC_OPTION = longint;

const
  CURL_NETRC_IGNORED = 0;
  CURL_NETRC_OPTIONAL = 1;
  CURL_NETRC_REQUIRED = 2;
  CURL_NETRC_LAST = 3;

const
  CURL_SSLVERSION_DEFAULT = 0;
  CURL_SSLVERSION_TLSv1 = 1;
  CURL_SSLVERSION_SSLv2 = 2;
  CURL_SSLVERSION_SSLv3 = 3;
  CURL_SSLVERSION_TLSv1_0 = 4;
  CURL_SSLVERSION_TLSv1_1 = 5;
  CURL_SSLVERSION_TLSv1_2 = 6;
  CURL_SSLVERSION_TLSv1_3 = 7;
  CURL_SSLVERSION_LAST = 8;

const
  CURL_SSLVERSION_MAX_NONE = 0;
  CURL_SSLVERSION_MAX_DEFAULT = CURL_SSLVERSION_TLSv1 shl 16;
  CURL_SSLVERSION_MAX_TLSv1_0 = CURL_SSLVERSION_TLSv1_0 shl 16;
  CURL_SSLVERSION_MAX_TLSv1_1 = CURL_SSLVERSION_TLSv1_1 shl 16;
  CURL_SSLVERSION_MAX_TLSv1_2 = CURL_SSLVERSION_TLSv1_2 shl 16;
  CURL_SSLVERSION_MAX_TLSv1_3 = CURL_SSLVERSION_TLSv1_3 shl 16;
  CURL_SSLVERSION_MAX_LAST = CURL_SSLVERSION_LAST shl 16;

type
  TCURL_TLSAUTH = longint;

const
  CURL_TLSAUTH_NONE = 0;
  CURL_TLSAUTH_SRP = 1;
  CURL_TLSAUTH_LAST = 2;

const
  CURL_REDIR_GET_ALL = 0;
  CURL_REDIR_POST_301 = 1;
  CURL_REDIR_POST_302 = 2;
  CURL_REDIR_POST_303 = 4;
  CURL_REDIR_POST_ALL = (CURL_REDIR_POST_301 or CURL_REDIR_POST_302) or CURL_REDIR_POST_303;

type
  Pcurl_TimeCond = ^Tcurl_TimeCond;
  Tcurl_TimeCond = longint;

const
  CURL_TIMECOND_NONE = 0;
  CURL_TIMECOND_IFMODSINCE = 1;
  CURL_TIMECOND_IFUNMODSINCE = 2;
  CURL_TIMECOND_LASTMOD = 3;
  CURL_TIMECOND_LAST = 4;

const
  CURL_ZERO_TERMINATED = Tsize_t(-(1));

function curl_strequal(s1: pchar; s2: pchar): longint; cdecl; external libcurl;
function curl_strnequal(s1: pchar; s2: pchar; n: Tsize_t): longint; cdecl; external libcurl;

type
  Tcurl_mime = record
  end;
  Pcurl_mime = ^Tcurl_mime;
  Tcurl_mimepart = record
  end;
  Pcurl_mimepart = ^Tcurl_mimepart;

function curl_mime_init(easy: PCURL): Pcurl_mime; cdecl; external libcurl;
procedure curl_mime_free(mime: Pcurl_mime); cdecl; external libcurl;
function curl_mime_addpart(mime: Pcurl_mime): Pcurl_mimepart; cdecl; external libcurl;
function curl_mime_name(part: Pcurl_mimepart; name: pchar): TCURLcode; cdecl; external libcurl;
function curl_mime_filename(part: Pcurl_mimepart; filename: pchar): TCURLcode; cdecl; external libcurl;
function curl_mime_type(part: Pcurl_mimepart; mimetype: pchar): TCURLcode; cdecl; external libcurl;
function curl_mime_encoder(part: Pcurl_mimepart; encoding: pchar): TCURLcode; cdecl; external libcurl;
function curl_mime_data(part: Pcurl_mimepart; data: pchar; datasize: Tsize_t): TCURLcode; cdecl; external libcurl;
function curl_mime_filedata(part: Pcurl_mimepart; filename: pchar): TCURLcode; cdecl; external libcurl;
function curl_mime_subparts(part: Pcurl_mimepart; subparts: Pcurl_mime): TCURLcode; cdecl; external libcurl;
function curl_mime_headers(part: Pcurl_mimepart; headers: Pcurl_slist; take_ownership: longint): TCURLcode; cdecl; external libcurl;

type
  TCURLformoption = longint;
  PCURLformoption = ^TCURLformoption;

const
  CURLFORM_NOTHING = 0;
  CURLFORM_COPYNAME = 1;
  CURLFORM_PTRNAME = 2;
  CURLFORM_NAMELENGTH = 3;
  CURLFORM_COPYCONTENTS = 4;
  CURLFORM_PTRCONTENTS = 5;
  CURLFORM_CONTENTSLENGTH = 6;
  CURLFORM_FILECONTENT = 7;
  CURLFORM_ARRAY = 8;
  CURLFORM_OBSOLETE = 9;
  CURLFORM_FILE = 10;
  CURLFORM_BUFFER = 11;
  CURLFORM_BUFFERPTR = 12;
  CURLFORM_BUFFERLENGTH = 13;
  CURLFORM_CONTENTTYPE = 14;
  CURLFORM_CONTENTHEADER = 15;
  CURLFORM_FILENAME = 16;
  CURLFORM_END = 17;
  CURLFORM_OBSOLETE2 = 18;
  CURLFORM_STREAM = 19;
  CURLFORM_CONTENTLEN = 20;
  CURLFORM_LASTENTRY = 21;

type
  Tcurl_forms = record
    option: TCURLformoption;
    value: pchar;
  end;
  Pcurl_forms = ^Tcurl_forms;

  PCURLFORMcode = ^TCURLFORMcode;
  TCURLFORMcode = longint;

const
  CURL_FORMADD_OK = 0;
  CURL_FORMADD_MEMORY = 1;
  CURL_FORMADD_OPTION_TWICE = 2;
  CURL_FORMADD_NULL = 3;
  CURL_FORMADD_UNKNOWN_OPTION = 4;
  CURL_FORMADD_INCOMPLETE = 5;
  CURL_FORMADD_ILLEGAL_ARRAY = 6;
  CURL_FORMADD_DISABLED = 7;
  CURL_FORMADD_LAST = 8;

function curl_formadd(httppost: PPcurl_httppost; last_post: PPcurl_httppost): TCURLFORMcode; cdecl; varargs; external libcurl;

type
  Tcurl_formget_callback = function(arg: pointer; buf: pchar; len: Tsize_t): Tsize_t; cdecl;

function curl_formget(form: Pcurl_httppost; arg: pointer; append: Tcurl_formget_callback): longint; cdecl; external libcurl;
procedure curl_formfree(form: Pcurl_httppost); cdecl; external libcurl;
function curl_getenv(variable: pchar): pchar; cdecl; external libcurl;
function curl_version: pchar; cdecl; external libcurl;
function curl_easy_escape(handle: PCURL; _string: pchar; length: longint): pchar; cdecl; external libcurl;
function curl_escape(_string: pchar; length: longint): pchar; cdecl; external libcurl;
function curl_easy_unescape(handle: PCURL; _string: pchar; length: longint; outlength: Plongint): pchar; cdecl; external libcurl;
function curl_unescape(_string: pchar; length: longint): pchar; cdecl; external libcurl;
procedure curl_free(p: pointer); cdecl; external libcurl;
function curl_global_init(flags: longint): TCURLcode; cdecl; external libcurl;
function curl_global_init_mem(flags: longint; m: Tcurl_malloc_callback; f: Tcurl_free_callback; r: Tcurl_realloc_callback; s: Tcurl_strdup_callback;
  c: Tcurl_calloc_callback): TCURLcode; cdecl; external libcurl;
procedure curl_global_cleanup; cdecl; external libcurl;
function curl_global_trace(config: pchar): TCURLcode; cdecl; external libcurl;

type
  Tcurl_ssl_backend = record
    id: Tcurl_sslbackend;
    name: pchar;
  end;
  Pcurl_ssl_backend = ^Tcurl_ssl_backend;
  PPcurl_ssl_backend = ^Pcurl_ssl_backend;
  PPPcurl_ssl_backend = ^PPcurl_ssl_backend;

type
  PCURLsslset = ^TCURLsslset;
  TCURLsslset = longint;

const
  CURLSSLSET_OK = 0;
  CURLSSLSET_UNKNOWN_BACKEND = 1;
  CURLSSLSET_TOO_LATE = 2;
  CURLSSLSET_NO_BACKENDS = 3;

function curl_global_sslset(id: Tcurl_sslbackend; name: pchar; avail: PPPcurl_ssl_backend): TCURLsslset; cdecl; external libcurl;
function curl_slist_append(list: Pcurl_slist; data: pchar): Pcurl_slist; cdecl; external libcurl;
procedure curl_slist_free_all(list: Pcurl_slist); cdecl; external libcurl;
function curl_getdate(p: pchar; unused: Ptime_t): Ttime_t; cdecl; external libcurl;

type
  Tcurl_certinfo = record
    num_of_certs: longint;
    certinfo: ^Pcurl_slist;
  end;
  Pcurl_certinfo = ^Tcurl_certinfo;

  Tcurl_tlssessioninfo = record
    backend: Tcurl_sslbackend;
    internals: pointer;
  end;
  Pcurl_tlssessioninfo = ^Tcurl_tlssessioninfo;

const
  CURLINFO_STRING = $100000;
  CURLINFO_LONG = $200000;
  CURLINFO_DOUBLE = $300000;
  CURLINFO_SLIST = $400000;
  CURLINFO_PTR = $400000;
  CURLINFO_SOCKET = $500000;
  CURLINFO_OFF_T = $600000;
  CURLINFO_MASK = $0fffff;
  CURLINFO_TYPEMASK = $f00000;

type
  PCURLINFO = ^TCURLINFO;
  TCURLINFO = longint;

const
  CURLINFO_NONE = 0;
  CURLINFO_EFFECTIVE_URL = CURLINFO_STRING + 1;
  CURLINFO_RESPONSE_CODE = CURLINFO_LONG + 2;
  CURLINFO_TOTAL_TIME = CURLINFO_DOUBLE + 3;
  CURLINFO_NAMELOOKUP_TIME = CURLINFO_DOUBLE + 4;
  CURLINFO_CONNECT_TIME = CURLINFO_DOUBLE + 5;
  CURLINFO_PRETRANSFER_TIME = CURLINFO_DOUBLE + 6;
  CURLINFO_SIZE_UPLOAD = CURLINFO_DOUBLE + 7;
  CURLINFO_SIZE_UPLOAD_T = CURLINFO_OFF_T + 7;
  CURLINFO_SIZE_DOWNLOAD = CURLINFO_DOUBLE + 8;
  CURLINFO_SIZE_DOWNLOAD_T = CURLINFO_OFF_T + 8;
  CURLINFO_SPEED_DOWNLOAD = CURLINFO_DOUBLE + 9;
  CURLINFO_SPEED_DOWNLOAD_T = CURLINFO_OFF_T + 9;
  CURLINFO_SPEED_UPLOAD = CURLINFO_DOUBLE + 10;
  CURLINFO_SPEED_UPLOAD_T = CURLINFO_OFF_T + 10;
  CURLINFO_HEADER_SIZE = CURLINFO_LONG + 11;
  CURLINFO_REQUEST_SIZE = CURLINFO_LONG + 12;
  CURLINFO_SSL_VERIFYRESULT = CURLINFO_LONG + 13;
  CURLINFO_FILETIME = CURLINFO_LONG + 14;
  CURLINFO_FILETIME_T = CURLINFO_OFF_T + 14;
  CURLINFO_CONTENT_LENGTH_DOWNLOAD = CURLINFO_DOUBLE + 15;
  CURLINFO_CONTENT_LENGTH_DOWNLOAD_T = CURLINFO_OFF_T + 15;
  CURLINFO_CONTENT_LENGTH_UPLOAD = CURLINFO_DOUBLE + 16;
  CURLINFO_CONTENT_LENGTH_UPLOAD_T = CURLINFO_OFF_T + 16;
  CURLINFO_STARTTRANSFER_TIME = CURLINFO_DOUBLE + 17;
  CURLINFO_CONTENT_TYPE = CURLINFO_STRING + 18;
  CURLINFO_REDIRECT_TIME = CURLINFO_DOUBLE + 19;
  CURLINFO_REDIRECT_COUNT = CURLINFO_LONG + 20;
  CURLINFO_PRIVATE = CURLINFO_STRING + 21;
  CURLINFO_HTTP_CONNECTCODE = CURLINFO_LONG + 22;
  CURLINFO_HTTPAUTH_AVAIL = CURLINFO_LONG + 23;
  CURLINFO_PROXYAUTH_AVAIL = CURLINFO_LONG + 24;
  CURLINFO_OS_ERRNO = CURLINFO_LONG + 25;
  CURLINFO_NUM_CONNECTS = CURLINFO_LONG + 26;
  CURLINFO_SSL_ENGINES = CURLINFO_SLIST + 27;
  CURLINFO_COOKIELIST = CURLINFO_SLIST + 28;
  CURLINFO_LASTSOCKET = CURLINFO_LONG + 29;
  CURLINFO_FTP_ENTRY_PATH = CURLINFO_STRING + 30;
  CURLINFO_REDIRECT_URL = CURLINFO_STRING + 31;
  CURLINFO_PRIMARY_IP = CURLINFO_STRING + 32;
  CURLINFO_APPCONNECT_TIME = CURLINFO_DOUBLE + 33;
  CURLINFO_CERTINFO = CURLINFO_PTR + 34;
  CURLINFO_CONDITION_UNMET = CURLINFO_LONG + 35;
  CURLINFO_RTSP_SESSION_ID = CURLINFO_STRING + 36;
  CURLINFO_RTSP_CLIENT_CSEQ = CURLINFO_LONG + 37;
  CURLINFO_RTSP_SERVER_CSEQ = CURLINFO_LONG + 38;
  CURLINFO_RTSP_CSEQ_RECV = CURLINFO_LONG + 39;
  CURLINFO_PRIMARY_PORT = CURLINFO_LONG + 40;
  CURLINFO_LOCAL_IP = CURLINFO_STRING + 41;
  CURLINFO_LOCAL_PORT = CURLINFO_LONG + 42;
  CURLINFO_TLS_SESSION = CURLINFO_PTR + 43;
  CURLINFO_ACTIVESOCKET = CURLINFO_SOCKET + 44;
  CURLINFO_TLS_SSL_PTR = CURLINFO_PTR + 45;
  CURLINFO_HTTP_VERSION = CURLINFO_LONG + 46;
  CURLINFO_PROXY_SSL_VERIFYRESULT = CURLINFO_LONG + 47;
  CURLINFO_PROTOCOL = CURLINFO_LONG + 48;
  CURLINFO_SCHEME = CURLINFO_STRING + 49;
  CURLINFO_TOTAL_TIME_T = CURLINFO_OFF_T + 50;
  CURLINFO_NAMELOOKUP_TIME_T = CURLINFO_OFF_T + 51;
  CURLINFO_CONNECT_TIME_T = CURLINFO_OFF_T + 52;
  CURLINFO_PRETRANSFER_TIME_T = CURLINFO_OFF_T + 53;
  CURLINFO_STARTTRANSFER_TIME_T = CURLINFO_OFF_T + 54;
  CURLINFO_REDIRECT_TIME_T = CURLINFO_OFF_T + 55;
  CURLINFO_APPCONNECT_TIME_T = CURLINFO_OFF_T + 56;
  CURLINFO_RETRY_AFTER = CURLINFO_OFF_T + 57;
  CURLINFO_EFFECTIVE_METHOD = CURLINFO_STRING + 58;
  CURLINFO_PROXY_ERROR = CURLINFO_LONG + 59;
  CURLINFO_REFERER = CURLINFO_STRING + 60;
  CURLINFO_CAINFO = CURLINFO_STRING + 61;
  CURLINFO_CAPATH = CURLINFO_STRING + 62;
  CURLINFO_XFER_ID = CURLINFO_OFF_T + 63;
  CURLINFO_CONN_ID = CURLINFO_OFF_T + 64;
  CURLINFO_LASTONE = 64;

const
  CURLINFO_HTTP_CODE = CURLINFO_RESPONSE_CODE;

type
  Pcurl_closepolicy = ^Tcurl_closepolicy;
  Tcurl_closepolicy = longint;

const
  CURLCLOSEPOLICY_NONE = 0;
  CURLCLOSEPOLICY_OLDEST = 1;
  CURLCLOSEPOLICY_LEAST_RECENTLY_USED = 2;
  CURLCLOSEPOLICY_LEAST_TRAFFIC = 3;
  CURLCLOSEPOLICY_SLOWEST = 4;
  CURLCLOSEPOLICY_CALLBACK = 5;
  CURLCLOSEPOLICY_LAST = 6;

const
  CURL_GLOBAL_SSL = 1 shl 0;
  CURL_GLOBAL_WIN32 = 1 shl 1;
  CURL_GLOBAL_ALL = CURL_GLOBAL_SSL or CURL_GLOBAL_WIN32;
  CURL_GLOBAL_NOTHING = 0;
  CURL_GLOBAL_DEFAULT = CURL_GLOBAL_ALL;
  CURL_GLOBAL_ACK_EINTR = 1 shl 2;

type
  Pcurl_lock_data = ^Tcurl_lock_data;
  Tcurl_lock_data = longint;

const
  CURL_LOCK_DATA_NONE = 0;
  CURL_LOCK_DATA_SHARE = 1;
  CURL_LOCK_DATA_COOKIE = 2;
  CURL_LOCK_DATA_DNS = 3;
  CURL_LOCK_DATA_SSL_SESSION = 4;
  CURL_LOCK_DATA_CONNECT = 5;
  CURL_LOCK_DATA_PSL = 6;
  CURL_LOCK_DATA_HSTS = 7;
  CURL_LOCK_DATA_LAST = 8;

type
  Pcurl_lock_access = ^Tcurl_lock_access;
  Tcurl_lock_access = longint;

const
  CURL_LOCK_ACCESS_NONE = 0;
  CURL_LOCK_ACCESS_SHARED = 1;
  CURL_LOCK_ACCESS_SINGLE = 2;
  CURL_LOCK_ACCESS_LAST = 3;

type
  Tcurl_lock_function = procedure(handle: PCURL; data: Tcurl_lock_data; locktype: Tcurl_lock_access; userptr: pointer); cdecl;
  Tcurl_unlock_function = procedure(handle: PCURL; data: Tcurl_lock_data; userptr: pointer); cdecl;

  PCURLSHcode = ^TCURLSHcode;
  TCURLSHcode = longint;

const
  CURLSHE_OK = 0;
  CURLSHE_BAD_OPTION = 1;
  CURLSHE_IN_USE = 2;
  CURLSHE_INVALID = 3;
  CURLSHE_NOMEM = 4;
  CURLSHE_NOT_BUILT_IN = 5;
  CURLSHE_LAST = 6;

type
  PCURLSHoption = ^TCURLSHoption;
  TCURLSHoption = longint;

const
  CURLSHOPT_NONE = 0;
  CURLSHOPT_SHARE = 1;
  CURLSHOPT_UNSHARE = 2;
  CURLSHOPT_LOCKFUNC = 3;
  CURLSHOPT_UNLOCKFUNC = 4;
  CURLSHOPT_USERDATA = 5;
  CURLSHOPT_LAST = 6;

function curl_share_init: PCURLSH; cdecl; external libcurl;
function curl_share_setopt(share: PCURLSH; option: TCURLSHoption; args: array of const): TCURLSHcode; cdecl; external libcurl;
function curl_share_setopt(share: PCURLSH; option: TCURLSHoption): TCURLSHcode; cdecl; external libcurl;
function curl_share_cleanup(share: PCURLSH): TCURLSHcode; cdecl; external libcurl;

type
  PCURLversion = ^TCURLversion;
  TCURLversion = longint;

const
  CURLVERSION_FIRST = 0;
  CURLVERSION_SECOND = 1;
  CURLVERSION_THIRD = 2;
  CURLVERSION_FOURTH = 3;
  CURLVERSION_FIFTH = 4;
  CURLVERSION_SIXTH = 5;
  CURLVERSION_SEVENTH = 6;
  CURLVERSION_EIGHTH = 7;
  CURLVERSION_NINTH = 8;
  CURLVERSION_TENTH = 9;
  CURLVERSION_ELEVENTH = 10;
  CURLVERSION_LAST = 11;

const
  CURLVERSION_NOW = CURLVERSION_ELEVENTH;

type
  Tcurl_version_info_data = record
    age: TCURLversion;
    version: pchar;
    version_num: dword;
    host: pchar;
    features: longint;
    ssl_version: pchar;
    ssl_version_num: longint;
    libz_version: pchar;
    protocols: ^pchar;
    ares: pchar;
    ares_num: longint;
    libidn: pchar;
    iconv_ver_num: longint;
    libssh_version: pchar;
    brotli_ver_num: dword;
    brotli_version: pchar;
    nghttp2_ver_num: dword;
    nghttp2_version: pchar;
    quic_version: pchar;
    cainfo: pchar;
    capath: pchar;
    zstd_ver_num: dword;
    zstd_version: pchar;
    hyper_version: pchar;
    gsasl_version: pchar;
    feature_names: ^pchar;
  end;
  Pcurl_version_info_data = ^Tcurl_version_info_data;

const
  CURL_VERSION_IPV6 = 1 shl 0;
  CURL_VERSION_KERBEROS4 = 1 shl 1;
  CURL_VERSION_SSL = 1 shl 2;
  CURL_VERSION_LIBZ = 1 shl 3;
  CURL_VERSION_NTLM = 1 shl 4;
  CURL_VERSION_GSSNEGOTIATE = 1 shl 5;
  CURL_VERSION_DEBUG = 1 shl 6;
  CURL_VERSION_ASYNCHDNS = 1 shl 7;
  CURL_VERSION_SPNEGO = 1 shl 8;
  CURL_VERSION_LARGEFILE = 1 shl 9;
  CURL_VERSION_IDN = 1 shl 10;
  CURL_VERSION_SSPI = 1 shl 11;
  CURL_VERSION_CONV = 1 shl 12;
  CURL_VERSION_CURLDEBUG = 1 shl 13;
  CURL_VERSION_TLSAUTH_SRP = 1 shl 14;
  CURL_VERSION_NTLM_WB = 1 shl 15;
  CURL_VERSION_HTTP2 = 1 shl 16;
  CURL_VERSION_GSSAPI = 1 shl 17;
  CURL_VERSION_KERBEROS5 = 1 shl 18;
  CURL_VERSION_UNIX_SOCKETS = 1 shl 19;
  CURL_VERSION_PSL = 1 shl 20;
  CURL_VERSION_HTTPS_PROXY = 1 shl 21;
  CURL_VERSION_MULTI_SSL = 1 shl 22;
  CURL_VERSION_BROTLI = 1 shl 23;
  CURL_VERSION_ALTSVC = 1 shl 24;
  CURL_VERSION_HTTP3 = 1 shl 25;
  CURL_VERSION_ZSTD = 1 shl 26;
  CURL_VERSION_UNICODE = 1 shl 27;
  CURL_VERSION_HSTS = 1 shl 28;
  CURL_VERSION_GSASL = 1 shl 29;
  CURL_VERSION_THREADSAFE = 1 shl 30;

function curl_version_info(para1: TCURLversion): Pcurl_version_info_data; cdecl; external libcurl;
function curl_easy_strerror(para1: TCURLcode): pchar; cdecl; external libcurl;
function curl_share_strerror(para1: TCURLSHcode): pchar; cdecl; external libcurl;
function curl_easy_pause(handle: PCURL; bitmask: longint): TCURLcode; cdecl; external libcurl;

const
  CURLPAUSE_RECV = 1 shl 0;
  CURLPAUSE_RECV_CONT = 0;
  CURLPAUSE_SEND = 1 shl 2;
  CURLPAUSE_SEND_CONT = 0;
  CURLPAUSE_ALL = CURLPAUSE_RECV or CURLPAUSE_SEND;
  CURLPAUSE_CONT = CURLPAUSE_RECV_CONT or CURLPAUSE_SEND_CONT;

  // === Konventiert am: 10-7-25 19:56:39 ===


implementation



end.
