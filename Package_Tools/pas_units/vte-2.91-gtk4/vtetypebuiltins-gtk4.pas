unit vtetypebuiltins-gtk4;

interface

uses
  fp_glib2, fp_GTK4;

{$IFDEF FPC}
{$PACKRECORDS C}
{$ENDIF}


{ This file is generated by glib-mkenums, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses.  }
(** unsupported pragma#pragma once*)
{$if !defined (__VTE_VTE_H_INSIDE__) && !defined (VTE_COMPILATION)}
{$error "Only <vte/vte.h> can be included directly."}
{$endif}
{$include <glib-object.h>}
{$include "vtemacros.h"}
{ enumerations from "vteenums.h"  }

function vte_cursor_blink_mode_get_type:TGType;cdecl;external libvte_2_91_gtk4 ;
{ was #define dname def_expr }
function VTE_TYPE_CURSOR_BLINK_MODE : longint; { return type might be wrong }

function vte_cursor_shape_get_type:TGType;cdecl;external libvte_2_91_gtk4 ;
{ was #define dname def_expr }
function VTE_TYPE_CURSOR_SHAPE : longint; { return type might be wrong }

function vte_text_blink_mode_get_type:TGType;cdecl;external libvte_2_91_gtk4 ;
{ was #define dname def_expr }
function VTE_TYPE_TEXT_BLINK_MODE : longint; { return type might be wrong }

function vte_erase_binding_get_type:TGType;cdecl;external libvte_2_91_gtk4 ;
{ was #define dname def_expr }
function VTE_TYPE_ERASE_BINDING : longint; { return type might be wrong }

function vte_pty_error_get_type:TGType;cdecl;external libvte_2_91_gtk4 ;
{ was #define dname def_expr }
function VTE_TYPE_PTY_ERROR : longint; { return type might be wrong }

function vte_pty_flags_get_type:TGType;cdecl;external libvte_2_91_gtk4 ;
{ was #define dname def_expr }
function VTE_TYPE_PTY_FLAGS : longint; { return type might be wrong }

function vte_write_flags_get_type:TGType;cdecl;external libvte_2_91_gtk4 ;
{ was #define dname def_expr }
function VTE_TYPE_WRITE_FLAGS : longint; { return type might be wrong }

function vte_regex_error_get_type:TGType;cdecl;external libvte_2_91_gtk4 ;
{ was #define dname def_expr }
function VTE_TYPE_REGEX_ERROR : longint; { return type might be wrong }

function vte_format_get_type:TGType;cdecl;external libvte_2_91_gtk4 ;
{ was #define dname def_expr }
function VTE_TYPE_FORMAT : longint; { return type might be wrong }

function vte_align_get_type:TGType;cdecl;external libvte_2_91_gtk4 ;
{ was #define dname def_expr }
function VTE_TYPE_ALIGN : longint; { return type might be wrong }

{ Generated data ends here  }

// === Konventiert am: 3-5-25 17:07:03 ===


implementation


{ was #define dname def_expr }
function VTE_TYPE_CURSOR_BLINK_MODE : longint; { return type might be wrong }
  begin
    VTE_TYPE_CURSOR_BLINK_MODE:=vte_cursor_blink_mode_get_type;
  end;

{ was #define dname def_expr }
function VTE_TYPE_CURSOR_SHAPE : longint; { return type might be wrong }
  begin
    VTE_TYPE_CURSOR_SHAPE:=vte_cursor_shape_get_type;
  end;

{ was #define dname def_expr }
function VTE_TYPE_TEXT_BLINK_MODE : longint; { return type might be wrong }
  begin
    VTE_TYPE_TEXT_BLINK_MODE:=vte_text_blink_mode_get_type;
  end;

{ was #define dname def_expr }
function VTE_TYPE_ERASE_BINDING : longint; { return type might be wrong }
  begin
    VTE_TYPE_ERASE_BINDING:=vte_erase_binding_get_type;
  end;

{ was #define dname def_expr }
function VTE_TYPE_PTY_ERROR : longint; { return type might be wrong }
  begin
    VTE_TYPE_PTY_ERROR:=vte_pty_error_get_type;
  end;

{ was #define dname def_expr }
function VTE_TYPE_PTY_FLAGS : longint; { return type might be wrong }
  begin
    VTE_TYPE_PTY_FLAGS:=vte_pty_flags_get_type;
  end;

{ was #define dname def_expr }
function VTE_TYPE_WRITE_FLAGS : longint; { return type might be wrong }
  begin
    VTE_TYPE_WRITE_FLAGS:=vte_write_flags_get_type;
  end;

{ was #define dname def_expr }
function VTE_TYPE_REGEX_ERROR : longint; { return type might be wrong }
  begin
    VTE_TYPE_REGEX_ERROR:=vte_regex_error_get_type;
  end;

{ was #define dname def_expr }
function VTE_TYPE_FORMAT : longint; { return type might be wrong }
  begin
    VTE_TYPE_FORMAT:=vte_format_get_type;
  end;

{ was #define dname def_expr }
function VTE_TYPE_ALIGN : longint; { return type might be wrong }
  begin
    VTE_TYPE_ALIGN:=vte_align_get_type;
  end;


end.
