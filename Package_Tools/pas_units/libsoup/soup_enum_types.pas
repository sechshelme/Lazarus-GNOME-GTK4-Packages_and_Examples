unit soup_enum_types;

interface

uses
  fp_glib2, fp_soup;

{$IFDEF FPC}
{$PACKRECORDS C}
{$ENDIF}


{ This file is generated by glib-mkenums, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses.  }
{$ifndef __SOUP_ENUM_TYPES_H__}
{$define __SOUP_ENUM_TYPES_H__}
{$include <glib-object.h>}
{$include "soup-version.h"}
{ enumerations from "soup-cache.h"  }

function soup_cacheability_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_CACHEABILITY : longint; { return type might be wrong }

function soup_cache_type_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_CACHE_TYPE : longint; { return type might be wrong }

{ enumerations from "soup-cookie-jar.h"  }
function soup_cookie_jar_accept_policy_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_COOKIE_JAR_ACCEPT_POLICY : longint; { return type might be wrong }

{ enumerations from "soup-cookie.h"  }
function soup_same_site_policy_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_SAME_SITE_POLICY : longint; { return type might be wrong }

{ enumerations from "soup-message-body.h"  }
function soup_memory_use_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_MEMORY_USE : longint; { return type might be wrong }

{ enumerations from "soup-server.h"  }
function soup_server_listen_options_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_SERVER_LISTEN_OPTIONS : longint; { return type might be wrong }

{ enumerations from "soup-date-utils.h"  }
function soup_date_format_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_DATE_FORMAT : longint; { return type might be wrong }

{ enumerations from "soup-logger.h"  }
function soup_logger_log_level_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_LOGGER_LOG_LEVEL : longint; { return type might be wrong }

{ enumerations from "soup-message-headers.h"  }
function soup_message_headers_type_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_MESSAGE_HEADERS_TYPE : longint; { return type might be wrong }

function soup_encoding_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_ENCODING : longint; { return type might be wrong }

function soup_expectation_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_EXPECTATION : longint; { return type might be wrong }

{ enumerations from "soup-message.h"  }
function soup_message_flags_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_MESSAGE_FLAGS : longint; { return type might be wrong }

function soup_message_priority_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_MESSAGE_PRIORITY : longint; { return type might be wrong }

{ enumerations from "soup-session.h"  }
function soup_session_error_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_SESSION_ERROR : longint; { return type might be wrong }

{ enumerations from "soup-status.h"  }
function soup_status_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_STATUS : longint; { return type might be wrong }

function soup_http_version_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_HTTP_VERSION : longint; { return type might be wrong }

{ enumerations from "soup-tld.h"  }
function soup_tld_error_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_TLD_ERROR : longint; { return type might be wrong }

{ enumerations from "soup-uri-utils.h"  }
function soup_uri_component_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_URI_COMPONENT : longint; { return type might be wrong }

{ enumerations from "soup-websocket.h"  }
function soup_websocket_error_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_WEBSOCKET_ERROR : longint; { return type might be wrong }

function soup_websocket_connection_type_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_WEBSOCKET_CONNECTION_TYPE : longint; { return type might be wrong }

function soup_websocket_data_type_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_WEBSOCKET_DATA_TYPE : longint; { return type might be wrong }

function soup_websocket_close_code_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_WEBSOCKET_CLOSE_CODE : longint; { return type might be wrong }

function soup_websocket_state_get_type:TGType;cdecl;external libsoup;
{ was #define dname def_expr }
function SOUP_TYPE_WEBSOCKET_STATE : longint; { return type might be wrong }

{$endif}
{ __SOUP_ENUM_TYPES_H__  }
{ Generated data ends here  }

// === Konventiert am: 29-9-25 19:44:56 ===


implementation


{ was #define dname def_expr }
function SOUP_TYPE_CACHEABILITY : longint; { return type might be wrong }
  begin
    SOUP_TYPE_CACHEABILITY:=soup_cacheability_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_CACHE_TYPE : longint; { return type might be wrong }
  begin
    SOUP_TYPE_CACHE_TYPE:=soup_cache_type_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_COOKIE_JAR_ACCEPT_POLICY : longint; { return type might be wrong }
  begin
    SOUP_TYPE_COOKIE_JAR_ACCEPT_POLICY:=soup_cookie_jar_accept_policy_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_SAME_SITE_POLICY : longint; { return type might be wrong }
  begin
    SOUP_TYPE_SAME_SITE_POLICY:=soup_same_site_policy_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_MEMORY_USE : longint; { return type might be wrong }
  begin
    SOUP_TYPE_MEMORY_USE:=soup_memory_use_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_SERVER_LISTEN_OPTIONS : longint; { return type might be wrong }
  begin
    SOUP_TYPE_SERVER_LISTEN_OPTIONS:=soup_server_listen_options_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_DATE_FORMAT : longint; { return type might be wrong }
  begin
    SOUP_TYPE_DATE_FORMAT:=soup_date_format_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_LOGGER_LOG_LEVEL : longint; { return type might be wrong }
  begin
    SOUP_TYPE_LOGGER_LOG_LEVEL:=soup_logger_log_level_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_MESSAGE_HEADERS_TYPE : longint; { return type might be wrong }
  begin
    SOUP_TYPE_MESSAGE_HEADERS_TYPE:=soup_message_headers_type_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_ENCODING : longint; { return type might be wrong }
  begin
    SOUP_TYPE_ENCODING:=soup_encoding_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_EXPECTATION : longint; { return type might be wrong }
  begin
    SOUP_TYPE_EXPECTATION:=soup_expectation_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_MESSAGE_FLAGS : longint; { return type might be wrong }
  begin
    SOUP_TYPE_MESSAGE_FLAGS:=soup_message_flags_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_MESSAGE_PRIORITY : longint; { return type might be wrong }
  begin
    SOUP_TYPE_MESSAGE_PRIORITY:=soup_message_priority_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_SESSION_ERROR : longint; { return type might be wrong }
  begin
    SOUP_TYPE_SESSION_ERROR:=soup_session_error_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_STATUS : longint; { return type might be wrong }
  begin
    SOUP_TYPE_STATUS:=soup_status_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_HTTP_VERSION : longint; { return type might be wrong }
  begin
    SOUP_TYPE_HTTP_VERSION:=soup_http_version_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_TLD_ERROR : longint; { return type might be wrong }
  begin
    SOUP_TYPE_TLD_ERROR:=soup_tld_error_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_URI_COMPONENT : longint; { return type might be wrong }
  begin
    SOUP_TYPE_URI_COMPONENT:=soup_uri_component_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_WEBSOCKET_ERROR : longint; { return type might be wrong }
  begin
    SOUP_TYPE_WEBSOCKET_ERROR:=soup_websocket_error_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_WEBSOCKET_CONNECTION_TYPE : longint; { return type might be wrong }
  begin
    SOUP_TYPE_WEBSOCKET_CONNECTION_TYPE:=soup_websocket_connection_type_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_WEBSOCKET_DATA_TYPE : longint; { return type might be wrong }
  begin
    SOUP_TYPE_WEBSOCKET_DATA_TYPE:=soup_websocket_data_type_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_WEBSOCKET_CLOSE_CODE : longint; { return type might be wrong }
  begin
    SOUP_TYPE_WEBSOCKET_CLOSE_CODE:=soup_websocket_close_code_get_type;
  end;

{ was #define dname def_expr }
function SOUP_TYPE_WEBSOCKET_STATE : longint; { return type might be wrong }
  begin
    SOUP_TYPE_WEBSOCKET_STATE:=soup_websocket_state_get_type;
  end;


end.
