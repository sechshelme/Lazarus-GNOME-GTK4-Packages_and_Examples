unit tkDecls;

interface

uses
 x,xlib, ctypes, tk_tcl_common, tk;

{$IFDEF FPC}
{$PACKRECORDS C}
{$ENDIF}


{
 * tkDecls.h --
 *
 *	Declarations of functions in the platform independent public Tcl API.
 *
 * Copyright (c) 1998-1999 by Scriptics Corporation.
 *
 * See the file "license.terms" for information on usage and redistribution
 * of this file, and for a DISCLAIMER OF ALL WARRANTIES.
  }
{$ifndef _TKDECLS}
{$define _TKDECLS}
{$ifdef BUILD_tk}
{$undef TCL_STORAGE_CLASS}

const
  TCL_STORAGE_CLASS = DLLEXPORT;  
{$endif}
{
 * WARNING: This file is automatically generated by the tools/genStubs.tcl
 * script.  Any modifications to the function declarations below should be made
 * in the generic/tk.decls script.
  }
{ !BEGIN!: Do not edit below this line.  }
{ C++ extern C conditionnal removed }
{
 * Exported function declarations:
  }
{ 0  }

procedure Tk_MainLoop;cdecl;external libtkstub8_6;
{ 1  }
function Tk_3DBorderColor(border:TTk_3DBorder):PXColor;cdecl;external libtkstub8_6;
{ 2  }
function Tk_3DBorderGC(tkwin:TTk_Window; border:TTk_3DBorder; which:longint):TGC;cdecl;external libtkstub8_6;
{ 3  }
procedure Tk_3DHorizontalBevel(tkwin:TTk_Window; drawable:TDrawable; border:TTk_3DBorder; x:longint; y:longint; 
            width:longint; height:longint; leftIn:longint; rightIn:longint; topBevel:longint; 
            relief:longint);cdecl;external libtkstub8_6;
{ 4  }
procedure Tk_3DVerticalBevel(tkwin:TTk_Window; drawable:TDrawable; border:TTk_3DBorder; x:longint; y:longint; 
            width:longint; height:longint; leftBevel:longint; relief:longint);cdecl;external libtkstub8_6;
{ 5  }
procedure Tk_AddOption(tkwin:TTk_Window; name:Pchar; value:Pchar; priority:longint);cdecl;external libtkstub8_6;
{ 6  }
procedure Tk_BindEvent(bindingTable:TTk_BindingTable; eventPtr:PXEvent; tkwin:TTk_Window; numObjects:longint; objectPtr:PClientData);cdecl;external libtkstub8_6;
{ 7  }
procedure Tk_CanvasDrawableCoords(canvas:TTk_Canvas; x:Tdouble; y:Tdouble; drawableXPtr:Psmallint; drawableYPtr:Psmallint);cdecl;external libtkstub8_6;
{ 8  }
procedure Tk_CanvasEventuallyRedraw(canvas:TTk_Canvas; x1:longint; y1:longint; x2:longint; y2:longint);cdecl;external libtkstub8_6;
{ 9  }
function Tk_CanvasGetCoord(interp:PTcl_Interp; canvas:TTk_Canvas; str:Pchar; doublePtr:Pdouble):longint;cdecl;external libtkstub8_6;
{ 10  }
function Tk_CanvasGetTextInfo(canvas:TTk_Canvas):PTk_CanvasTextInfo;cdecl;external libtkstub8_6;
{ 11  }
function Tk_CanvasPsBitmap(interp:PTcl_Interp; canvas:TTk_Canvas; bitmap:TPixmap; x:longint; y:longint; 
           width:longint; height:longint):longint;cdecl;external libtkstub8_6;
{ 12  }
function Tk_CanvasPsColor(interp:PTcl_Interp; canvas:TTk_Canvas; colorPtr:PXColor):longint;cdecl;external libtkstub8_6;
{ 13  }
function Tk_CanvasPsFont(interp:PTcl_Interp; canvas:TTk_Canvas; font:TTk_Font):longint;cdecl;external libtkstub8_6;
{ 14  }
procedure Tk_CanvasPsPath(interp:PTcl_Interp; canvas:TTk_Canvas; coordPtr:Pdouble; numPoints:longint);cdecl;external libtkstub8_6;
{ 15  }
function Tk_CanvasPsStipple(interp:PTcl_Interp; canvas:TTk_Canvas; bitmap:TPixmap):longint;cdecl;external libtkstub8_6;
{ 16  }
function Tk_CanvasPsY(canvas:TTk_Canvas; y:Tdouble):Tdouble;cdecl;external libtkstub8_6;
{ 17  }
procedure Tk_CanvasSetStippleOrigin(canvas:TTk_Canvas; gc:TGC);cdecl;external libtkstub8_6;
{ 18  }
function Tk_CanvasTagsParseProc(clientData:TClientData; interp:PTcl_Interp; tkwin:TTk_Window; value:Pchar; widgRec:Pchar; 
           offset:longint):longint;cdecl;external libtkstub8_6;
{ 19  }
function Tk_CanvasTagsPrintProc(clientData:TClientData; tkwin:TTk_Window; widgRec:Pchar; offset:longint; freeProcPtr:PPTcl_FreeProc):Pchar;cdecl;external libtkstub8_6;
{ 20  }
function Tk_CanvasTkwin(canvas:TTk_Canvas):TTk_Window;cdecl;external libtkstub8_6;
{ 21  }
procedure Tk_CanvasWindowCoords(canvas:TTk_Canvas; x:Tdouble; y:Tdouble; screenXPtr:Psmallint; screenYPtr:Psmallint);cdecl;external libtkstub8_6;
{ 22  }
procedure Tk_ChangeWindowAttributes(tkwin:TTk_Window; valueMask:dword; attsPtr:PXSetWindowAttributes);cdecl;external libtkstub8_6;
{ 23  }
function Tk_CharBbox(layout:TTk_TextLayout; index:longint; xPtr:Plongint; yPtr:Plongint; widthPtr:Plongint; 
           heightPtr:Plongint):longint;cdecl;external libtkstub8_6;
{ 24  }
procedure Tk_ClearSelection(tkwin:TTk_Window; selection:TAtom);cdecl;external libtkstub8_6;
{ 25  }
function Tk_ClipboardAppend(interp:PTcl_Interp; tkwin:TTk_Window; target:TAtom; format:TAtom; buffer:Pchar):longint;cdecl;external libtkstub8_6;
{ 26  }
function Tk_ClipboardClear(interp:PTcl_Interp; tkwin:TTk_Window):longint;cdecl;external libtkstub8_6;
{ 27  }
function Tk_ConfigureInfo(interp:PTcl_Interp; tkwin:TTk_Window; specs:PTk_ConfigSpec; widgRec:Pchar; argvName:Pchar; 
           flags:longint):longint;cdecl;external libtkstub8_6;
{ 28  }
function Tk_ConfigureValue(interp:PTcl_Interp; tkwin:TTk_Window; specs:PTk_ConfigSpec; widgRec:Pchar; argvName:Pchar; 
           flags:longint):longint;cdecl;external libtkstub8_6;
{ 29  }
function Tk_ConfigureWidget(interp:PTcl_Interp; tkwin:TTk_Window; specs:PTk_ConfigSpec; argc:longint; argv:PPchar; 
           widgRec:Pchar; flags:longint):longint;cdecl;external libtkstub8_6;
{ 30  }
procedure Tk_ConfigureWindow(tkwin:TTk_Window; valueMask:dword; valuePtr:PXWindowChanges);cdecl;external libtkstub8_6;
{ 31  }
function Tk_ComputeTextLayout(font:TTk_Font; str:Pchar; numChars:longint; wrapLength:longint; justify:TTk_Justify; 
           flags:longint; widthPtr:Plongint; heightPtr:Plongint):TTk_TextLayout;cdecl;external libtkstub8_6;
{ 32  }
function Tk_CoordsToWindow(rootX:longint; rootY:longint; tkwin:TTk_Window):TTk_Window;cdecl;external libtkstub8_6;
{ 33  }
function Tk_CreateBinding(interp:PTcl_Interp; bindingTable:TTk_BindingTable; object:TClientData; eventStr:Pchar; script:Pchar; 
           append:longint):dword;cdecl;external libtkstub8_6;
{ 34  }
function Tk_CreateBindingTable(interp:PTcl_Interp):TTk_BindingTable;cdecl;external libtkstub8_6;
{ 35  }
function Tk_CreateErrorHandler(display:PDisplay; errNum:longint; request:longint; minorCode:longint; errorProc:PTk_ErrorProc; 
           clientData:TClientData):TTk_ErrorHandler;cdecl;external libtkstub8_6;
{ 36  }
procedure Tk_CreateEventHandler(token:TTk_Window; mask:dword; proc:PTk_EventProc; clientData:TClientData);cdecl;external libtkstub8_6;
{ 37  }
procedure Tk_CreateGenericHandler(proc:PTk_GenericProc; clientData:TClientData);cdecl;external libtkstub8_6;
{ 38  }
procedure Tk_CreateImageType(typePtr:PTk_ImageType);cdecl;external libtkstub8_6;
{ 39  }
procedure Tk_CreateItemType(typePtr:PTk_ItemType);cdecl;external libtkstub8_6;
{ 40  }
procedure Tk_CreatePhotoImageFormat(formatPtr:PTk_PhotoImageFormat);cdecl;external libtkstub8_6;
{ 41  }
procedure Tk_CreateSelHandler(tkwin:TTk_Window; selection:TAtom; target:TAtom; proc:PTk_SelectionProc; clientData:TClientData; 
            format:TAtom);cdecl;external libtkstub8_6;
{ 42  }
function Tk_CreateWindow(interp:PTcl_Interp; parent:TTk_Window; name:Pchar; screenName:Pchar):TTk_Window;cdecl;external libtkstub8_6;
{ 43  }
function Tk_CreateWindowFromPath(interp:PTcl_Interp; tkwin:TTk_Window; pathName:Pchar; screenName:Pchar):TTk_Window;cdecl;external libtkstub8_6;
{ 44  }
function Tk_DefineBitmap(interp:PTcl_Interp; name:Pchar; source:pointer; width:longint; height:longint):longint;cdecl;external libtkstub8_6;
{ 45  }
procedure Tk_DefineCursor(window:TTk_Window; cursor:TTk_Cursor);cdecl;external libtkstub8_6;
{ 46  }
procedure Tk_DeleteAllBindings(bindingTable:TTk_BindingTable; object:TClientData);cdecl;external libtkstub8_6;
{ 47  }
function Tk_DeleteBinding(interp:PTcl_Interp; bindingTable:TTk_BindingTable; object:TClientData; eventStr:Pchar):longint;cdecl;external libtkstub8_6;
{ 48  }
procedure Tk_DeleteBindingTable(bindingTable:TTk_BindingTable);cdecl;external libtkstub8_6;
{ 49  }
procedure Tk_DeleteErrorHandler(handler:TTk_ErrorHandler);cdecl;external libtkstub8_6;
{ 50  }
procedure Tk_DeleteEventHandler(token:TTk_Window; mask:dword; proc:PTk_EventProc; clientData:TClientData);cdecl;external libtkstub8_6;
{ 51  }
procedure Tk_DeleteGenericHandler(proc:PTk_GenericProc; clientData:TClientData);cdecl;external libtkstub8_6;
{ 52  }
procedure Tk_DeleteImage(interp:PTcl_Interp; name:Pchar);cdecl;external libtkstub8_6;
{ 53  }
procedure Tk_DeleteSelHandler(tkwin:TTk_Window; selection:TAtom; target:TAtom);cdecl;external libtkstub8_6;
{ 54  }
procedure Tk_DestroyWindow(tkwin:TTk_Window);cdecl;external libtkstub8_6;
{ 55  }
function Tk_DisplayName(tkwin:TTk_Window):Pchar;cdecl;external libtkstub8_6;
{ 56  }
function Tk_DistanceToTextLayout(layout:TTk_TextLayout; x:longint; y:longint):longint;cdecl;external libtkstub8_6;
{ 57  }
procedure Tk_Draw3DPolygon(tkwin:TTk_Window; drawable:TDrawable; border:TTk_3DBorder; pointPtr:PXPoint; numPoints:longint; 
            borderWidth:longint; leftRelief:longint);cdecl;external libtkstub8_6;
{ 58  }
procedure Tk_Draw3DRectangle(tkwin:TTk_Window; drawable:TDrawable; border:TTk_3DBorder; x:longint; y:longint; 
            width:longint; height:longint; borderWidth:longint; relief:longint);cdecl;external libtkstub8_6;
{ 59  }
procedure Tk_DrawChars(display:PDisplay; drawable:TDrawable; gc:TGC; tkfont:TTk_Font; source:Pchar; 
            numBytes:longint; x:longint; y:longint);cdecl;external libtkstub8_6;
{ 60  }
procedure Tk_DrawFocusHighlight(tkwin:TTk_Window; gc:TGC; width:longint; drawable:TDrawable);cdecl;external libtkstub8_6;
{ 61  }
procedure Tk_DrawTextLayout(display:PDisplay; drawable:TDrawable; gc:TGC; layout:TTk_TextLayout; x:longint; 
            y:longint; firstChar:longint; lastChar:longint);cdecl;external libtkstub8_6;
{ 62  }
procedure Tk_Fill3DPolygon(tkwin:TTk_Window; drawable:TDrawable; border:TTk_3DBorder; pointPtr:PXPoint; numPoints:longint; 
            borderWidth:longint; leftRelief:longint);cdecl;external libtkstub8_6;
{ 63  }
procedure Tk_Fill3DRectangle(tkwin:TTk_Window; drawable:TDrawable; border:TTk_3DBorder; x:longint; y:longint; 
            width:longint; height:longint; borderWidth:longint; relief:longint);cdecl;external libtkstub8_6;
{ 64  }
function Tk_FindPhoto(interp:PTcl_Interp; imageName:Pchar):TTk_PhotoHandle;cdecl;external libtkstub8_6;
{ 65  }
function Tk_FontId(font:TTk_Font):TFont;cdecl;external libtkstub8_6;
{ 66  }
procedure Tk_Free3DBorder(border:TTk_3DBorder);cdecl;external libtkstub8_6;
{ 67  }
procedure Tk_FreeBitmap(display:PDisplay; bitmap:TPixmap);cdecl;external libtkstub8_6;
{ 68  }
procedure Tk_FreeColor(colorPtr:PXColor);cdecl;external libtkstub8_6;
{ 69  }
procedure Tk_FreeColormap(display:PDisplay; colormap:TColormap);cdecl;external libtkstub8_6;
{ 70  }
procedure Tk_FreeCursor(display:PDisplay; cursor:TTk_Cursor);cdecl;external libtkstub8_6;
{ 71  }
procedure Tk_FreeFont(f:TTk_Font);cdecl;external libtkstub8_6;
{ 72  }
procedure Tk_FreeGC(display:PDisplay; gc:TGC);cdecl;external libtkstub8_6;
{ 73  }
procedure Tk_FreeImage(image:TTk_Image);cdecl;external libtkstub8_6;
{ 74  }
procedure Tk_FreeOptions(specs:PTk_ConfigSpec; widgRec:Pchar; display:PDisplay; needFlags:longint);cdecl;external libtkstub8_6;
{ 75  }
procedure Tk_FreePixmap(display:PDisplay; pixmap:TPixmap);cdecl;external libtkstub8_6;
{ 76  }
procedure Tk_FreeTextLayout(textLayout:TTk_TextLayout);cdecl;external libtkstub8_6;
{ 77  }
procedure Tk_FreeXId(display:PDisplay; xid:TXID);cdecl;external libtkstub8_6;
{ 78  }
function Tk_GCForColor(colorPtr:PXColor; drawable:TDrawable):TGC;cdecl;external libtkstub8_6;
{ 79  }
procedure Tk_GeometryRequest(tkwin:TTk_Window; reqWidth:longint; reqHeight:longint);cdecl;external libtkstub8_6;
{ 80  }
function Tk_Get3DBorder(interp:PTcl_Interp; tkwin:TTk_Window; colorName:TTk_Uid):TTk_3DBorder;cdecl;external libtkstub8_6;
{ 81  }
procedure Tk_GetAllBindings(interp:PTcl_Interp; bindingTable:TTk_BindingTable; object:TClientData);cdecl;external libtkstub8_6;
{ 82  }
function Tk_GetAnchor(interp:PTcl_Interp; str:Pchar; anchorPtr:PTk_Anchor):longint;cdecl;external libtkstub8_6;
{ 83  }
function Tk_GetAtomName(tkwin:TTk_Window; atom:TAtom):Pchar;cdecl;external libtkstub8_6;
{ 84  }
function Tk_GetBinding(interp:PTcl_Interp; bindingTable:TTk_BindingTable; object:TClientData; eventStr:Pchar):Pchar;cdecl;external libtkstub8_6;
{ 85  }
function Tk_GetBitmap(interp:PTcl_Interp; tkwin:TTk_Window; str:Pchar):TPixmap;cdecl;external libtkstub8_6;
{ 86  }
function Tk_GetBitmapFromData(interp:PTcl_Interp; tkwin:TTk_Window; source:pointer; width:longint; height:longint):TPixmap;cdecl;external libtkstub8_6;
{ 87  }
function Tk_GetCapStyle(interp:PTcl_Interp; str:Pchar; capPtr:Plongint):longint;cdecl;external libtkstub8_6;
{ 88  }
function Tk_GetColor(interp:PTcl_Interp; tkwin:TTk_Window; name:TTk_Uid):PXColor;cdecl;external libtkstub8_6;
{ 89  }
function Tk_GetColorByValue(tkwin:TTk_Window; colorPtr:PXColor):PXColor;cdecl;external libtkstub8_6;
{ 90  }
function Tk_GetColormap(interp:PTcl_Interp; tkwin:TTk_Window; str:Pchar):TColormap;cdecl;external libtkstub8_6;
{ 91  }
function Tk_GetCursor(interp:PTcl_Interp; tkwin:TTk_Window; str:TTk_Uid):TTk_Cursor;cdecl;external libtkstub8_6;
{ 92  }
function Tk_GetCursorFromData(interp:PTcl_Interp; tkwin:TTk_Window; source:Pchar; mask:Pchar; width:longint; 
           height:longint; xHot:longint; yHot:longint; fg:TTk_Uid; bg:TTk_Uid):TTk_Cursor;cdecl;external libtkstub8_6;
{ 93  }
function Tk_GetFont(interp:PTcl_Interp; tkwin:TTk_Window; str:Pchar):TTk_Font;cdecl;external libtkstub8_6;
{ 94  }
function Tk_GetFontFromObj(tkwin:TTk_Window; objPtr:PTcl_Obj):TTk_Font;cdecl;external libtkstub8_6;
{ 95  }
procedure Tk_GetFontMetrics(font:TTk_Font; fmPtr:PTk_FontMetrics);cdecl;external libtkstub8_6;
{ 96  }
function Tk_GetGC(tkwin:TTk_Window; valueMask:dword; valuePtr:PXGCValues):TGC;cdecl;external libtkstub8_6;
{ 97  }
function Tk_GetImage(interp:PTcl_Interp; tkwin:TTk_Window; name:Pchar; changeProc:PTk_ImageChangedProc; clientData:TClientData):TTk_Image;cdecl;external libtkstub8_6;
{ 98  }
function Tk_GetImageMasterData(interp:PTcl_Interp; name:Pchar; typePtrPtr:PPTk_ImageType):TClientData;cdecl;external libtkstub8_6;
{ 99  }
function Tk_GetItemTypes:PTk_ItemType;cdecl;external libtkstub8_6;
{ 100  }
function Tk_GetJoinStyle(interp:PTcl_Interp; str:Pchar; joinPtr:Plongint):longint;cdecl;external libtkstub8_6;
{ 101  }
function Tk_GetJustify(interp:PTcl_Interp; str:Pchar; justifyPtr:PTk_Justify):longint;cdecl;external libtkstub8_6;
{ 102  }
function Tk_GetNumMainWindows:longint;cdecl;external libtkstub8_6;
{ 103  }
function Tk_GetOption(tkwin:TTk_Window; name:Pchar; className:Pchar):TTk_Uid;cdecl;external libtkstub8_6;
{ 104  }
function Tk_GetPixels(interp:PTcl_Interp; tkwin:TTk_Window; str:Pchar; intPtr:Plongint):longint;cdecl;external libtkstub8_6;
{ 105  }
function Tk_GetPixmap(display:PDisplay; d:TDrawable; width:longint; height:longint; depth:longint):TPixmap;cdecl;external libtkstub8_6;
{ 106  }
function Tk_GetRelief(interp:PTcl_Interp; name:Pchar; reliefPtr:Plongint):longint;cdecl;external libtkstub8_6;
{ 107  }
procedure Tk_GetRootCoords(tkwin:TTk_Window; xPtr:Plongint; yPtr:Plongint);cdecl;external libtkstub8_6;
{ 108  }
function Tk_GetScrollInfo(interp:PTcl_Interp; argc:longint; argv:PPchar; dblPtr:Pdouble; intPtr:Plongint):longint;cdecl;external libtkstub8_6;
{ 109  }
function Tk_GetScreenMM(interp:PTcl_Interp; tkwin:TTk_Window; str:Pchar; doublePtr:Pdouble):longint;cdecl;external libtkstub8_6;
{ 110  }
function Tk_GetSelection(interp:PTcl_Interp; tkwin:TTk_Window; selection:TAtom; target:TAtom; proc:PTk_GetSelProc; 
           clientData:TClientData):longint;cdecl;external libtkstub8_6;
{ 111  }
function Tk_GetUid(str:Pchar):TTk_Uid;cdecl;external libtkstub8_6;
{ 112  }
function Tk_GetVisual(interp:PTcl_Interp; tkwin:TTk_Window; str:Pchar; depthPtr:Plongint; colormapPtr:PColormap):PVisual;cdecl;external libtkstub8_6;
{ 113  }
procedure Tk_GetVRootGeometry(tkwin:TTk_Window; xPtr:Plongint; yPtr:Plongint; widthPtr:Plongint; heightPtr:Plongint);cdecl;external libtkstub8_6;
{ 114  }
function Tk_Grab(interp:PTcl_Interp; tkwin:TTk_Window; grabGlobal:longint):longint;cdecl;external libtkstub8_6;
{ 115  }
procedure Tk_HandleEvent(eventPtr:PXEvent);cdecl;external libtkstub8_6;
{ 116  }
function Tk_IdToWindow(display:PDisplay; window:TWindow):TTk_Window;cdecl;external libtkstub8_6;
{ 117  }
procedure Tk_ImageChanged(model:TTk_ImageMaster; x:longint; y:longint; width:longint; height:longint; 
            imageWidth:longint; imageHeight:longint);cdecl;external libtkstub8_6;
{ 118  }
function Tk_Init(interp:PTcl_Interp):longint;cdecl;external libtkstub8_6;
{ 119  }
function Tk_InternAtom(tkwin:TTk_Window; name:Pchar):TAtom;cdecl;external libtkstub8_6;
{ 120  }
function Tk_IntersectTextLayout(layout:TTk_TextLayout; x:longint; y:longint; width:longint; height:longint):longint;cdecl;external libtkstub8_6;
{ 121  }
procedure Tk_MaintainGeometry(window:TTk_Window; container:TTk_Window; x:longint; y:longint; width:longint; 
            height:longint);cdecl;external libtkstub8_6;
{ 122  }
function Tk_MainWindow(interp:PTcl_Interp):TTk_Window;cdecl;external libtkstub8_6;
{ 123  }
procedure Tk_MakeWindowExist(tkwin:TTk_Window);cdecl;external libtkstub8_6;
{ 124  }
procedure Tk_ManageGeometry(tkwin:TTk_Window; mgrPtr:PTk_GeomMgr; clientData:TClientData);cdecl;external libtkstub8_6;
{ 125  }
procedure Tk_MapWindow(tkwin:TTk_Window);cdecl;external libtkstub8_6;
{ 126  }
function Tk_MeasureChars(tkfont:TTk_Font; source:Pchar; numBytes:longint; maxPixels:longint; flags:longint; 
           lengthPtr:Plongint):longint;cdecl;external libtkstub8_6;
{ 127  }
procedure Tk_MoveResizeWindow(tkwin:TTk_Window; x:longint; y:longint; width:longint; height:longint);cdecl;external libtkstub8_6;
{ 128  }
procedure Tk_MoveWindow(tkwin:TTk_Window; x:longint; y:longint);cdecl;external libtkstub8_6;
{ 129  }
procedure Tk_MoveToplevelWindow(tkwin:TTk_Window; x:longint; y:longint);cdecl;external libtkstub8_6;
{ 130  }
function Tk_NameOf3DBorder(border:TTk_3DBorder):Pchar;cdecl;external libtkstub8_6;
{ 131  }
function Tk_NameOfAnchor(anchor:TTk_Anchor):Pchar;cdecl;external libtkstub8_6;
{ 132  }
function Tk_NameOfBitmap(display:PDisplay; bitmap:TPixmap):Pchar;cdecl;external libtkstub8_6;
{ 133  }
function Tk_NameOfCapStyle(cap:longint):Pchar;cdecl;external libtkstub8_6;
{ 134  }
function Tk_NameOfColor(colorPtr:PXColor):Pchar;cdecl;external libtkstub8_6;
{ 135  }
function Tk_NameOfCursor(display:PDisplay; cursor:TTk_Cursor):Pchar;cdecl;external libtkstub8_6;
{ 136  }
function Tk_NameOfFont(font:TTk_Font):Pchar;cdecl;external libtkstub8_6;
{ 137  }
function Tk_NameOfImage(model:TTk_ImageMaster):Pchar;cdecl;external libtkstub8_6;
{ 138  }
function Tk_NameOfJoinStyle(join:longint):Pchar;cdecl;external libtkstub8_6;
{ 139  }
function Tk_NameOfJustify(justify:TTk_Justify):Pchar;cdecl;external libtkstub8_6;
{ 140  }
function Tk_NameOfRelief(relief:longint):Pchar;cdecl;external libtkstub8_6;
{ 141  }
function Tk_NameToWindow(interp:PTcl_Interp; pathName:Pchar; tkwin:TTk_Window):TTk_Window;cdecl;external libtkstub8_6;
{ 142  }
procedure Tk_OwnSelection(tkwin:TTk_Window; selection:TAtom; proc:PTk_LostSelProc; clientData:TClientData);cdecl;external libtkstub8_6;
{ 143  }
function Tk_ParseArgv(interp:PTcl_Interp; tkwin:TTk_Window; argcPtr:Plongint; argv:PPchar; argTable:PTk_ArgvInfo; 
           flags:longint):longint;cdecl;external libtkstub8_6;
{ 144  }
procedure Tk_PhotoPutBlock_NoComposite(handle:TTk_PhotoHandle; blockPtr:PTk_PhotoImageBlock; x:longint; y:longint; width:longint; 
            height:longint);cdecl;external libtkstub8_6;
{ 145  }
procedure Tk_PhotoPutZoomedBlock_NoComposite(handle:TTk_PhotoHandle; blockPtr:PTk_PhotoImageBlock; x:longint; y:longint; width:longint; 
            height:longint; zoomX:longint; zoomY:longint; subsampleX:longint; subsampleY:longint);cdecl;external libtkstub8_6;
{ 146  }
function Tk_PhotoGetImage(handle:TTk_PhotoHandle; blockPtr:PTk_PhotoImageBlock):longint;cdecl;external libtkstub8_6;
{ 147  }
procedure Tk_PhotoBlank(handle:TTk_PhotoHandle);cdecl;external libtkstub8_6;
{ 148  }
procedure Tk_PhotoExpand_Panic(handle:TTk_PhotoHandle; width:longint; height:longint);cdecl;external libtkstub8_6;
{ 149  }
procedure Tk_PhotoGetSize(handle:TTk_PhotoHandle; widthPtr:Plongint; heightPtr:Plongint);cdecl;external libtkstub8_6;
{ 150  }
procedure Tk_PhotoSetSize_Panic(handle:TTk_PhotoHandle; width:longint; height:longint);cdecl;external libtkstub8_6;
{ 151  }
function Tk_PointToChar(layout:TTk_TextLayout; x:longint; y:longint):longint;cdecl;external libtkstub8_6;
{ 152  }
function Tk_PostscriptFontName(tkfont:TTk_Font; dsPtr:PTcl_DString):longint;cdecl;external libtkstub8_6;
{ 153  }
procedure Tk_PreserveColormap(display:PDisplay; colormap:TColormap);cdecl;external libtkstub8_6;
{ 154  }
procedure Tk_QueueWindowEvent(eventPtr:PXEvent; position:TTcl_QueuePosition);cdecl;external libtkstub8_6;
{ 155  }
procedure Tk_RedrawImage(image:TTk_Image; imageX:longint; imageY:longint; width:longint; height:longint; 
            drawable:TDrawable; drawableX:longint; drawableY:longint);cdecl;external libtkstub8_6;
{ 156  }
procedure Tk_ResizeWindow(tkwin:TTk_Window; width:longint; height:longint);cdecl;external libtkstub8_6;
{ 157  }
function Tk_RestackWindow(tkwin:TTk_Window; aboveBelow:longint; other:TTk_Window):longint;cdecl;external libtkstub8_6;
{ 158  }
function Tk_RestrictEvents(proc:PTk_RestrictProc; arg:TClientData; prevArgPtr:PClientData):PTk_RestrictProc;cdecl;external libtkstub8_6;
{ 159  }
function Tk_SafeInit(interp:PTcl_Interp):longint;cdecl;external libtkstub8_6;
{ 160  }
function Tk_SetAppName(tkwin:TTk_Window; name:Pchar):Pchar;cdecl;external libtkstub8_6;
{ 161  }
procedure Tk_SetBackgroundFromBorder(tkwin:TTk_Window; border:TTk_3DBorder);cdecl;external libtkstub8_6;
{ 162  }
procedure Tk_SetClass(tkwin:TTk_Window; className:Pchar);cdecl;external libtkstub8_6;
{ 163  }
procedure Tk_SetGrid(tkwin:TTk_Window; reqWidth:longint; reqHeight:longint; gridWidth:longint; gridHeight:longint);cdecl;external libtkstub8_6;
{ 164  }
procedure Tk_SetInternalBorder(tkwin:TTk_Window; width:longint);cdecl;external libtkstub8_6;
{ 165  }
procedure Tk_SetWindowBackground(tkwin:TTk_Window; pixel:dword);cdecl;external libtkstub8_6;
{ 166  }
procedure Tk_SetWindowBackgroundPixmap(tkwin:TTk_Window; pixmap:TPixmap);cdecl;external libtkstub8_6;
{ 167  }
procedure Tk_SetWindowBorder(tkwin:TTk_Window; pixel:dword);cdecl;external libtkstub8_6;
{ 168  }
procedure Tk_SetWindowBorderWidth(tkwin:TTk_Window; width:longint);cdecl;external libtkstub8_6;
{ 169  }
procedure Tk_SetWindowBorderPixmap(tkwin:TTk_Window; pixmap:TPixmap);cdecl;external libtkstub8_6;
{ 170  }
procedure Tk_SetWindowColormap(tkwin:TTk_Window; colormap:TColormap);cdecl;external libtkstub8_6;
{ 171  }
function Tk_SetWindowVisual(tkwin:TTk_Window; visual:PVisual; depth:longint; colormap:TColormap):longint;cdecl;external libtkstub8_6;
{ 172  }
procedure Tk_SizeOfBitmap(display:PDisplay; bitmap:TPixmap; widthPtr:Plongint; heightPtr:Plongint);cdecl;external libtkstub8_6;
{ 173  }
procedure Tk_SizeOfImage(image:TTk_Image; widthPtr:Plongint; heightPtr:Plongint);cdecl;external libtkstub8_6;
{ 174  }
function Tk_StrictMotif(tkwin:TTk_Window):longint;cdecl;external libtkstub8_6;
{ 175  }
procedure Tk_TextLayoutToPostscript(interp:PTcl_Interp; layout:TTk_TextLayout);cdecl;external libtkstub8_6;
{ 176  }
function Tk_TextWidth(font:TTk_Font; str:Pchar; numBytes:longint):longint;cdecl;external libtkstub8_6;
{ 177  }
procedure Tk_UndefineCursor(window:TTk_Window);cdecl;external libtkstub8_6;
{ 178  }
procedure Tk_UnderlineChars(display:PDisplay; drawable:TDrawable; gc:TGC; tkfont:TTk_Font; source:Pchar; 
            x:longint; y:longint; firstByte:longint; lastByte:longint);cdecl;external libtkstub8_6;
{ 179  }
procedure Tk_UnderlineTextLayout(display:PDisplay; drawable:TDrawable; gc:TGC; layout:TTk_TextLayout; x:longint; 
            y:longint; underline:longint);cdecl;external libtkstub8_6;
{ 180  }
procedure Tk_Ungrab(tkwin:TTk_Window);cdecl;external libtkstub8_6;
{ 181  }
procedure Tk_UnmaintainGeometry(window:TTk_Window; container:TTk_Window);cdecl;external libtkstub8_6;
{ 182  }
procedure Tk_UnmapWindow(tkwin:TTk_Window);cdecl;external libtkstub8_6;
{ 183  }
procedure Tk_UnsetGrid(tkwin:TTk_Window);cdecl;external libtkstub8_6;
{ 184  }
procedure Tk_UpdatePointer(tkwin:TTk_Window; x:longint; y:longint; state:longint);cdecl;external libtkstub8_6;
{ 185  }
function Tk_AllocBitmapFromObj(interp:PTcl_Interp; tkwin:TTk_Window; objPtr:PTcl_Obj):TPixmap;cdecl;external libtkstub8_6;
{ 186  }
function Tk_Alloc3DBorderFromObj(interp:PTcl_Interp; tkwin:TTk_Window; objPtr:PTcl_Obj):TTk_3DBorder;cdecl;external libtkstub8_6;
{ 187  }
function Tk_AllocColorFromObj(interp:PTcl_Interp; tkwin:TTk_Window; objPtr:PTcl_Obj):PXColor;cdecl;external libtkstub8_6;
{ 188  }
function Tk_AllocCursorFromObj(interp:PTcl_Interp; tkwin:TTk_Window; objPtr:PTcl_Obj):TTk_Cursor;cdecl;external libtkstub8_6;
{ 189  }
function Tk_AllocFontFromObj(interp:PTcl_Interp; tkwin:TTk_Window; objPtr:PTcl_Obj):TTk_Font;cdecl;external libtkstub8_6;
{ 190  }
function Tk_CreateOptionTable(interp:PTcl_Interp; templatePtr:PTk_OptionSpec):TTk_OptionTable;cdecl;external libtkstub8_6;
{ 191  }
procedure Tk_DeleteOptionTable(optionTable:TTk_OptionTable);cdecl;external libtkstub8_6;
{ 192  }
procedure Tk_Free3DBorderFromObj(tkwin:TTk_Window; objPtr:PTcl_Obj);cdecl;external libtkstub8_6;
{ 193  }
procedure Tk_FreeBitmapFromObj(tkwin:TTk_Window; objPtr:PTcl_Obj);cdecl;external libtkstub8_6;
{ 194  }
procedure Tk_FreeColorFromObj(tkwin:TTk_Window; objPtr:PTcl_Obj);cdecl;external libtkstub8_6;
{ 195  }
procedure Tk_FreeConfigOptions(recordPtr:Pchar; optionToken:TTk_OptionTable; tkwin:TTk_Window);cdecl;external libtkstub8_6;
{ 196  }
procedure Tk_FreeSavedOptions(savePtr:PTk_SavedOptions);cdecl;external libtkstub8_6;
{ 197  }
procedure Tk_FreeCursorFromObj(tkwin:TTk_Window; objPtr:PTcl_Obj);cdecl;external libtkstub8_6;
{ 198  }
procedure Tk_FreeFontFromObj(tkwin:TTk_Window; objPtr:PTcl_Obj);cdecl;external libtkstub8_6;
{ 199  }
function Tk_Get3DBorderFromObj(tkwin:TTk_Window; objPtr:PTcl_Obj):TTk_3DBorder;cdecl;external libtkstub8_6;
{ 200  }
function Tk_GetAnchorFromObj(interp:PTcl_Interp; objPtr:PTcl_Obj; anchorPtr:PTk_Anchor):longint;cdecl;external libtkstub8_6;
{ 201  }
function Tk_GetBitmapFromObj(tkwin:TTk_Window; objPtr:PTcl_Obj):TPixmap;cdecl;external libtkstub8_6;
{ 202  }
function Tk_GetColorFromObj(tkwin:TTk_Window; objPtr:PTcl_Obj):PXColor;cdecl;external libtkstub8_6;
{ 203  }
function Tk_GetCursorFromObj(tkwin:TTk_Window; objPtr:PTcl_Obj):TTk_Cursor;cdecl;external libtkstub8_6;
{ 204  }
function Tk_GetOptionInfo(interp:PTcl_Interp; recordPtr:Pchar; optionTable:TTk_OptionTable; namePtr:PTcl_Obj; tkwin:TTk_Window):PTcl_Obj;cdecl;external libtkstub8_6;
{ 205  }
function Tk_GetOptionValue(interp:PTcl_Interp; recordPtr:Pchar; optionTable:TTk_OptionTable; namePtr:PTcl_Obj; tkwin:TTk_Window):PTcl_Obj;cdecl;external libtkstub8_6;
{ 206  }
function Tk_GetJustifyFromObj(interp:PTcl_Interp; objPtr:PTcl_Obj; justifyPtr:PTk_Justify):longint;cdecl;external libtkstub8_6;
{ 207  }
function Tk_GetMMFromObj(interp:PTcl_Interp; tkwin:TTk_Window; objPtr:PTcl_Obj; doublePtr:Pdouble):longint;cdecl;external libtkstub8_6;
{ 208  }
function Tk_GetPixelsFromObj(interp:PTcl_Interp; tkwin:TTk_Window; objPtr:PTcl_Obj; intPtr:Plongint):longint;cdecl;external libtkstub8_6;
{ 209  }
function Tk_GetReliefFromObj(interp:PTcl_Interp; objPtr:PTcl_Obj; resultPtr:Plongint):longint;cdecl;external libtkstub8_6;
{ 210  }
function Tk_GetScrollInfoObj(interp:PTcl_Interp; objc:longint; objv:PPTcl_Obj; dblPtr:Pdouble; intPtr:Plongint):longint;cdecl;external libtkstub8_6;
{ 211  }
function Tk_InitOptions(interp:PTcl_Interp; recordPtr:Pchar; optionToken:TTk_OptionTable; tkwin:TTk_Window):longint;cdecl;external libtkstub8_6;
{ 212  }
procedure Tk_MainEx(argc:longint; argv:PPchar; appInitProc:PTcl_AppInitProc; interp:PTcl_Interp);cdecl;external libtkstub8_6;
{ 213  }
procedure Tk_RestoreSavedOptions(savePtr:PTk_SavedOptions);cdecl;external libtkstub8_6;
{ 214  }
function Tk_SetOptions(interp:PTcl_Interp; recordPtr:Pchar; optionTable:TTk_OptionTable; objc:longint; objv:PPTcl_Obj; 
           tkwin:TTk_Window; savePtr:PTk_SavedOptions; maskPtr:Plongint):longint;cdecl;external libtkstub8_6;
{ 215  }
procedure Tk_InitConsoleChannels(interp:PTcl_Interp);cdecl;external libtkstub8_6;
{ 216  }
function Tk_CreateConsoleWindow(interp:PTcl_Interp):longint;cdecl;external libtkstub8_6;
{ 217  }
procedure Tk_CreateSmoothMethod(interp:PTcl_Interp; method:PTk_SmoothMethod);cdecl;external libtkstub8_6;
{ Slot 218 is reserved  }
{ Slot 219 is reserved  }
{ 220  }
function Tk_GetDash(interp:PTcl_Interp; value:Pchar; dash:PTk_Dash):longint;cdecl;external libtkstub8_6;
{ 221  }
procedure Tk_CreateOutline(outline:PTk_Outline);cdecl;external libtkstub8_6;
{ 222  }
procedure Tk_DeleteOutline(display:PDisplay; outline:PTk_Outline);cdecl;external libtkstub8_6;
{ 223  }
function Tk_ConfigOutlineGC(gcValues:PXGCValues; canvas:TTk_Canvas; item:PTk_Item; outline:PTk_Outline):longint;cdecl;external libtkstub8_6;
{ 224  }
function Tk_ChangeOutlineGC(canvas:TTk_Canvas; item:PTk_Item; outline:PTk_Outline):longint;cdecl;external libtkstub8_6;
{ 225  }
function Tk_ResetOutlineGC(canvas:TTk_Canvas; item:PTk_Item; outline:PTk_Outline):longint;cdecl;external libtkstub8_6;
{ 226  }
function Tk_CanvasPsOutline(canvas:TTk_Canvas; item:PTk_Item; outline:PTk_Outline):longint;cdecl;external libtkstub8_6;
{ 227  }
procedure Tk_SetTSOrigin(tkwin:TTk_Window; gc:TGC; x:longint; y:longint);cdecl;external libtkstub8_6;
{ 228  }
function Tk_CanvasGetCoordFromObj(interp:PTcl_Interp; canvas:TTk_Canvas; obj:PTcl_Obj; doublePtr:Pdouble):longint;cdecl;external libtkstub8_6;
{ 229  }
procedure Tk_CanvasSetOffset(canvas:TTk_Canvas; gc:TGC; offset:PTk_TSOffset);cdecl;external libtkstub8_6;
{ 230  }
procedure Tk_DitherPhoto(handle:TTk_PhotoHandle; x:longint; y:longint; width:longint; height:longint);cdecl;external libtkstub8_6;
{ 231  }
function Tk_PostscriptBitmap(interp:PTcl_Interp; tkwin:TTk_Window; psInfo:TTk_PostscriptInfo; bitmap:TPixmap; startX:longint; 
           startY:longint; width:longint; height:longint):longint;cdecl;external libtkstub8_6;
{ 232  }
function Tk_PostscriptColor(interp:PTcl_Interp; psInfo:TTk_PostscriptInfo; colorPtr:PXColor):longint;cdecl;external libtkstub8_6;
{ 233  }
function Tk_PostscriptFont(interp:PTcl_Interp; psInfo:TTk_PostscriptInfo; font:TTk_Font):longint;cdecl;external libtkstub8_6;
{ 234  }
function Tk_PostscriptImage(image:TTk_Image; interp:PTcl_Interp; tkwin:TTk_Window; psinfo:TTk_PostscriptInfo; x:longint; 
           y:longint; width:longint; height:longint; prepass:longint):longint;cdecl;external libtkstub8_6;
{ 235  }
procedure Tk_PostscriptPath(interp:PTcl_Interp; psInfo:TTk_PostscriptInfo; coordPtr:Pdouble; numPoints:longint);cdecl;external libtkstub8_6;
{ 236  }
function Tk_PostscriptStipple(interp:PTcl_Interp; tkwin:TTk_Window; psInfo:TTk_PostscriptInfo; bitmap:TPixmap):longint;cdecl;external libtkstub8_6;
{ 237  }
function Tk_PostscriptY(y:Tdouble; psInfo:TTk_PostscriptInfo):Tdouble;cdecl;external libtkstub8_6;
{ 238  }
function Tk_PostscriptPhoto(interp:PTcl_Interp; blockPtr:PTk_PhotoImageBlock; psInfo:TTk_PostscriptInfo; width:longint; height:longint):longint;cdecl;external libtkstub8_6;
{ 239  }
procedure Tk_CreateClientMessageHandler(proc:PTk_ClientMessageProc);cdecl;external libtkstub8_6;
{ 240  }
procedure Tk_DeleteClientMessageHandler(proc:PTk_ClientMessageProc);cdecl;external libtkstub8_6;
{ 241  }
function Tk_CreateAnonymousWindow(interp:PTcl_Interp; parent:TTk_Window; screenName:Pchar):TTk_Window;cdecl;external libtkstub8_6;
{ 242  }
procedure Tk_SetClassProcs(tkwin:TTk_Window; procs:PTk_ClassProcs; instanceData:TClientData);cdecl;external libtkstub8_6;
{ 243  }
procedure Tk_SetInternalBorderEx(tkwin:TTk_Window; left:longint; right:longint; top:longint; bottom:longint);cdecl;external libtkstub8_6;
{ 244  }
procedure Tk_SetMinimumRequestSize(tkwin:TTk_Window; minWidth:longint; minHeight:longint);cdecl;external libtkstub8_6;
{ 245  }
procedure Tk_SetCaretPos(tkwin:TTk_Window; x:longint; y:longint; height:longint);cdecl;external libtkstub8_6;
{ 246  }
procedure Tk_PhotoPutBlock_Panic(handle:TTk_PhotoHandle; blockPtr:PTk_PhotoImageBlock; x:longint; y:longint; width:longint; 
            height:longint; compRule:longint);cdecl;external libtkstub8_6;
{ 247  }
procedure Tk_PhotoPutZoomedBlock_Panic(handle:TTk_PhotoHandle; blockPtr:PTk_PhotoImageBlock; x:longint; y:longint; width:longint; 
            height:longint; zoomX:longint; zoomY:longint; subsampleX:longint; subsampleY:longint; 
            compRule:longint);cdecl;external libtkstub8_6;
{ 248  }
function Tk_CollapseMotionEvents(display:PDisplay; collapse:longint):longint;cdecl;external libtkstub8_6;
{ 249  }
function Tk_RegisterStyleEngine(name:Pchar; parent:TTk_StyleEngine):TTk_StyleEngine;cdecl;external libtkstub8_6;
{ 250  }
function Tk_GetStyleEngine(name:Pchar):TTk_StyleEngine;cdecl;external libtkstub8_6;
{ 251  }
function Tk_RegisterStyledElement(engine:TTk_StyleEngine; templatePtr:PTk_ElementSpec):longint;cdecl;external libtkstub8_6;
{ 252  }
function Tk_GetElementId(name:Pchar):longint;cdecl;external libtkstub8_6;
{ 253  }
function Tk_CreateStyle(name:Pchar; engine:TTk_StyleEngine; clientData:TClientData):TTk_Style;cdecl;external libtkstub8_6;
{ 254  }
function Tk_GetStyle(interp:PTcl_Interp; name:Pchar):TTk_Style;cdecl;external libtkstub8_6;
{ 255  }
procedure Tk_FreeStyle(style:TTk_Style);cdecl;external libtkstub8_6;
{ 256  }
function Tk_NameOfStyle(style:TTk_Style):Pchar;cdecl;external libtkstub8_6;
{ 257  }
function Tk_AllocStyleFromObj(interp:PTcl_Interp; objPtr:PTcl_Obj):TTk_Style;cdecl;external libtkstub8_6;
{ 258  }
function Tk_GetStyleFromObj(objPtr:PTcl_Obj):TTk_Style;cdecl;external libtkstub8_6;
{ 259  }
procedure Tk_FreeStyleFromObj(objPtr:PTcl_Obj);cdecl;external libtkstub8_6;
{ 260  }
function Tk_GetStyledElement(style:TTk_Style; elementId:longint; optionTable:TTk_OptionTable):TTk_StyledElement;cdecl;external libtkstub8_6;
{ 261  }
procedure Tk_GetElementSize(style:TTk_Style; element:TTk_StyledElement; recordPtr:Pchar; tkwin:TTk_Window; width:longint; 
            height:longint; inner:longint; widthPtr:Plongint; heightPtr:Plongint);cdecl;external libtkstub8_6;
{ 262  }
procedure Tk_GetElementBox(style:TTk_Style; element:TTk_StyledElement; recordPtr:Pchar; tkwin:TTk_Window; x:longint; 
            y:longint; width:longint; height:longint; inner:longint; xPtr:Plongint; 
            yPtr:Plongint; widthPtr:Plongint; heightPtr:Plongint);cdecl;external libtkstub8_6;
{ 263  }
function Tk_GetElementBorderWidth(style:TTk_Style; element:TTk_StyledElement; recordPtr:Pchar; tkwin:TTk_Window):longint;cdecl;external libtkstub8_6;
{ 264  }
procedure Tk_DrawElement(style:TTk_Style; element:TTk_StyledElement; recordPtr:Pchar; tkwin:TTk_Window; d:TDrawable; 
            x:longint; y:longint; width:longint; height:longint; state:longint);cdecl;external libtkstub8_6;
{ 265  }
function Tk_PhotoExpand(interp:PTcl_Interp; handle:TTk_PhotoHandle; width:longint; height:longint):longint;cdecl;external libtkstub8_6;
{ 266  }
function Tk_PhotoPutBlock(interp:PTcl_Interp; handle:TTk_PhotoHandle; blockPtr:PTk_PhotoImageBlock; x:longint; y:longint; 
           width:longint; height:longint; compRule:longint):longint;cdecl;external libtkstub8_6;
{ 267  }
function Tk_PhotoPutZoomedBlock(interp:PTcl_Interp; handle:TTk_PhotoHandle; blockPtr:PTk_PhotoImageBlock; x:longint; y:longint; 
           width:longint; height:longint; zoomX:longint; zoomY:longint; subsampleX:longint; 
           subsampleY:longint; compRule:longint):longint;cdecl;external libtkstub8_6;
{ 268  }
function Tk_PhotoSetSize(interp:PTcl_Interp; handle:TTk_PhotoHandle; width:longint; height:longint):longint;cdecl;external libtkstub8_6;
{ 269  }
function Tk_GetUserInactiveTime(dpy:PDisplay):longint;cdecl;external libtkstub8_6;
{ 270  }
procedure Tk_ResetUserInactiveTime(dpy:PDisplay);cdecl;external libtkstub8_6;
{ 271  }
function Tk_Interp(tkwin:TTk_Window):PTcl_Interp;cdecl;external libtkstub8_6;
{ 272  }
procedure Tk_CreateOldImageType(typePtr:PTk_ImageType);cdecl;external libtkstub8_6;
{ 273  }
procedure Tk_CreateOldPhotoImageFormat(formatPtr:PTk_PhotoImageFormat);cdecl;external libtkstub8_6;
{ Slot 274 is reserved  }
{ Slot 275 is reserved  }
{ Slot 276 is reserved  }
{ Slot 277 is reserved  }
{ Slot 278 is reserved  }
{ Slot 279 is reserved  }
{ Slot 280 is reserved  }
{ Slot 281 is reserved  }
{ Slot 282 is reserved  }
{ Slot 283 is reserved  }
{ Slot 284 is reserved  }
{ Slot 285 is reserved  }
{ Slot 286 is reserved  }
{ Slot 287 is reserved  }
{ Slot 288 is reserved  }
{ Slot 289 is reserved  }
{ 290  }
procedure TkUnusedStubEntry;cdecl;external libtkstub8_6;
type
  PTkStubHooks = ^TTkStubHooks;
  TTkStubHooks = record
      tkPlatStubs : PTkPlatStubs;
      tkIntStubs : PTkIntStubs;
      tkIntPlatStubs : PTkIntPlatStubs;
      tkIntXlibStubs : PTkIntXlibStubs;
    end;
{ 0  }
{ 1  }
{ 2  }
{ 3  }
{ 4  }
{ 5  }
{ 6  }
{ 7  }
{ 8  }
{ 9  }
{ 10  }
{ 11  }
{ 12  }
{ 13  }
{ 14  }
{ 15  }
{ 16  }
{ 17  }
{ 18  }
{ 19  }
{ 20  }
{ 21  }
{ 22  }
{ 23  }
{ 24  }
{ 25  }
{ 26  }
{ 27  }
{ 28  }
{ 29  }
{ 30  }
{ 31  }
{ 32  }
{ 33  }
{ 34  }
{ 35  }
{ 36  }
{ 37  }
{ 38  }
{ 39  }
{ 40  }
{ 41  }
{ 42  }
{ 43  }
{ 44  }
{ 45  }
{ 46  }
{ 47  }
{ 48  }
{ 49  }
{ 50  }
{ 51  }
{ 52  }
{ 53  }
{ 54  }
{ 55  }
{ 56  }
{ 57  }
{ 58  }
{ 59  }
{ 60  }
{ 61  }
{ 62  }
{ 63  }
{ 64  }
{ 65  }
{ 66  }
{ 67  }
{ 68  }
{ 69  }
{ 70  }
{ 71  }
{ 72  }
{ 73  }
{ 74  }
{ 75  }
{ 76  }
{ 77  }
{ 78  }
{ 79  }
{ 80  }
{ 81  }
{ 82  }
{ 83  }
{ 84  }
{ 85  }
{ 86  }
{ 87  }
{ 88  }
{ 89  }
{ 90  }
{ 91  }
{ 92  }
{ 93  }
{ 94  }
{ 95  }
{ 96  }
{ 97  }
{ 98  }
{ 99  }
{ 100  }
{ 101  }
{ 102  }
{ 103  }
{ 104  }
{ 105  }
{ 106  }
{ 107  }
{ 108  }
{ 109  }
{ 110  }
{ 111  }
{ 112  }
{ 113  }
{ 114  }
{ 115  }
{ 116  }
{ 117  }
{ 118  }
{ 119  }
{ 120  }
{ 121  }
{ 122  }
{ 123  }
{ 124  }
{ 125  }
{ 126  }
{ 127  }
{ 128  }
{ 129  }
{ 130  }
{ 131  }
{ 132  }
{ 133  }
{ 134  }
{ 135  }
{ 136  }
{ 137  }
{ 138  }
{ 139  }
{ 140  }
{ 141  }
{ 142  }
{ 143  }
{ 144  }
{ 145  }
{ 146  }
{ 147  }
{ 148  }
{ 149  }
{ 150  }
{ 151  }
{ 152  }
{ 153  }
{ 154  }
{ 155  }
{ 156  }
{ 157  }
{ 158  }
{ 159  }
{ 160  }
{ 161  }
{ 162  }
{ 163  }
{ 164  }
{ 165  }
{ 166  }
{ 167  }
{ 168  }
{ 169  }
{ 170  }
{ 171  }
{ 172  }
{ 173  }
{ 174  }
{ 175  }
{ 176  }
{ 177  }
{ 178  }
{ 179  }
{ 180  }
{ 181  }
{ 182  }
{ 183  }
{ 184  }
{ 185  }
{ 186  }
{ 187  }
{ 188  }
{ 189  }
{ 190  }
{ 191  }
{ 192  }
{ 193  }
{ 194  }
{ 195  }
{ 196  }
{ 197  }
{ 198  }
{ 199  }
{ 200  }
{ 201  }
{ 202  }
{ 203  }
{ 204  }
{ 205  }
{ 206  }
{ 207  }
{ 208  }
{ 209  }
{ 210  }
{ 211  }
{ 212  }
{ 213  }
{ 214  }
{ 215  }
{ 216  }
{ 217  }
{ 220  }
{ 221  }
{ 222  }
{ 223  }
{ 224  }
{ 225  }
{ 226  }
{ 227  }
{ 228  }
{ 229  }
{ 230  }
{ 231  }
{ 232  }
{ 233  }
{ 234  }
{ 235  }
{ 236  }
{ 237  }
{ 238  }
{ 239  }
{ 240  }
{ 241  }
{ 242  }
{ 243  }
{ 244  }
{ 245  }
{ 246  }
{ 247  }
{ 248  }
{ 249  }
{ 250  }
{ 251  }
{ 252  }
{ 253  }
{ 254  }
{ 255  }
{ 256  }
{ 257  }
{ 258  }
{ 259  }
{ 260  }
{ 261  }
{ 262  }
{ 263  }
{ 264  }
{ 265  }
{ 266  }
{ 267  }
{ 268  }
{ 269  }
{ 270  }
{ 271  }
{ 272  }
{ 273  }
{ 290  }

  PTkStubs = ^TTkStubs;
  TTkStubs = record
      magic : longint;
      hooks : PTkStubHooks;
      tk_MainLoop : procedure ;cdecl;
      tk_3DBorderColor : function (border:TTk_3DBorder):PXColor;cdecl;
      tk_3DBorderGC : function (tkwin:TTk_Window; border:TTk_3DBorder; which:longint):TGC;cdecl;
      tk_3DHorizontalBevel : procedure (tkwin:TTk_Window; drawable:TDrawable; border:TTk_3DBorder; x:longint; y:longint; 
                    width:longint; height:longint; leftIn:longint; rightIn:longint; topBevel:longint; 
                    relief:longint);cdecl;
      tk_3DVerticalBevel : procedure (tkwin:TTk_Window; drawable:TDrawable; border:TTk_3DBorder; x:longint; y:longint; 
                    width:longint; height:longint; leftBevel:longint; relief:longint);cdecl;
      tk_AddOption : procedure (tkwin:TTk_Window; name:Pchar; value:Pchar; priority:longint);cdecl;
      tk_BindEvent : procedure (bindingTable:TTk_BindingTable; eventPtr:PXEvent; tkwin:TTk_Window; numObjects:longint; objectPtr:PClientData);cdecl;
      tk_CanvasDrawableCoords : procedure (canvas:TTk_Canvas; x:Tdouble; y:Tdouble; drawableXPtr:Psmallint; drawableYPtr:Psmallint);cdecl;
      tk_CanvasEventuallyRedraw : procedure (canvas:TTk_Canvas; x1:longint; y1:longint; x2:longint; y2:longint);cdecl;
      tk_CanvasGetCoord : function (interp:PTcl_Interp; canvas:TTk_Canvas; str:Pchar; doublePtr:Pdouble):longint;cdecl;
      tk_CanvasGetTextInfo : function (canvas:TTk_Canvas):PTk_CanvasTextInfo;cdecl;
      tk_CanvasPsBitmap : function (interp:PTcl_Interp; canvas:TTk_Canvas; bitmap:TPixmap; x:longint; y:longint; 
                   width:longint; height:longint):longint;cdecl;
      tk_CanvasPsColor : function (interp:PTcl_Interp; canvas:TTk_Canvas; colorPtr:PXColor):longint;cdecl;
      tk_CanvasPsFont : function (interp:PTcl_Interp; canvas:TTk_Canvas; font:TTk_Font):longint;cdecl;
      tk_CanvasPsPath : procedure (interp:PTcl_Interp; canvas:TTk_Canvas; coordPtr:Pdouble; numPoints:longint);cdecl;
      tk_CanvasPsStipple : function (interp:PTcl_Interp; canvas:TTk_Canvas; bitmap:TPixmap):longint;cdecl;
      tk_CanvasPsY : function (canvas:TTk_Canvas; y:Tdouble):Tdouble;cdecl;
      tk_CanvasSetStippleOrigin : procedure (canvas:TTk_Canvas; gc:TGC);cdecl;
      tk_CanvasTagsParseProc : function (clientData:TClientData; interp:PTcl_Interp; tkwin:TTk_Window; value:Pchar; widgRec:Pchar; 
                   offset:longint):longint;cdecl;
      tk_CanvasTagsPrintProc : function (clientData:TClientData; tkwin:TTk_Window; widgRec:Pchar; offset:longint; freeProcPtr:PPTcl_FreeProc):Pchar;cdecl;
      tk_CanvasTkwin : function (canvas:TTk_Canvas):TTk_Window;cdecl;
      tk_CanvasWindowCoords : procedure (canvas:TTk_Canvas; x:Tdouble; y:Tdouble; screenXPtr:Psmallint; screenYPtr:Psmallint);cdecl;
      tk_ChangeWindowAttributes : procedure (tkwin:TTk_Window; valueMask:dword; attsPtr:PXSetWindowAttributes);cdecl;
      tk_CharBbox : function (layout:TTk_TextLayout; index:longint; xPtr:Plongint; yPtr:Plongint; widthPtr:Plongint; 
                   heightPtr:Plongint):longint;cdecl;
      tk_ClearSelection : procedure (tkwin:TTk_Window; selection:TAtom);cdecl;
      tk_ClipboardAppend : function (interp:PTcl_Interp; tkwin:TTk_Window; target:TAtom; format:TAtom; buffer:Pchar):longint;cdecl;
      tk_ClipboardClear : function (interp:PTcl_Interp; tkwin:TTk_Window):longint;cdecl;
      tk_ConfigureInfo : function (interp:PTcl_Interp; tkwin:TTk_Window; specs:PTk_ConfigSpec; widgRec:Pchar; argvName:Pchar; 
                   flags:longint):longint;cdecl;
      tk_ConfigureValue : function (interp:PTcl_Interp; tkwin:TTk_Window; specs:PTk_ConfigSpec; widgRec:Pchar; argvName:Pchar; 
                   flags:longint):longint;cdecl;
      tk_ConfigureWidget : function (interp:PTcl_Interp; tkwin:TTk_Window; specs:PTk_ConfigSpec; argc:longint; argv:PPchar; 
                   widgRec:Pchar; flags:longint):longint;cdecl;
      tk_ConfigureWindow : procedure (tkwin:TTk_Window; valueMask:dword; valuePtr:PXWindowChanges);cdecl;
      tk_ComputeTextLayout : function (font:TTk_Font; str:Pchar; numChars:longint; wrapLength:longint; justify:TTk_Justify; 
                   flags:longint; widthPtr:Plongint; heightPtr:Plongint):TTk_TextLayout;cdecl;
      tk_CoordsToWindow : function (rootX:longint; rootY:longint; tkwin:TTk_Window):TTk_Window;cdecl;
      tk_CreateBinding : function (interp:PTcl_Interp; bindingTable:TTk_BindingTable; object:TClientData; eventStr:Pchar; script:Pchar; 
                   append:longint):dword;cdecl;
      tk_CreateBindingTable : function (interp:PTcl_Interp):TTk_BindingTable;cdecl;
      tk_CreateErrorHandler : function (display:PDisplay; errNum:longint; request:longint; minorCode:longint; errorProc:PTk_ErrorProc; 
                   clientData:TClientData):TTk_ErrorHandler;cdecl;
      tk_CreateEventHandler : procedure (token:TTk_Window; mask:dword; proc:PTk_EventProc; clientData:TClientData);cdecl;
      tk_CreateGenericHandler : procedure (proc:PTk_GenericProc; clientData:TClientData);cdecl;
      tk_CreateImageType : procedure (typePtr:PTk_ImageType);cdecl;
      tk_CreateItemType : procedure (typePtr:PTk_ItemType);cdecl;
      tk_CreatePhotoImageFormat : procedure (formatPtr:PTk_PhotoImageFormat);cdecl;
      tk_CreateSelHandler : procedure (tkwin:TTk_Window; selection:TAtom; target:TAtom; proc:PTk_SelectionProc; clientData:TClientData; 
                    format:TAtom);cdecl;
      tk_CreateWindow : function (interp:PTcl_Interp; parent:TTk_Window; name:Pchar; screenName:Pchar):TTk_Window;cdecl;
      tk_CreateWindowFromPath : function (interp:PTcl_Interp; tkwin:TTk_Window; pathName:Pchar; screenName:Pchar):TTk_Window;cdecl;
      tk_DefineBitmap : function (interp:PTcl_Interp; name:Pchar; source:pointer; width:longint; height:longint):longint;cdecl;
      tk_DefineCursor : procedure (window:TTk_Window; cursor:TTk_Cursor);cdecl;
      tk_DeleteAllBindings : procedure (bindingTable:TTk_BindingTable; object:TClientData);cdecl;
      tk_DeleteBinding : function (interp:PTcl_Interp; bindingTable:TTk_BindingTable; object:TClientData; eventStr:Pchar):longint;cdecl;
      tk_DeleteBindingTable : procedure (bindingTable:TTk_BindingTable);cdecl;
      tk_DeleteErrorHandler : procedure (handler:TTk_ErrorHandler);cdecl;
      tk_DeleteEventHandler : procedure (token:TTk_Window; mask:dword; proc:PTk_EventProc; clientData:TClientData);cdecl;
      tk_DeleteGenericHandler : procedure (proc:PTk_GenericProc; clientData:TClientData);cdecl;
      tk_DeleteImage : procedure (interp:PTcl_Interp; name:Pchar);cdecl;
      tk_DeleteSelHandler : procedure (tkwin:TTk_Window; selection:TAtom; target:TAtom);cdecl;
      tk_DestroyWindow : procedure (tkwin:TTk_Window);cdecl;
      tk_DisplayName : function (tkwin:TTk_Window):Pchar;cdecl;
      tk_DistanceToTextLayout : function (layout:TTk_TextLayout; x:longint; y:longint):longint;cdecl;
      tk_Draw3DPolygon : procedure (tkwin:TTk_Window; drawable:TDrawable; border:TTk_3DBorder; pointPtr:PXPoint; numPoints:longint; 
                    borderWidth:longint; leftRelief:longint);cdecl;
      tk_Draw3DRectangle : procedure (tkwin:TTk_Window; drawable:TDrawable; border:TTk_3DBorder; x:longint; y:longint; 
                    width:longint; height:longint; borderWidth:longint; relief:longint);cdecl;
      tk_DrawChars : procedure (display:PDisplay; drawable:TDrawable; gc:TGC; tkfont:TTk_Font; source:Pchar; 
                    numBytes:longint; x:longint; y:longint);cdecl;
      tk_DrawFocusHighlight : procedure (tkwin:TTk_Window; gc:TGC; width:longint; drawable:TDrawable);cdecl;
      tk_DrawTextLayout : procedure (display:PDisplay; drawable:TDrawable; gc:TGC; layout:TTk_TextLayout; x:longint; 
                    y:longint; firstChar:longint; lastChar:longint);cdecl;
      tk_Fill3DPolygon : procedure (tkwin:TTk_Window; drawable:TDrawable; border:TTk_3DBorder; pointPtr:PXPoint; numPoints:longint; 
                    borderWidth:longint; leftRelief:longint);cdecl;
      tk_Fill3DRectangle : procedure (tkwin:TTk_Window; drawable:TDrawable; border:TTk_3DBorder; x:longint; y:longint; 
                    width:longint; height:longint; borderWidth:longint; relief:longint);cdecl;
      tk_FindPhoto : function (interp:PTcl_Interp; imageName:Pchar):TTk_PhotoHandle;cdecl;
      tk_FontId : function (font:TTk_Font):TFont;cdecl;
      tk_Free3DBorder : procedure (border:TTk_3DBorder);cdecl;
      tk_FreeBitmap : procedure (display:PDisplay; bitmap:TPixmap);cdecl;
      tk_FreeColor : procedure (colorPtr:PXColor);cdecl;
      tk_FreeColormap : procedure (display:PDisplay; colormap:TColormap);cdecl;
      tk_FreeCursor : procedure (display:PDisplay; cursor:TTk_Cursor);cdecl;
      tk_FreeFont : procedure (f:TTk_Font);cdecl;
      tk_FreeGC : procedure (display:PDisplay; gc:TGC);cdecl;
      tk_FreeImage : procedure (image:TTk_Image);cdecl;
      tk_FreeOptions : procedure (specs:PTk_ConfigSpec; widgRec:Pchar; display:PDisplay; needFlags:longint);cdecl;
      tk_FreePixmap : procedure (display:PDisplay; pixmap:TPixmap);cdecl;
      tk_FreeTextLayout : procedure (textLayout:TTk_TextLayout);cdecl;
      tk_FreeXId : procedure (display:PDisplay; xid:TXID);cdecl;
      tk_GCForColor : function (colorPtr:PXColor; drawable:TDrawable):TGC;cdecl;
      tk_GeometryRequest : procedure (tkwin:TTk_Window; reqWidth:longint; reqHeight:longint);cdecl;
      tk_Get3DBorder : function (interp:PTcl_Interp; tkwin:TTk_Window; colorName:TTk_Uid):TTk_3DBorder;cdecl;
      tk_GetAllBindings : procedure (interp:PTcl_Interp; bindingTable:TTk_BindingTable; object:TClientData);cdecl;
      tk_GetAnchor : function (interp:PTcl_Interp; str:Pchar; anchorPtr:PTk_Anchor):longint;cdecl;
      tk_GetAtomName : function (tkwin:TTk_Window; atom:TAtom):Pchar;cdecl;
      tk_GetBinding : function (interp:PTcl_Interp; bindingTable:TTk_BindingTable; object:TClientData; eventStr:Pchar):Pchar;cdecl;
      tk_GetBitmap : function (interp:PTcl_Interp; tkwin:TTk_Window; str:Pchar):TPixmap;cdecl;
      tk_GetBitmapFromData : function (interp:PTcl_Interp; tkwin:TTk_Window; source:pointer; width:longint; height:longint):TPixmap;cdecl;
      tk_GetCapStyle : function (interp:PTcl_Interp; str:Pchar; capPtr:Plongint):longint;cdecl;
      tk_GetColor : function (interp:PTcl_Interp; tkwin:TTk_Window; name:TTk_Uid):PXColor;cdecl;
      tk_GetColorByValue : function (tkwin:TTk_Window; colorPtr:PXColor):PXColor;cdecl;
      tk_GetColormap : function (interp:PTcl_Interp; tkwin:TTk_Window; str:Pchar):TColormap;cdecl;
      tk_GetCursor : function (interp:PTcl_Interp; tkwin:TTk_Window; str:TTk_Uid):TTk_Cursor;cdecl;
      tk_GetCursorFromData : function (interp:PTcl_Interp; tkwin:TTk_Window; source:Pchar; mask:Pchar; width:longint; 
                   height:longint; xHot:longint; yHot:longint; fg:TTk_Uid; bg:TTk_Uid):TTk_Cursor;cdecl;
      tk_GetFont : function (interp:PTcl_Interp; tkwin:TTk_Window; str:Pchar):TTk_Font;cdecl;
      tk_GetFontFromObj : function (tkwin:TTk_Window; objPtr:PTcl_Obj):TTk_Font;cdecl;
      tk_GetFontMetrics : procedure (font:TTk_Font; fmPtr:PTk_FontMetrics);cdecl;
      tk_GetGC : function (tkwin:TTk_Window; valueMask:dword; valuePtr:PXGCValues):TGC;cdecl;
      tk_GetImage : function (interp:PTcl_Interp; tkwin:TTk_Window; name:Pchar; changeProc:PTk_ImageChangedProc; clientData:TClientData):TTk_Image;cdecl;
      tk_GetImageMasterData : function (interp:PTcl_Interp; name:Pchar; typePtrPtr:PPTk_ImageType):TClientData;cdecl;
      tk_GetItemTypes : function :PTk_ItemType;cdecl;
      tk_GetJoinStyle : function (interp:PTcl_Interp; str:Pchar; joinPtr:Plongint):longint;cdecl;
      tk_GetJustify : function (interp:PTcl_Interp; str:Pchar; justifyPtr:PTk_Justify):longint;cdecl;
      tk_GetNumMainWindows : function :longint;cdecl;
      tk_GetOption : function (tkwin:TTk_Window; name:Pchar; className:Pchar):TTk_Uid;cdecl;
      tk_GetPixels : function (interp:PTcl_Interp; tkwin:TTk_Window; str:Pchar; intPtr:Plongint):longint;cdecl;
      tk_GetPixmap : function (display:PDisplay; d:TDrawable; width:longint; height:longint; depth:longint):TPixmap;cdecl;
      tk_GetRelief : function (interp:PTcl_Interp; name:Pchar; reliefPtr:Plongint):longint;cdecl;
      tk_GetRootCoords : procedure (tkwin:TTk_Window; xPtr:Plongint; yPtr:Plongint);cdecl;
      tk_GetScrollInfo : function (interp:PTcl_Interp; argc:longint; argv:PPchar; dblPtr:Pdouble; intPtr:Plongint):longint;cdecl;
      tk_GetScreenMM : function (interp:PTcl_Interp; tkwin:TTk_Window; str:Pchar; doublePtr:Pdouble):longint;cdecl;
      tk_GetSelection : function (interp:PTcl_Interp; tkwin:TTk_Window; selection:TAtom; target:TAtom; proc:PTk_GetSelProc; 
                   clientData:TClientData):longint;cdecl;
      tk_GetUid : function (str:Pchar):TTk_Uid;cdecl;
      tk_GetVisual : function (interp:PTcl_Interp; tkwin:TTk_Window; str:Pchar; depthPtr:Plongint; colormapPtr:PColormap):PVisual;cdecl;
      tk_GetVRootGeometry : procedure (tkwin:TTk_Window; xPtr:Plongint; yPtr:Plongint; widthPtr:Plongint; heightPtr:Plongint);cdecl;
      tk_Grab : function (interp:PTcl_Interp; tkwin:TTk_Window; grabGlobal:longint):longint;cdecl;
      tk_HandleEvent : procedure (eventPtr:PXEvent);cdecl;
      tk_IdToWindow : function (display:PDisplay; window:TWindow):TTk_Window;cdecl;
      tk_ImageChanged : procedure (model:TTk_ImageMaster; x:longint; y:longint; width:longint; height:longint; 
                    imageWidth:longint; imageHeight:longint);cdecl;
      tk_Init : function (interp:PTcl_Interp):longint;cdecl;
      tk_InternAtom : function (tkwin:TTk_Window; name:Pchar):TAtom;cdecl;
      tk_IntersectTextLayout : function (layout:TTk_TextLayout; x:longint; y:longint; width:longint; height:longint):longint;cdecl;
      tk_MaintainGeometry : procedure (window:TTk_Window; container:TTk_Window; x:longint; y:longint; width:longint; 
                    height:longint);cdecl;
      tk_MainWindow : function (interp:PTcl_Interp):TTk_Window;cdecl;
      tk_MakeWindowExist : procedure (tkwin:TTk_Window);cdecl;
      tk_ManageGeometry : procedure (tkwin:TTk_Window; mgrPtr:PTk_GeomMgr; clientData:TClientData);cdecl;
      tk_MapWindow : procedure (tkwin:TTk_Window);cdecl;
      tk_MeasureChars : function (tkfont:TTk_Font; source:Pchar; numBytes:longint; maxPixels:longint; flags:longint; 
                   lengthPtr:Plongint):longint;cdecl;
      tk_MoveResizeWindow : procedure (tkwin:TTk_Window; x:longint; y:longint; width:longint; height:longint);cdecl;
      tk_MoveWindow : procedure (tkwin:TTk_Window; x:longint; y:longint);cdecl;
      tk_MoveToplevelWindow : procedure (tkwin:TTk_Window; x:longint; y:longint);cdecl;
      tk_NameOf3DBorder : function (border:TTk_3DBorder):Pchar;cdecl;
      tk_NameOfAnchor : function (anchor:TTk_Anchor):Pchar;cdecl;
      tk_NameOfBitmap : function (display:PDisplay; bitmap:TPixmap):Pchar;cdecl;
      tk_NameOfCapStyle : function (cap:longint):Pchar;cdecl;
      tk_NameOfColor : function (colorPtr:PXColor):Pchar;cdecl;
      tk_NameOfCursor : function (display:PDisplay; cursor:TTk_Cursor):Pchar;cdecl;
      tk_NameOfFont : function (font:TTk_Font):Pchar;cdecl;
      tk_NameOfImage : function (model:TTk_ImageMaster):Pchar;cdecl;
      tk_NameOfJoinStyle : function (join:longint):Pchar;cdecl;
      tk_NameOfJustify : function (justify:TTk_Justify):Pchar;cdecl;
      tk_NameOfRelief : function (relief:longint):Pchar;cdecl;
      tk_NameToWindow : function (interp:PTcl_Interp; pathName:Pchar; tkwin:TTk_Window):TTk_Window;cdecl;
      tk_OwnSelection : procedure (tkwin:TTk_Window; selection:TAtom; proc:PTk_LostSelProc; clientData:TClientData);cdecl;
      tk_ParseArgv : function (interp:PTcl_Interp; tkwin:TTk_Window; argcPtr:Plongint; argv:PPchar; argTable:PTk_ArgvInfo; 
                   flags:longint):longint;cdecl;
      tk_PhotoPutBlock_NoComposite : procedure (handle:TTk_PhotoHandle; blockPtr:PTk_PhotoImageBlock; x:longint; y:longint; width:longint; 
                    height:longint);cdecl;
      tk_PhotoPutZoomedBlock_NoComposite : procedure (handle:TTk_PhotoHandle; blockPtr:PTk_PhotoImageBlock; x:longint; y:longint; width:longint; 
                    height:longint; zoomX:longint; zoomY:longint; subsampleX:longint; subsampleY:longint);cdecl;
      tk_PhotoGetImage : function (handle:TTk_PhotoHandle; blockPtr:PTk_PhotoImageBlock):longint;cdecl;
      tk_PhotoBlank : procedure (handle:TTk_PhotoHandle);cdecl;
      tk_PhotoExpand_Panic : procedure (handle:TTk_PhotoHandle; width:longint; height:longint);cdecl;
      tk_PhotoGetSize : procedure (handle:TTk_PhotoHandle; widthPtr:Plongint; heightPtr:Plongint);cdecl;
      tk_PhotoSetSize_Panic : procedure (handle:TTk_PhotoHandle; width:longint; height:longint);cdecl;
      tk_PointToChar : function (layout:TTk_TextLayout; x:longint; y:longint):longint;cdecl;
      tk_PostscriptFontName : function (tkfont:TTk_Font; dsPtr:PTcl_DString):longint;cdecl;
      tk_PreserveColormap : procedure (display:PDisplay; colormap:TColormap);cdecl;
      tk_QueueWindowEvent : procedure (eventPtr:PXEvent; position:TTcl_QueuePosition);cdecl;
      tk_RedrawImage : procedure (image:TTk_Image; imageX:longint; imageY:longint; width:longint; height:longint; 
                    drawable:TDrawable; drawableX:longint; drawableY:longint);cdecl;
      tk_ResizeWindow : procedure (tkwin:TTk_Window; width:longint; height:longint);cdecl;
      tk_RestackWindow : function (tkwin:TTk_Window; aboveBelow:longint; other:TTk_Window):longint;cdecl;
      tk_RestrictEvents : function (proc:PTk_RestrictProc; arg:TClientData; prevArgPtr:PClientData):PTk_RestrictProc;cdecl;
      tk_SafeInit : function (interp:PTcl_Interp):longint;cdecl;
      tk_SetAppName : function (tkwin:TTk_Window; name:Pchar):Pchar;cdecl;
      tk_SetBackgroundFromBorder : procedure (tkwin:TTk_Window; border:TTk_3DBorder);cdecl;
      tk_SetClass : procedure (tkwin:TTk_Window; className:Pchar);cdecl;
      tk_SetGrid : procedure (tkwin:TTk_Window; reqWidth:longint; reqHeight:longint; gridWidth:longint; gridHeight:longint);cdecl;
      tk_SetInternalBorder : procedure (tkwin:TTk_Window; width:longint);cdecl;
      tk_SetWindowBackground : procedure (tkwin:TTk_Window; pixel:dword);cdecl;
      tk_SetWindowBackgroundPixmap : procedure (tkwin:TTk_Window; pixmap:TPixmap);cdecl;
      tk_SetWindowBorder : procedure (tkwin:TTk_Window; pixel:dword);cdecl;
      tk_SetWindowBorderWidth : procedure (tkwin:TTk_Window; width:longint);cdecl;
      tk_SetWindowBorderPixmap : procedure (tkwin:TTk_Window; pixmap:TPixmap);cdecl;
      tk_SetWindowColormap : procedure (tkwin:TTk_Window; colormap:TColormap);cdecl;
      tk_SetWindowVisual : function (tkwin:TTk_Window; visual:PVisual; depth:longint; colormap:TColormap):longint;cdecl;
      tk_SizeOfBitmap : procedure (display:PDisplay; bitmap:TPixmap; widthPtr:Plongint; heightPtr:Plongint);cdecl;
      tk_SizeOfImage : procedure (image:TTk_Image; widthPtr:Plongint; heightPtr:Plongint);cdecl;
      tk_StrictMotif : function (tkwin:TTk_Window):longint;cdecl;
      tk_TextLayoutToPostscript : procedure (interp:PTcl_Interp; layout:TTk_TextLayout);cdecl;
      tk_TextWidth : function (font:TTk_Font; str:Pchar; numBytes:longint):longint;cdecl;
      tk_UndefineCursor : procedure (window:TTk_Window);cdecl;
      tk_UnderlineChars : procedure (display:PDisplay; drawable:TDrawable; gc:TGC; tkfont:TTk_Font; source:Pchar; 
                    x:longint; y:longint; firstByte:longint; lastByte:longint);cdecl;
      tk_UnderlineTextLayout : procedure (display:PDisplay; drawable:TDrawable; gc:TGC; layout:TTk_TextLayout; x:longint; 
                    y:longint; underline:longint);cdecl;
      tk_Ungrab : procedure (tkwin:TTk_Window);cdecl;
      tk_UnmaintainGeometry : procedure (window:TTk_Window; container:TTk_Window);cdecl;
      tk_UnmapWindow : procedure (tkwin:TTk_Window);cdecl;
      tk_UnsetGrid : procedure (tkwin:TTk_Window);cdecl;
      tk_UpdatePointer : procedure (tkwin:TTk_Window; x:longint; y:longint; state:longint);cdecl;
      tk_AllocBitmapFromObj : function (interp:PTcl_Interp; tkwin:TTk_Window; objPtr:PTcl_Obj):TPixmap;cdecl;
      tk_Alloc3DBorderFromObj : function (interp:PTcl_Interp; tkwin:TTk_Window; objPtr:PTcl_Obj):TTk_3DBorder;cdecl;
      tk_AllocColorFromObj : function (interp:PTcl_Interp; tkwin:TTk_Window; objPtr:PTcl_Obj):PXColor;cdecl;
      tk_AllocCursorFromObj : function (interp:PTcl_Interp; tkwin:TTk_Window; objPtr:PTcl_Obj):TTk_Cursor;cdecl;
      tk_AllocFontFromObj : function (interp:PTcl_Interp; tkwin:TTk_Window; objPtr:PTcl_Obj):TTk_Font;cdecl;
      tk_CreateOptionTable : function (interp:PTcl_Interp; templatePtr:PTk_OptionSpec):TTk_OptionTable;cdecl;
      tk_DeleteOptionTable : procedure (optionTable:TTk_OptionTable);cdecl;
      tk_Free3DBorderFromObj : procedure (tkwin:TTk_Window; objPtr:PTcl_Obj);cdecl;
      tk_FreeBitmapFromObj : procedure (tkwin:TTk_Window; objPtr:PTcl_Obj);cdecl;
      tk_FreeColorFromObj : procedure (tkwin:TTk_Window; objPtr:PTcl_Obj);cdecl;
      tk_FreeConfigOptions : procedure (recordPtr:Pchar; optionToken:TTk_OptionTable; tkwin:TTk_Window);cdecl;
      tk_FreeSavedOptions : procedure (savePtr:PTk_SavedOptions);cdecl;
      tk_FreeCursorFromObj : procedure (tkwin:TTk_Window; objPtr:PTcl_Obj);cdecl;
      tk_FreeFontFromObj : procedure (tkwin:TTk_Window; objPtr:PTcl_Obj);cdecl;
      tk_Get3DBorderFromObj : function (tkwin:TTk_Window; objPtr:PTcl_Obj):TTk_3DBorder;cdecl;
      tk_GetAnchorFromObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj; anchorPtr:PTk_Anchor):longint;cdecl;
      tk_GetBitmapFromObj : function (tkwin:TTk_Window; objPtr:PTcl_Obj):TPixmap;cdecl;
      tk_GetColorFromObj : function (tkwin:TTk_Window; objPtr:PTcl_Obj):PXColor;cdecl;
      tk_GetCursorFromObj : function (tkwin:TTk_Window; objPtr:PTcl_Obj):TTk_Cursor;cdecl;
      tk_GetOptionInfo : function (interp:PTcl_Interp; recordPtr:Pchar; optionTable:TTk_OptionTable; namePtr:PTcl_Obj; tkwin:TTk_Window):PTcl_Obj;cdecl;
      tk_GetOptionValue : function (interp:PTcl_Interp; recordPtr:Pchar; optionTable:TTk_OptionTable; namePtr:PTcl_Obj; tkwin:TTk_Window):PTcl_Obj;cdecl;
      tk_GetJustifyFromObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj; justifyPtr:PTk_Justify):longint;cdecl;
      tk_GetMMFromObj : function (interp:PTcl_Interp; tkwin:TTk_Window; objPtr:PTcl_Obj; doublePtr:Pdouble):longint;cdecl;
      tk_GetPixelsFromObj : function (interp:PTcl_Interp; tkwin:TTk_Window; objPtr:PTcl_Obj; intPtr:Plongint):longint;cdecl;
      tk_GetReliefFromObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj; resultPtr:Plongint):longint;cdecl;
      tk_GetScrollInfoObj : function (interp:PTcl_Interp; objc:longint; objv:PPTcl_Obj; dblPtr:Pdouble; intPtr:Plongint):longint;cdecl;
      tk_InitOptions : function (interp:PTcl_Interp; recordPtr:Pchar; optionToken:TTk_OptionTable; tkwin:TTk_Window):longint;cdecl;
      tk_MainEx : procedure (argc:longint; argv:PPchar; appInitProc:PTcl_AppInitProc; interp:PTcl_Interp);cdecl;
      tk_RestoreSavedOptions : procedure (savePtr:PTk_SavedOptions);cdecl;
      tk_SetOptions : function (interp:PTcl_Interp; recordPtr:Pchar; optionTable:TTk_OptionTable; objc:longint; objv:PPTcl_Obj; 
                   tkwin:TTk_Window; savePtr:PTk_SavedOptions; maskPtr:Plongint):longint;cdecl;
      tk_InitConsoleChannels : procedure (interp:PTcl_Interp);cdecl;
      tk_CreateConsoleWindow : function (interp:PTcl_Interp):longint;cdecl;
      tk_CreateSmoothMethod : procedure (interp:PTcl_Interp; method:PTk_SmoothMethod);cdecl;
      reserved218 : procedure ;cdecl;
      reserved219 : procedure ;cdecl;
      tk_GetDash : function (interp:PTcl_Interp; value:Pchar; dash:PTk_Dash):longint;cdecl;
      tk_CreateOutline : procedure (outline:PTk_Outline);cdecl;
      tk_DeleteOutline : procedure (display:PDisplay; outline:PTk_Outline);cdecl;
      tk_ConfigOutlineGC : function (gcValues:PXGCValues; canvas:TTk_Canvas; item:PTk_Item; outline:PTk_Outline):longint;cdecl;
      tk_ChangeOutlineGC : function (canvas:TTk_Canvas; item:PTk_Item; outline:PTk_Outline):longint;cdecl;
      tk_ResetOutlineGC : function (canvas:TTk_Canvas; item:PTk_Item; outline:PTk_Outline):longint;cdecl;
      tk_CanvasPsOutline : function (canvas:TTk_Canvas; item:PTk_Item; outline:PTk_Outline):longint;cdecl;
      tk_SetTSOrigin : procedure (tkwin:TTk_Window; gc:TGC; x:longint; y:longint);cdecl;
      tk_CanvasGetCoordFromObj : function (interp:PTcl_Interp; canvas:TTk_Canvas; obj:PTcl_Obj; doublePtr:Pdouble):longint;cdecl;
      tk_CanvasSetOffset : procedure (canvas:TTk_Canvas; gc:TGC; offset:PTk_TSOffset);cdecl;
      tk_DitherPhoto : procedure (handle:TTk_PhotoHandle; x:longint; y:longint; width:longint; height:longint);cdecl;
      tk_PostscriptBitmap : function (interp:PTcl_Interp; tkwin:TTk_Window; psInfo:TTk_PostscriptInfo; bitmap:TPixmap; startX:longint; 
                   startY:longint; width:longint; height:longint):longint;cdecl;
      tk_PostscriptColor : function (interp:PTcl_Interp; psInfo:TTk_PostscriptInfo; colorPtr:PXColor):longint;cdecl;
      tk_PostscriptFont : function (interp:PTcl_Interp; psInfo:TTk_PostscriptInfo; font:TTk_Font):longint;cdecl;
      tk_PostscriptImage : function (image:TTk_Image; interp:PTcl_Interp; tkwin:TTk_Window; psinfo:TTk_PostscriptInfo; x:longint; 
                   y:longint; width:longint; height:longint; prepass:longint):longint;cdecl;
      tk_PostscriptPath : procedure (interp:PTcl_Interp; psInfo:TTk_PostscriptInfo; coordPtr:Pdouble; numPoints:longint);cdecl;
      tk_PostscriptStipple : function (interp:PTcl_Interp; tkwin:TTk_Window; psInfo:TTk_PostscriptInfo; bitmap:TPixmap):longint;cdecl;
      tk_PostscriptY : function (y:Tdouble; psInfo:TTk_PostscriptInfo):Tdouble;cdecl;
      tk_PostscriptPhoto : function (interp:PTcl_Interp; blockPtr:PTk_PhotoImageBlock; psInfo:TTk_PostscriptInfo; width:longint; height:longint):longint;cdecl;
      tk_CreateClientMessageHandler : procedure (proc:PTk_ClientMessageProc);cdecl;
      tk_DeleteClientMessageHandler : procedure (proc:PTk_ClientMessageProc);cdecl;
      tk_CreateAnonymousWindow : function (interp:PTcl_Interp; parent:TTk_Window; screenName:Pchar):TTk_Window;cdecl;
      tk_SetClassProcs : procedure (tkwin:TTk_Window; procs:PTk_ClassProcs; instanceData:TClientData);cdecl;
      tk_SetInternalBorderEx : procedure (tkwin:TTk_Window; left:longint; right:longint; top:longint; bottom:longint);cdecl;
      tk_SetMinimumRequestSize : procedure (tkwin:TTk_Window; minWidth:longint; minHeight:longint);cdecl;
      tk_SetCaretPos : procedure (tkwin:TTk_Window; x:longint; y:longint; height:longint);cdecl;
      tk_PhotoPutBlock_Panic : procedure (handle:TTk_PhotoHandle; blockPtr:PTk_PhotoImageBlock; x:longint; y:longint; width:longint; 
                    height:longint; compRule:longint);cdecl;
      tk_PhotoPutZoomedBlock_Panic : procedure (handle:TTk_PhotoHandle; blockPtr:PTk_PhotoImageBlock; x:longint; y:longint; width:longint; 
                    height:longint; zoomX:longint; zoomY:longint; subsampleX:longint; subsampleY:longint; 
                    compRule:longint);cdecl;
      tk_CollapseMotionEvents : function (display:PDisplay; collapse:longint):longint;cdecl;
      tk_RegisterStyleEngine : function (name:Pchar; parent:TTk_StyleEngine):TTk_StyleEngine;cdecl;
      tk_GetStyleEngine : function (name:Pchar):TTk_StyleEngine;cdecl;
      tk_RegisterStyledElement : function (engine:TTk_StyleEngine; templatePtr:PTk_ElementSpec):longint;cdecl;
      tk_GetElementId : function (name:Pchar):longint;cdecl;
      tk_CreateStyle : function (name:Pchar; engine:TTk_StyleEngine; clientData:TClientData):TTk_Style;cdecl;
      tk_GetStyle : function (interp:PTcl_Interp; name:Pchar):TTk_Style;cdecl;
      tk_FreeStyle : procedure (style:TTk_Style);cdecl;
      tk_NameOfStyle : function (style:TTk_Style):Pchar;cdecl;
      tk_AllocStyleFromObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj):TTk_Style;cdecl;
      tk_GetStyleFromObj : function (objPtr:PTcl_Obj):TTk_Style;cdecl;
      tk_FreeStyleFromObj : procedure (objPtr:PTcl_Obj);cdecl;
      tk_GetStyledElement : function (style:TTk_Style; elementId:longint; optionTable:TTk_OptionTable):TTk_StyledElement;cdecl;
      tk_GetElementSize : procedure (style:TTk_Style; element:TTk_StyledElement; recordPtr:Pchar; tkwin:TTk_Window; width:longint; 
                    height:longint; inner:longint; widthPtr:Plongint; heightPtr:Plongint);cdecl;
      tk_GetElementBox : procedure (style:TTk_Style; element:TTk_StyledElement; recordPtr:Pchar; tkwin:TTk_Window; x:longint; 
                    y:longint; width:longint; height:longint; inner:longint; xPtr:Plongint; 
                    yPtr:Plongint; widthPtr:Plongint; heightPtr:Plongint);cdecl;
      tk_GetElementBorderWidth : function (style:TTk_Style; element:TTk_StyledElement; recordPtr:Pchar; tkwin:TTk_Window):longint;cdecl;
      tk_DrawElement : procedure (style:TTk_Style; element:TTk_StyledElement; recordPtr:Pchar; tkwin:TTk_Window; d:TDrawable; 
                    x:longint; y:longint; width:longint; height:longint; state:longint);cdecl;
      tk_PhotoExpand : function (interp:PTcl_Interp; handle:TTk_PhotoHandle; width:longint; height:longint):longint;cdecl;
      tk_PhotoPutBlock : function (interp:PTcl_Interp; handle:TTk_PhotoHandle; blockPtr:PTk_PhotoImageBlock; x:longint; y:longint; 
                   width:longint; height:longint; compRule:longint):longint;cdecl;
      tk_PhotoPutZoomedBlock : function (interp:PTcl_Interp; handle:TTk_PhotoHandle; blockPtr:PTk_PhotoImageBlock; x:longint; y:longint; 
                   width:longint; height:longint; zoomX:longint; zoomY:longint; subsampleX:longint; 
                   subsampleY:longint; compRule:longint):longint;cdecl;
      tk_PhotoSetSize : function (interp:PTcl_Interp; handle:TTk_PhotoHandle; width:longint; height:longint):longint;cdecl;
      tk_GetUserInactiveTime : function (dpy:PDisplay):longint;cdecl;
      tk_ResetUserInactiveTime : procedure (dpy:PDisplay);cdecl;
      tk_Interp : function (tkwin:TTk_Window):PTcl_Interp;cdecl;
      tk_CreateOldImageType : procedure (typePtr:PTk_ImageType);cdecl;
      tk_CreateOldPhotoImageFormat : procedure (formatPtr:PTk_PhotoImageFormat);cdecl;
      reserved274 : procedure ;cdecl;
      reserved275 : procedure ;cdecl;
      reserved276 : procedure ;cdecl;
      reserved277 : procedure ;cdecl;
      reserved278 : procedure ;cdecl;
      reserved279 : procedure ;cdecl;
      reserved280 : procedure ;cdecl;
      reserved281 : procedure ;cdecl;
      reserved282 : procedure ;cdecl;
      reserved283 : procedure ;cdecl;
      reserved284 : procedure ;cdecl;
      reserved285 : procedure ;cdecl;
      reserved286 : procedure ;cdecl;
      reserved287 : procedure ;cdecl;
      reserved288 : procedure ;cdecl;
      reserved289 : procedure ;cdecl;
      tkUnusedStubEntry : procedure ;cdecl;
    end;
  var
    tkStubsPtr : PTkStubs;cvar;external libtkstub8_6;
{ C++ end of extern C conditionnal removed }
{$if defined(USE_TK_STUBS)}
{
 * Inline function declarations:
  }
{ 0  }

const
  Tk_MainLoop = tkStubsPtr^.tk_MainLoop;  
{ 1  }
  Tk_3DBorderColor = tkStubsPtr^.tk_3DBorderColor;  
{ 2  }
  Tk_3DBorderGC = tkStubsPtr^.tk_3DBorderGC;  
{ 3  }
  Tk_3DHorizontalBevel = tkStubsPtr^.tk_3DHorizontalBevel;  
{ 4  }
  Tk_3DVerticalBevel = tkStubsPtr^.tk_3DVerticalBevel;  
{ 5  }
  Tk_AddOption = tkStubsPtr^.tk_AddOption;  
{ 6  }
  Tk_BindEvent = tkStubsPtr^.tk_BindEvent;  
{ 7  }
  Tk_CanvasDrawableCoords = tkStubsPtr^.tk_CanvasDrawableCoords;  
{ 8  }
  Tk_CanvasEventuallyRedraw = tkStubsPtr^.tk_CanvasEventuallyRedraw;  
{ 9  }
  Tk_CanvasGetCoord = tkStubsPtr^.tk_CanvasGetCoord;  
{ 10  }
  Tk_CanvasGetTextInfo = tkStubsPtr^.tk_CanvasGetTextInfo;  
{ 11  }
  Tk_CanvasPsBitmap = tkStubsPtr^.tk_CanvasPsBitmap;  
{ 12  }
  Tk_CanvasPsColor = tkStubsPtr^.tk_CanvasPsColor;  
{ 13  }
  Tk_CanvasPsFont = tkStubsPtr^.tk_CanvasPsFont;  
{ 14  }
  Tk_CanvasPsPath = tkStubsPtr^.tk_CanvasPsPath;  
{ 15  }
  Tk_CanvasPsStipple = tkStubsPtr^.tk_CanvasPsStipple;  
{ 16  }
  Tk_CanvasPsY = tkStubsPtr^.tk_CanvasPsY;  
{ 17  }
  Tk_CanvasSetStippleOrigin = tkStubsPtr^.tk_CanvasSetStippleOrigin;  
{ 18  }
  Tk_CanvasTagsParseProc = tkStubsPtr^.tk_CanvasTagsParseProc;  
{ 19  }
  Tk_CanvasTagsPrintProc = tkStubsPtr^.tk_CanvasTagsPrintProc;  
{ 20  }
  Tk_CanvasTkwin = tkStubsPtr^.tk_CanvasTkwin;  
{ 21  }
  Tk_CanvasWindowCoords = tkStubsPtr^.tk_CanvasWindowCoords;  
{ 22  }
  Tk_ChangeWindowAttributes = tkStubsPtr^.tk_ChangeWindowAttributes;  
{ 23  }
  Tk_CharBbox = tkStubsPtr^.tk_CharBbox;  
{ 24  }
  Tk_ClearSelection = tkStubsPtr^.tk_ClearSelection;  
{ 25  }
  Tk_ClipboardAppend = tkStubsPtr^.tk_ClipboardAppend;  
{ 26  }
  Tk_ClipboardClear = tkStubsPtr^.tk_ClipboardClear;  
{ 27  }
  Tk_ConfigureInfo = tkStubsPtr^.tk_ConfigureInfo;  
{ 28  }
  Tk_ConfigureValue = tkStubsPtr^.tk_ConfigureValue;  
{ 29  }
  Tk_ConfigureWidget = tkStubsPtr^.tk_ConfigureWidget;  
{ 30  }
  Tk_ConfigureWindow = tkStubsPtr^.tk_ConfigureWindow;  
{ 31  }
  Tk_ComputeTextLayout = tkStubsPtr^.tk_ComputeTextLayout;  
{ 32  }
  Tk_CoordsToWindow = tkStubsPtr^.tk_CoordsToWindow;  
{ 33  }
  Tk_CreateBinding = tkStubsPtr^.tk_CreateBinding;  
{ 34  }
  Tk_CreateBindingTable = tkStubsPtr^.tk_CreateBindingTable;  
{ 35  }
  Tk_CreateErrorHandler = tkStubsPtr^.tk_CreateErrorHandler;  
{ 36  }
  Tk_CreateEventHandler = tkStubsPtr^.tk_CreateEventHandler;  
{ 37  }
  Tk_CreateGenericHandler = tkStubsPtr^.tk_CreateGenericHandler;  
{ 38  }
  Tk_CreateImageType = tkStubsPtr^.tk_CreateImageType;  
{ 39  }
  Tk_CreateItemType = tkStubsPtr^.tk_CreateItemType;  
{ 40  }
  Tk_CreatePhotoImageFormat = tkStubsPtr^.tk_CreatePhotoImageFormat;  
{ 41  }
  Tk_CreateSelHandler = tkStubsPtr^.tk_CreateSelHandler;  
{ 42  }
  Tk_CreateWindow = tkStubsPtr^.tk_CreateWindow;  
{ 43  }
  Tk_CreateWindowFromPath = tkStubsPtr^.tk_CreateWindowFromPath;  
{ 44  }
  Tk_DefineBitmap = tkStubsPtr^.tk_DefineBitmap;  
{ 45  }
  Tk_DefineCursor = tkStubsPtr^.tk_DefineCursor;  
{ 46  }
  Tk_DeleteAllBindings = tkStubsPtr^.tk_DeleteAllBindings;  
{ 47  }
  Tk_DeleteBinding = tkStubsPtr^.tk_DeleteBinding;  
{ 48  }
  Tk_DeleteBindingTable = tkStubsPtr^.tk_DeleteBindingTable;  
{ 49  }
  Tk_DeleteErrorHandler = tkStubsPtr^.tk_DeleteErrorHandler;  
{ 50  }
  Tk_DeleteEventHandler = tkStubsPtr^.tk_DeleteEventHandler;  
{ 51  }
  Tk_DeleteGenericHandler = tkStubsPtr^.tk_DeleteGenericHandler;  
{ 52  }
  Tk_DeleteImage = tkStubsPtr^.tk_DeleteImage;  
{ 53  }
  Tk_DeleteSelHandler = tkStubsPtr^.tk_DeleteSelHandler;  
{ 54  }
  Tk_DestroyWindow = tkStubsPtr^.tk_DestroyWindow;  
{ 55  }
  Tk_DisplayName = tkStubsPtr^.tk_DisplayName;  
{ 56  }
  Tk_DistanceToTextLayout = tkStubsPtr^.tk_DistanceToTextLayout;  
{ 57  }
  Tk_Draw3DPolygon = tkStubsPtr^.tk_Draw3DPolygon;  
{ 58  }
  Tk_Draw3DRectangle = tkStubsPtr^.tk_Draw3DRectangle;  
{ 59  }
  Tk_DrawChars = tkStubsPtr^.tk_DrawChars;  
{ 60  }
  Tk_DrawFocusHighlight = tkStubsPtr^.tk_DrawFocusHighlight;  
{ 61  }
  Tk_DrawTextLayout = tkStubsPtr^.tk_DrawTextLayout;  
{ 62  }
  Tk_Fill3DPolygon = tkStubsPtr^.tk_Fill3DPolygon;  
{ 63  }
  Tk_Fill3DRectangle = tkStubsPtr^.tk_Fill3DRectangle;  
{ 64  }
  Tk_FindPhoto = tkStubsPtr^.tk_FindPhoto;  
{ 65  }
  Tk_FontId = tkStubsPtr^.tk_FontId;  
{ 66  }
  Tk_Free3DBorder = tkStubsPtr^.tk_Free3DBorder;  
{ 67  }
  Tk_FreeBitmap = tkStubsPtr^.tk_FreeBitmap;  
{ 68  }
  Tk_FreeColor = tkStubsPtr^.tk_FreeColor;  
{ 69  }
  Tk_FreeColormap = tkStubsPtr^.tk_FreeColormap;  
{ 70  }
  Tk_FreeCursor = tkStubsPtr^.tk_FreeCursor;  
{ 71  }
  Tk_FreeFont = tkStubsPtr^.tk_FreeFont;  
{ 72  }
  Tk_FreeGC = tkStubsPtr^.tk_FreeGC;  
{ 73  }
  Tk_FreeImage = tkStubsPtr^.tk_FreeImage;  
{ 74  }
  Tk_FreeOptions = tkStubsPtr^.tk_FreeOptions;  
{ 75  }
  Tk_FreePixmap = tkStubsPtr^.tk_FreePixmap;  
{ 76  }
  Tk_FreeTextLayout = tkStubsPtr^.tk_FreeTextLayout;  
{ 77  }
  Tk_FreeXId = tkStubsPtr^.tk_FreeXId;  
{ 78  }
  Tk_GCForColor = tkStubsPtr^.tk_GCForColor;  
{ 79  }
  Tk_GeometryRequest = tkStubsPtr^.tk_GeometryRequest;  
{ 80  }
  Tk_Get3DBorder = tkStubsPtr^.tk_Get3DBorder;  
{ 81  }
  Tk_GetAllBindings = tkStubsPtr^.tk_GetAllBindings;  
{ 82  }
  Tk_GetAnchor = tkStubsPtr^.tk_GetAnchor;  
{ 83  }
  Tk_GetAtomName = tkStubsPtr^.tk_GetAtomName;  
{ 84  }
  Tk_GetBinding = tkStubsPtr^.tk_GetBinding;  
{ 85  }
  Tk_GetBitmap = tkStubsPtr^.tk_GetBitmap;  
{ 86  }
  Tk_GetBitmapFromData = tkStubsPtr^.tk_GetBitmapFromData;  
{ 87  }
  Tk_GetCapStyle = tkStubsPtr^.tk_GetCapStyle;  
{ 88  }
  Tk_GetColor = tkStubsPtr^.tk_GetColor;  
{ 89  }
  Tk_GetColorByValue = tkStubsPtr^.tk_GetColorByValue;  
{ 90  }
  Tk_GetColormap = tkStubsPtr^.tk_GetColormap;  
{ 91  }
  Tk_GetCursor = tkStubsPtr^.tk_GetCursor;  
{ 92  }
  Tk_GetCursorFromData = tkStubsPtr^.tk_GetCursorFromData;  
{ 93  }
  Tk_GetFont = tkStubsPtr^.tk_GetFont;  
{ 94  }
  Tk_GetFontFromObj = tkStubsPtr^.tk_GetFontFromObj;  
{ 95  }
  Tk_GetFontMetrics = tkStubsPtr^.tk_GetFontMetrics;  
{ 96  }
  Tk_GetGC = tkStubsPtr^.tk_GetGC;  
{ 97  }
  Tk_GetImage = tkStubsPtr^.tk_GetImage;  
{ 98  }
  Tk_GetImageMasterData = tkStubsPtr^.tk_GetImageMasterData;  
{ 99  }
  Tk_GetItemTypes = tkStubsPtr^.tk_GetItemTypes;  
{ 100  }
  Tk_GetJoinStyle = tkStubsPtr^.tk_GetJoinStyle;  
{ 101  }
  Tk_GetJustify = tkStubsPtr^.tk_GetJustify;  
{ 102  }
  Tk_GetNumMainWindows = tkStubsPtr^.tk_GetNumMainWindows;  
{ 103  }
  Tk_GetOption = tkStubsPtr^.tk_GetOption;  
{ 104  }
  Tk_GetPixels = tkStubsPtr^.tk_GetPixels;  
{ 105  }
  Tk_GetPixmap = tkStubsPtr^.tk_GetPixmap;  
{ 106  }
  Tk_GetRelief = tkStubsPtr^.tk_GetRelief;  
{ 107  }
  Tk_GetRootCoords = tkStubsPtr^.tk_GetRootCoords;  
{ 108  }
  Tk_GetScrollInfo = tkStubsPtr^.tk_GetScrollInfo;  
{ 109  }
  Tk_GetScreenMM = tkStubsPtr^.tk_GetScreenMM;  
{ 110  }
  Tk_GetSelection = tkStubsPtr^.tk_GetSelection;  
{ 111  }
  Tk_GetUid = tkStubsPtr^.tk_GetUid;  
{ 112  }
  Tk_GetVisual = tkStubsPtr^.tk_GetVisual;  
{ 113  }
  Tk_GetVRootGeometry = tkStubsPtr^.tk_GetVRootGeometry;  
{ 114  }
  Tk_Grab = tkStubsPtr^.tk_Grab;  
{ 115  }
  Tk_HandleEvent = tkStubsPtr^.tk_HandleEvent;  
{ 116  }
  Tk_IdToWindow = tkStubsPtr^.tk_IdToWindow;  
{ 117  }
  Tk_ImageChanged = tkStubsPtr^.tk_ImageChanged;  
{ 118  }
  Tk_Init = tkStubsPtr^.tk_Init;  
{ 119  }
  Tk_InternAtom = tkStubsPtr^.tk_InternAtom;  
{ 120  }
  Tk_IntersectTextLayout = tkStubsPtr^.tk_IntersectTextLayout;  
{ 121  }
  Tk_MaintainGeometry = tkStubsPtr^.tk_MaintainGeometry;  
{ 122  }
  Tk_MainWindow = tkStubsPtr^.tk_MainWindow;  
{ 123  }
  Tk_MakeWindowExist = tkStubsPtr^.tk_MakeWindowExist;  
{ 124  }
  Tk_ManageGeometry = tkStubsPtr^.tk_ManageGeometry;  
{ 125  }
  Tk_MapWindow = tkStubsPtr^.tk_MapWindow;  
{ 126  }
  Tk_MeasureChars = tkStubsPtr^.tk_MeasureChars;  
{ 127  }
  Tk_MoveResizeWindow = tkStubsPtr^.tk_MoveResizeWindow;  
{ 128  }
  Tk_MoveWindow = tkStubsPtr^.tk_MoveWindow;  
{ 129  }
  Tk_MoveToplevelWindow = tkStubsPtr^.tk_MoveToplevelWindow;  
{ 130  }
  Tk_NameOf3DBorder = tkStubsPtr^.tk_NameOf3DBorder;  
{ 131  }
  Tk_NameOfAnchor = tkStubsPtr^.tk_NameOfAnchor;  
{ 132  }
  Tk_NameOfBitmap = tkStubsPtr^.tk_NameOfBitmap;  
{ 133  }
  Tk_NameOfCapStyle = tkStubsPtr^.tk_NameOfCapStyle;  
{ 134  }
  Tk_NameOfColor = tkStubsPtr^.tk_NameOfColor;  
{ 135  }
  Tk_NameOfCursor = tkStubsPtr^.tk_NameOfCursor;  
{ 136  }
  Tk_NameOfFont = tkStubsPtr^.tk_NameOfFont;  
{ 137  }
  Tk_NameOfImage = tkStubsPtr^.tk_NameOfImage;  
{ 138  }
  Tk_NameOfJoinStyle = tkStubsPtr^.tk_NameOfJoinStyle;  
{ 139  }
  Tk_NameOfJustify = tkStubsPtr^.tk_NameOfJustify;  
{ 140  }
  Tk_NameOfRelief = tkStubsPtr^.tk_NameOfRelief;  
{ 141  }
  Tk_NameToWindow = tkStubsPtr^.tk_NameToWindow;  
{ 142  }
  Tk_OwnSelection = tkStubsPtr^.tk_OwnSelection;  
{ 143  }
  Tk_ParseArgv = tkStubsPtr^.tk_ParseArgv;  
{ 144  }
  Tk_PhotoPutBlock_NoComposite = tkStubsPtr^.tk_PhotoPutBlock_NoComposite;  
{ 145  }
  Tk_PhotoPutZoomedBlock_NoComposite = tkStubsPtr^.tk_PhotoPutZoomedBlock_NoComposite;  
{ 146  }
  Tk_PhotoGetImage = tkStubsPtr^.tk_PhotoGetImage;  
{ 147  }
  Tk_PhotoBlank = tkStubsPtr^.tk_PhotoBlank;  
{ 148  }
  Tk_PhotoExpand_Panic = tkStubsPtr^.tk_PhotoExpand_Panic;  
{ 149  }
  Tk_PhotoGetSize = tkStubsPtr^.tk_PhotoGetSize;  
{ 150  }
  Tk_PhotoSetSize_Panic = tkStubsPtr^.tk_PhotoSetSize_Panic;  
{ 151  }
  Tk_PointToChar = tkStubsPtr^.tk_PointToChar;  
{ 152  }
  Tk_PostscriptFontName = tkStubsPtr^.tk_PostscriptFontName;  
{ 153  }
  Tk_PreserveColormap = tkStubsPtr^.tk_PreserveColormap;  
{ 154  }
  Tk_QueueWindowEvent = tkStubsPtr^.tk_QueueWindowEvent;  
{ 155  }
  Tk_RedrawImage = tkStubsPtr^.tk_RedrawImage;  
{ 156  }
  Tk_ResizeWindow = tkStubsPtr^.tk_ResizeWindow;  
{ 157  }
  Tk_RestackWindow = tkStubsPtr^.tk_RestackWindow;  
{ 158  }
  Tk_RestrictEvents = tkStubsPtr^.tk_RestrictEvents;  
{ 159  }
  Tk_SafeInit = tkStubsPtr^.tk_SafeInit;  
{ 160  }
  Tk_SetAppName = tkStubsPtr^.tk_SetAppName;  
{ 161  }
  Tk_SetBackgroundFromBorder = tkStubsPtr^.tk_SetBackgroundFromBorder;  
{ 162  }
  Tk_SetClass = tkStubsPtr^.tk_SetClass;  
{ 163  }
  Tk_SetGrid = tkStubsPtr^.tk_SetGrid;  
{ 164  }
  Tk_SetInternalBorder = tkStubsPtr^.tk_SetInternalBorder;  
{ 165  }
  Tk_SetWindowBackground = tkStubsPtr^.tk_SetWindowBackground;  
{ 166  }
  Tk_SetWindowBackgroundPixmap = tkStubsPtr^.tk_SetWindowBackgroundPixmap;  
{ 167  }
  Tk_SetWindowBorder = tkStubsPtr^.tk_SetWindowBorder;  
{ 168  }
  Tk_SetWindowBorderWidth = tkStubsPtr^.tk_SetWindowBorderWidth;  
{ 169  }
  Tk_SetWindowBorderPixmap = tkStubsPtr^.tk_SetWindowBorderPixmap;  
{ 170  }
  Tk_SetWindowColormap = tkStubsPtr^.tk_SetWindowColormap;  
{ 171  }
  Tk_SetWindowVisual = tkStubsPtr^.tk_SetWindowVisual;  
{ 172  }
  Tk_SizeOfBitmap = tkStubsPtr^.tk_SizeOfBitmap;  
{ 173  }
  Tk_SizeOfImage = tkStubsPtr^.tk_SizeOfImage;  
{ 174  }
  Tk_StrictMotif = tkStubsPtr^.tk_StrictMotif;  
{ 175  }
  Tk_TextLayoutToPostscript = tkStubsPtr^.tk_TextLayoutToPostscript;  
{ 176  }
  Tk_TextWidth = tkStubsPtr^.tk_TextWidth;  
{ 177  }
  Tk_UndefineCursor = tkStubsPtr^.tk_UndefineCursor;  
{ 178  }
  Tk_UnderlineChars = tkStubsPtr^.tk_UnderlineChars;  
{ 179  }
  Tk_UnderlineTextLayout = tkStubsPtr^.tk_UnderlineTextLayout;  
{ 180  }
  Tk_Ungrab = tkStubsPtr^.tk_Ungrab;  
{ 181  }
  Tk_UnmaintainGeometry = tkStubsPtr^.tk_UnmaintainGeometry;  
{ 182  }
  Tk_UnmapWindow = tkStubsPtr^.tk_UnmapWindow;  
{ 183  }
  Tk_UnsetGrid = tkStubsPtr^.tk_UnsetGrid;  
{ 184  }
  Tk_UpdatePointer = tkStubsPtr^.tk_UpdatePointer;  
{ 185  }
  Tk_AllocBitmapFromObj = tkStubsPtr^.tk_AllocBitmapFromObj;  
{ 186  }
  Tk_Alloc3DBorderFromObj = tkStubsPtr^.tk_Alloc3DBorderFromObj;  
{ 187  }
  Tk_AllocColorFromObj = tkStubsPtr^.tk_AllocColorFromObj;  
{ 188  }
  Tk_AllocCursorFromObj = tkStubsPtr^.tk_AllocCursorFromObj;  
{ 189  }
  Tk_AllocFontFromObj = tkStubsPtr^.tk_AllocFontFromObj;  
{ 190  }
  Tk_CreateOptionTable = tkStubsPtr^.tk_CreateOptionTable;  
{ 191  }
  Tk_DeleteOptionTable = tkStubsPtr^.tk_DeleteOptionTable;  
{ 192  }
  Tk_Free3DBorderFromObj = tkStubsPtr^.tk_Free3DBorderFromObj;  
{ 193  }
  Tk_FreeBitmapFromObj = tkStubsPtr^.tk_FreeBitmapFromObj;  
{ 194  }
  Tk_FreeColorFromObj = tkStubsPtr^.tk_FreeColorFromObj;  
{ 195  }
  Tk_FreeConfigOptions = tkStubsPtr^.tk_FreeConfigOptions;  
{ 196  }
  Tk_FreeSavedOptions = tkStubsPtr^.tk_FreeSavedOptions;  
{ 197  }
  Tk_FreeCursorFromObj = tkStubsPtr^.tk_FreeCursorFromObj;  
{ 198  }
  Tk_FreeFontFromObj = tkStubsPtr^.tk_FreeFontFromObj;  
{ 199  }
  Tk_Get3DBorderFromObj = tkStubsPtr^.tk_Get3DBorderFromObj;  
{ 200  }
  Tk_GetAnchorFromObj = tkStubsPtr^.tk_GetAnchorFromObj;  
{ 201  }
  Tk_GetBitmapFromObj = tkStubsPtr^.tk_GetBitmapFromObj;  
{ 202  }
  Tk_GetColorFromObj = tkStubsPtr^.tk_GetColorFromObj;  
{ 203  }
  Tk_GetCursorFromObj = tkStubsPtr^.tk_GetCursorFromObj;  
{ 204  }
  Tk_GetOptionInfo = tkStubsPtr^.tk_GetOptionInfo;  
{ 205  }
  Tk_GetOptionValue = tkStubsPtr^.tk_GetOptionValue;  
{ 206  }
  Tk_GetJustifyFromObj = tkStubsPtr^.tk_GetJustifyFromObj;  
{ 207  }
  Tk_GetMMFromObj = tkStubsPtr^.tk_GetMMFromObj;  
{ 208  }
  Tk_GetPixelsFromObj = tkStubsPtr^.tk_GetPixelsFromObj;  
{ 209  }
  Tk_GetReliefFromObj = tkStubsPtr^.tk_GetReliefFromObj;  
{ 210  }
  Tk_GetScrollInfoObj = tkStubsPtr^.tk_GetScrollInfoObj;  
{ 211  }
  Tk_InitOptions = tkStubsPtr^.tk_InitOptions;  
{ 212  }
  Tk_MainEx = tkStubsPtr^.tk_MainEx;  
{ 213  }
  Tk_RestoreSavedOptions = tkStubsPtr^.tk_RestoreSavedOptions;  
{ 214  }
  Tk_SetOptions = tkStubsPtr^.tk_SetOptions;  
{ 215  }
  Tk_InitConsoleChannels = tkStubsPtr^.tk_InitConsoleChannels;  
{ 216  }
  Tk_CreateConsoleWindow = tkStubsPtr^.tk_CreateConsoleWindow;  
{ 217  }
  Tk_CreateSmoothMethod = tkStubsPtr^.tk_CreateSmoothMethod;  
{ Slot 218 is reserved  }
{ Slot 219 is reserved  }
{ 220  }
  Tk_GetDash = tkStubsPtr^.tk_GetDash;  
{ 221  }
  Tk_CreateOutline = tkStubsPtr^.tk_CreateOutline;  
{ 222  }
  Tk_DeleteOutline = tkStubsPtr^.tk_DeleteOutline;  
{ 223  }
  Tk_ConfigOutlineGC = tkStubsPtr^.tk_ConfigOutlineGC;  
{ 224  }
  Tk_ChangeOutlineGC = tkStubsPtr^.tk_ChangeOutlineGC;  
{ 225  }
  Tk_ResetOutlineGC = tkStubsPtr^.tk_ResetOutlineGC;  
{ 226  }
  Tk_CanvasPsOutline = tkStubsPtr^.tk_CanvasPsOutline;  
{ 227  }
  Tk_SetTSOrigin = tkStubsPtr^.tk_SetTSOrigin;  
{ 228  }
  Tk_CanvasGetCoordFromObj = tkStubsPtr^.tk_CanvasGetCoordFromObj;  
{ 229  }
  Tk_CanvasSetOffset = tkStubsPtr^.tk_CanvasSetOffset;  
{ 230  }
  Tk_DitherPhoto = tkStubsPtr^.tk_DitherPhoto;  
{ 231  }
  Tk_PostscriptBitmap = tkStubsPtr^.tk_PostscriptBitmap;  
{ 232  }
  Tk_PostscriptColor = tkStubsPtr^.tk_PostscriptColor;  
{ 233  }
  Tk_PostscriptFont = tkStubsPtr^.tk_PostscriptFont;  
{ 234  }
  Tk_PostscriptImage = tkStubsPtr^.tk_PostscriptImage;  
{ 235  }
  Tk_PostscriptPath = tkStubsPtr^.tk_PostscriptPath;  
{ 236  }
  Tk_PostscriptStipple = tkStubsPtr^.tk_PostscriptStipple;  
{ 237  }
  Tk_PostscriptY = tkStubsPtr^.tk_PostscriptY;  
{ 238  }
  Tk_PostscriptPhoto = tkStubsPtr^.tk_PostscriptPhoto;  
{ 239  }
  Tk_CreateClientMessageHandler = tkStubsPtr^.tk_CreateClientMessageHandler;  
{ 240  }
  Tk_DeleteClientMessageHandler = tkStubsPtr^.tk_DeleteClientMessageHandler;  
{ 241  }
  Tk_CreateAnonymousWindow = tkStubsPtr^.tk_CreateAnonymousWindow;  
{ 242  }
  Tk_SetClassProcs = tkStubsPtr^.tk_SetClassProcs;  
{ 243  }
  Tk_SetInternalBorderEx = tkStubsPtr^.tk_SetInternalBorderEx;  
{ 244  }
  Tk_SetMinimumRequestSize = tkStubsPtr^.tk_SetMinimumRequestSize;  
{ 245  }
  Tk_SetCaretPos = tkStubsPtr^.tk_SetCaretPos;  
{ 246  }
  Tk_PhotoPutBlock_Panic = tkStubsPtr^.tk_PhotoPutBlock_Panic;  
{ 247  }
  Tk_PhotoPutZoomedBlock_Panic = tkStubsPtr^.tk_PhotoPutZoomedBlock_Panic;  
{ 248  }
  Tk_CollapseMotionEvents = tkStubsPtr^.tk_CollapseMotionEvents;  
{ 249  }
  Tk_RegisterStyleEngine = tkStubsPtr^.tk_RegisterStyleEngine;  
{ 250  }
  Tk_GetStyleEngine = tkStubsPtr^.tk_GetStyleEngine;  
{ 251  }
  Tk_RegisterStyledElement = tkStubsPtr^.tk_RegisterStyledElement;  
{ 252  }
  Tk_GetElementId = tkStubsPtr^.tk_GetElementId;  
{ 253  }
  Tk_CreateStyle = tkStubsPtr^.tk_CreateStyle;  
{ 254  }
  Tk_GetStyle = tkStubsPtr^.tk_GetStyle;  
{ 255  }
  Tk_FreeStyle = tkStubsPtr^.tk_FreeStyle;  
{ 256  }
  Tk_NameOfStyle = tkStubsPtr^.tk_NameOfStyle;  
{ 257  }
  Tk_AllocStyleFromObj = tkStubsPtr^.tk_AllocStyleFromObj;  
{ 258  }
  Tk_GetStyleFromObj = tkStubsPtr^.tk_GetStyleFromObj;  
{ 259  }
  Tk_FreeStyleFromObj = tkStubsPtr^.tk_FreeStyleFromObj;  
{ 260  }
  Tk_GetStyledElement = tkStubsPtr^.tk_GetStyledElement;  
{ 261  }
  Tk_GetElementSize = tkStubsPtr^.tk_GetElementSize;  
{ 262  }
  Tk_GetElementBox = tkStubsPtr^.tk_GetElementBox;  
{ 263  }
  Tk_GetElementBorderWidth = tkStubsPtr^.tk_GetElementBorderWidth;  
{ 264  }
  Tk_DrawElement = tkStubsPtr^.tk_DrawElement;  
{ 265  }
  Tk_PhotoExpand = tkStubsPtr^.tk_PhotoExpand;  
{ 266  }
  Tk_PhotoPutBlock = tkStubsPtr^.tk_PhotoPutBlock;  
{ 267  }
  Tk_PhotoPutZoomedBlock = tkStubsPtr^.tk_PhotoPutZoomedBlock;  
{ 268  }
  Tk_PhotoSetSize = tkStubsPtr^.tk_PhotoSetSize;  
{ 269  }
  Tk_GetUserInactiveTime = tkStubsPtr^.tk_GetUserInactiveTime;  
{ 270  }
  Tk_ResetUserInactiveTime = tkStubsPtr^.tk_ResetUserInactiveTime;  
{ 271  }
  Tk_Interp = tkStubsPtr^.tk_Interp;  
{ 272  }
  Tk_CreateOldImageType = tkStubsPtr^.tk_CreateOldImageType;  
{ 273  }
  Tk_CreateOldPhotoImageFormat = tkStubsPtr^.tk_CreateOldPhotoImageFormat;  
{ Slot 274 is reserved  }
{ Slot 275 is reserved  }
{ Slot 276 is reserved  }
{ Slot 277 is reserved  }
{ Slot 278 is reserved  }
{ Slot 279 is reserved  }
{ Slot 280 is reserved  }
{ Slot 281 is reserved  }
{ Slot 282 is reserved  }
{ Slot 283 is reserved  }
{ Slot 284 is reserved  }
{ Slot 285 is reserved  }
{ Slot 286 is reserved  }
{ Slot 287 is reserved  }
{ Slot 288 is reserved  }
{ Slot 289 is reserved  }
{ 290  }
  TkUnusedStubEntry = tkStubsPtr^.tkUnusedStubEntry;  
{$endif}
{ defined(USE_TK_STUBS)  }
{ !END!: Do not edit above this line.  }
{ Functions that don't belong in the stub table  }
{$undef Tk_MainEx}
{$undef Tk_Init}
{$undef Tk_SafeInit}
{$undef Tk_CreateConsoleWindow}

const
  Tk_GetImageModelData = Tk_GetImageMasterData;  
{$if defined(_WIN32) && defined(UNICODE)}

const
  Tk_MainEx = Tk_MainExW;  

procedure Tk_MainExW(argc:longint; argv:PPwchar_t; appInitProc:PTcl_AppInitProc; interp:PTcl_Interp);cdecl;external libtkstub8_6;
{$endif}
{$undef Tk_FreeStyleFromObj}
{ was #define dname(params) para_def_expr }
{ argument types are unknown }

function Tk_FreeStyleFromObj(objPtr : longint) : pointer;

{$undef TCL_STORAGE_CLASS}
const
  TCL_STORAGE_CLASS = DLLIMPORT;  
{$undef TkUnusedStubEntry}
{$endif}
{ _TKDECLS  }

// === Konventiert am: 15-4-25 13:26:52 ===


implementation


{ was #define dname(params) para_def_expr }
{ argument types are unknown }
function Tk_FreeStyleFromObj(objPtr : longint) : pointer;
begin
  Tk_FreeStyleFromObj:=pointer(objPtr);
end;


end.
