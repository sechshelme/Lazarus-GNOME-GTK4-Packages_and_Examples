unit tkPlatDecls;

interface

uses
  ctypes;

{$IFDEF FPC}
{$PACKRECORDS C}
{$ENDIF}


{
 * tkPlatDecls.h --
 *
 *	Declarations of functions in the platform-specific public Tcl API.
 *
 * Copyright (c) 1998-1999 by Scriptics Corporation.
 *
 * See the file "license.terms" for information on usage and redistribution
 * of this file, and for a DISCLAIMER OF ALL WARRANTIES.
  }
{$ifndef _TKPLATDECLS}
{$define _TKPLATDECLS}
{$ifdef BUILD_tk}
{$undef TCL_STORAGE_CLASS}

const
  TCL_STORAGE_CLASS = DLLEXPORT;  
{$endif}
{
 * WARNING: This file is automatically generated by the tools/genStubs.tcl
 * script.  Any modifications to the function declarations below should be made
 * in the generic/tk.decls script.
  }
{ C++ extern C conditionnal removed }
{ !BEGIN!: Do not edit below this line.  }
{ C++ extern C conditionnal removed }
{
 * Exported function declarations:
  }
{$if defined(_WIN32) || defined(__CYGWIN__) /* WIN */}
{ 0  }

function Tk_AttachHWND(tkwin:TTk_Window; hwnd:THWND):TWindow;cdecl;external libtkstub8_6;
{ 1  }
function Tk_GetHINSTANCE:THINSTANCE;cdecl;external libtkstub8_6;
{ 2  }
function Tk_GetHWND(window:TWindow):THWND;cdecl;external libtkstub8_6;
{ 3  }
function Tk_HWNDToWindow(hwnd:THWND):TTk_Window;cdecl;external libtkstub8_6;
{ 4  }
procedure Tk_PointerEvent(hwnd:THWND; x:longint; y:longint);cdecl;external libtkstub8_6;
{ 5  }
function Tk_TranslateWinEvent(hwnd:THWND; message:TUINT; wParam:TWPARAM; lParam:TLPARAM; result:PLRESULT):longint;cdecl;external libtkstub8_6;
{$endif}
{ WIN  }
{$ifdef MAC_OSX_TK /* AQUA */}
{ 0  }

procedure Tk_MacOSXSetEmbedHandler(registerWinProcPtr:PTk_MacOSXEmbedRegisterWinProc; getPortProcPtr:PTk_MacOSXEmbedGetGrafPortProc; containerExistProcPtr:PTk_MacOSXEmbedMakeContainerExistProc; getClipProc:PTk_MacOSXEmbedGetClipProc; getOffsetProc:PTk_MacOSXEmbedGetOffsetInParentProc);cdecl;external libtkstub8_6;
{ 1  }
procedure Tk_MacOSXTurnOffMenus;cdecl;external libtkstub8_6;
{ 2  }
procedure Tk_MacOSXTkOwnsCursor(tkOwnsIt:longint);cdecl;external libtkstub8_6;
{ 3  }
procedure TkMacOSXInitMenus(interp:PTcl_Interp);cdecl;external libtkstub8_6;
{ 4  }
procedure TkMacOSXInitAppleEvents(interp:PTcl_Interp);cdecl;external libtkstub8_6;
{ 5  }
procedure TkGenWMConfigureEvent(tkwin:TTk_Window; x:longint; y:longint; width:longint; height:longint; 
            flags:longint);cdecl;external libtkstub8_6;
{ 6  }
procedure TkMacOSXInvalClipRgns(tkwin:TTk_Window);cdecl;external libtkstub8_6;
{ 7  }
function TkMacOSXGetDrawablePort(drawable:TDrawable):pointer;cdecl;external libtkstub8_6;
{ 8  }
function TkMacOSXGetRootControl(drawable:TDrawable):pointer;cdecl;external libtkstub8_6;
{ 9  }
procedure Tk_MacOSXSetupTkNotifier;cdecl;external libtkstub8_6;
{ 10  }
function Tk_MacOSXIsAppInFront:longint;cdecl;external libtkstub8_6;
{ 11  }
function Tk_MacOSXGetTkWindow(w:pointer):TTk_Window;cdecl;external libtkstub8_6;
{ 12  }
function Tk_MacOSXGetCGContextForDrawable(drawable:TDrawable):pointer;cdecl;external libtkstub8_6;
{ 13  }
function Tk_MacOSXGetNSWindowForDrawable(drawable:TDrawable):pointer;cdecl;external libtkstub8_6;
{ Slot 14 is reserved  }
{ Slot 15 is reserved  }
{ 16  }
procedure TkGenWMConfigureEvent_(tkwin:TTk_Window; x:longint; y:longint; width:longint; height:longint; 
            flags:longint);cdecl;external libtkstub8_6;
{$endif}
{ AQUA  }
{$if defined(_WIN32) || defined(__CYGWIN__) /* WIN */}
{ 0  }
{ 1  }
{ 2  }
{ 3  }
{ 4  }
{ 5  }
{$endif}
{ WIN  }
{$ifdef MAC_OSX_TK /* AQUA */}
{ 0  }
{ 1  }
{ 2  }
{ 3  }
{ 4  }
{ 5  }
{ 6  }
{ 7  }
{ 8  }
{ 9  }
{ 10  }
{ 11  }
{ 12  }
{ 13  }
{ 16  }
{$endif}
{ AQUA  }
type
  PTkPlatStubs = ^TTkPlatStubs;
  TTkPlatStubs = record
      magic : longint;
      hooks : pointer;
      tk_AttachHWND : function (tkwin:TTk_Window; hwnd:THWND):TWindow;cdecl;
      tk_GetHINSTANCE : function :THINSTANCE;cdecl;
      tk_GetHWND : function (window:TWindow):THWND;cdecl;
      tk_HWNDToWindow : function (hwnd:THWND):TTk_Window;cdecl;
      tk_PointerEvent : procedure (hwnd:THWND; x:longint; y:longint);cdecl;
      tk_TranslateWinEvent : function (hwnd:THWND; message:TUINT; wParam:TWPARAM; lParam:TLPARAM; result:PLRESULT):longint;cdecl;
      tk_MacOSXSetEmbedHandler : procedure (registerWinProcPtr:PTk_MacOSXEmbedRegisterWinProc; getPortProcPtr:PTk_MacOSXEmbedGetGrafPortProc; containerExistProcPtr:PTk_MacOSXEmbedMakeContainerExistProc; getClipProc:PTk_MacOSXEmbedGetClipProc; getOffsetProc:PTk_MacOSXEmbedGetOffsetInParentProc);cdecl;
      tk_MacOSXTurnOffMenus : procedure ;cdecl;
      tk_MacOSXTkOwnsCursor : procedure (tkOwnsIt:longint);cdecl;
      tkMacOSXInitMenus : procedure (interp:PTcl_Interp);cdecl;
      tkMacOSXInitAppleEvents : procedure (interp:PTcl_Interp);cdecl;
      tkGenWMConfigureEvent : procedure (tkwin:TTk_Window; x:longint; y:longint; width:longint; height:longint; 
                    flags:longint);cdecl;
      tkMacOSXInvalClipRgns : procedure (tkwin:TTk_Window);cdecl;
      tkMacOSXGetDrawablePort : function (drawable:TDrawable):pointer;cdecl;
      tkMacOSXGetRootControl : function (drawable:TDrawable):pointer;cdecl;
      tk_MacOSXSetupTkNotifier : procedure ;cdecl;
      tk_MacOSXIsAppInFront : function :longint;cdecl;
      tk_MacOSXGetTkWindow : function (w:pointer):TTk_Window;cdecl;
      tk_MacOSXGetCGContextForDrawable : function (drawable:TDrawable):pointer;cdecl;
      tk_MacOSXGetNSWindowForDrawable : function (drawable:TDrawable):pointer;cdecl;
      reserved14 : procedure ;cdecl;
      reserved15 : procedure ;cdecl;
      tkGenWMConfigureEvent_ : procedure (tkwin:TTk_Window; x:longint; y:longint; width:longint; height:longint; 
                    flags:longint);cdecl;
    end;
  var
    tkPlatStubsPtr : PTkPlatStubs;cvar;external libtkstub8_6;
{ C++ end of extern C conditionnal removed }
{$if defined(USE_TK_STUBS)}
{
 * Inline function declarations:
  }
{$if defined(_WIN32) || defined(__CYGWIN__) /* WIN */}
{ 0  }

const
  Tk_AttachHWND = tkPlatStubsPtr^.tk_AttachHWND;  
{ 1  }
  Tk_GetHINSTANCE = tkPlatStubsPtr^.tk_GetHINSTANCE;  
{ 2  }
  Tk_GetHWND = tkPlatStubsPtr^.tk_GetHWND;  
{ 3  }
  Tk_HWNDToWindow = tkPlatStubsPtr^.tk_HWNDToWindow;  
{ 4  }
  Tk_PointerEvent = tkPlatStubsPtr^.tk_PointerEvent;  
{ 5  }
  Tk_TranslateWinEvent = tkPlatStubsPtr^.tk_TranslateWinEvent;  
{$endif}
{ WIN  }
{$ifdef MAC_OSX_TK /* AQUA */}
{ 0  }

const
  Tk_MacOSXSetEmbedHandler = tkPlatStubsPtr^.tk_MacOSXSetEmbedHandler;  
{ 1  }
  Tk_MacOSXTurnOffMenus = tkPlatStubsPtr^.tk_MacOSXTurnOffMenus;  
{ 2  }
  Tk_MacOSXTkOwnsCursor = tkPlatStubsPtr^.tk_MacOSXTkOwnsCursor;  
{ 3  }
  TkMacOSXInitMenus = tkPlatStubsPtr^.tkMacOSXInitMenus;  
{ 4  }
  TkMacOSXInitAppleEvents = tkPlatStubsPtr^.tkMacOSXInitAppleEvents;  
{ 5  }
  TkGenWMConfigureEvent = tkPlatStubsPtr^.tkGenWMConfigureEvent;  
{ 6  }
  TkMacOSXInvalClipRgns = tkPlatStubsPtr^.tkMacOSXInvalClipRgns;  
{ 7  }
  TkMacOSXGetDrawablePort = tkPlatStubsPtr^.tkMacOSXGetDrawablePort;  
{ 8  }
  TkMacOSXGetRootControl = tkPlatStubsPtr^.tkMacOSXGetRootControl;  
{ 9  }
  Tk_MacOSXSetupTkNotifier = tkPlatStubsPtr^.tk_MacOSXSetupTkNotifier;  
{ 10  }
  Tk_MacOSXIsAppInFront = tkPlatStubsPtr^.tk_MacOSXIsAppInFront;  
{ 11  }
  Tk_MacOSXGetTkWindow = tkPlatStubsPtr^.tk_MacOSXGetTkWindow;  
{ 12  }
  Tk_MacOSXGetCGContextForDrawable = tkPlatStubsPtr^.tk_MacOSXGetCGContextForDrawable;  
{ 13  }
  Tk_MacOSXGetNSWindowForDrawable = tkPlatStubsPtr^.tk_MacOSXGetNSWindowForDrawable;  
{ Slot 14 is reserved  }
{ Slot 15 is reserved  }
{ 16  }
  TkGenWMConfigureEvent_ = tkPlatStubsPtr^.tkGenWMConfigureEvent_;  
{$endif}
{ AQUA  }
{$endif}
{ defined(USE_TK_STUBS)  }
{ !END!: Do not edit above this line.  }
{ C++ end of extern C conditionnal removed }
{$undef TCL_STORAGE_CLASS}

const
  TCL_STORAGE_CLASS = DLLIMPORT;  
{$undef TkGenWMConfigureEvent_}
  Tk_MacOSXGetNSViewForDrawable = TkMacOSXGetRootControl;  
{$endif}
{ _TKPLATDECLS  }

// === Konventiert am: 15-4-25 13:27:00 ===


implementation



end.
