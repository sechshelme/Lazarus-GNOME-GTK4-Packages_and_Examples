
unit gdk_pixbuf_enum_types;
interface

{
  Automatically converted by H2Pas 1.0.0 from gdk_pixbuf_enum_types.h
  The following command line parameters were used:
    -p
    -T
    -d
    -c
    -e
    gdk_pixbuf_enum_types.h
}

{ Pointers to basic pascal types, inserted by h2pas conversion program.}
Type
  PLongint  = ^Longint;
  PSmallInt = ^SmallInt;
  PByte     = ^Byte;
  PWord     = ^Word;
  PDWord    = ^DWord;
  PDouble   = ^Double;

{$IFDEF FPC}
{$PACKRECORDS C}
{$ENDIF}


{ This file is generated by glib-mkenums, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses.  }
{$if defined(GDK_PIXBUF_DISABLE_SINGLE_INCLUDES) && !defined (GDK_PIXBUF_H_INSIDE) && !defined (GDK_PIXBUF_COMPILATION)}
{$error "Only <gdk-pixbuf/gdk-pixbuf.h> can be included directly."}
{$endif}
{$ifndef __GDK_PIXBUF_ENUM_TYPES_H__}
{$define __GDK_PIXBUF_ENUM_TYPES_H__}
{$include <glib-object.h>}
{$include <gdk-pixbuf/gdk-pixbuf-macros.h>}
{ enumerations from "gdk-pixbuf-core.h"  }

function gdk_pixbuf_alpha_mode_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GDK_TYPE_PIXBUF_ALPHA_MODE : longint; { return type might be wrong }

function gdk_colorspace_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GDK_TYPE_COLORSPACE : longint; { return type might be wrong }

function gdk_pixbuf_error_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GDK_TYPE_PIXBUF_ERROR : longint; { return type might be wrong }

{ enumerations from "gdk-pixbuf-transform.h"  }
function gdk_interp_type_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GDK_TYPE_INTERP_TYPE : longint; { return type might be wrong }

function gdk_pixbuf_rotation_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GDK_TYPE_PIXBUF_ROTATION : longint; { return type might be wrong }

{$endif}
{ __GDK_PIXBUF_ENUM_TYPES_H__  }
{ Generated data ends here  }

implementation

{ was #define dname def_expr }
function GDK_TYPE_PIXBUF_ALPHA_MODE : longint; { return type might be wrong }
  begin
    GDK_TYPE_PIXBUF_ALPHA_MODE:=gdk_pixbuf_alpha_mode_get_type;
  end;

{ was #define dname def_expr }
function GDK_TYPE_COLORSPACE : longint; { return type might be wrong }
  begin
    GDK_TYPE_COLORSPACE:=gdk_colorspace_get_type;
  end;

{ was #define dname def_expr }
function GDK_TYPE_PIXBUF_ERROR : longint; { return type might be wrong }
  begin
    GDK_TYPE_PIXBUF_ERROR:=gdk_pixbuf_error_get_type;
  end;

{ was #define dname def_expr }
function GDK_TYPE_INTERP_TYPE : longint; { return type might be wrong }
  begin
    GDK_TYPE_INTERP_TYPE:=gdk_interp_type_get_type;
  end;

{ was #define dname def_expr }
function GDK_TYPE_PIXBUF_ROTATION : longint; { return type might be wrong }
  begin
    GDK_TYPE_PIXBUF_ROTATION:=gdk_pixbuf_rotation_get_type;
  end;


end.
