
unit portal_enums;
interface

{
  Automatically converted by H2Pas 1.0.0 from portal_enums.h
  The following command line parameters were used:
    -p
    -T
    -d
    -c
    -e
    portal_enums.h
}

{ Pointers to basic pascal types, inserted by h2pas conversion program.}
Type
  PLongint  = ^Longint;
  PSmallInt = ^SmallInt;
  PByte     = ^Byte;
  PWord     = ^Word;
  PDWord    = ^DWord;
  PDouble   = ^Double;

{$IFDEF FPC}
{$PACKRECORDS C}
{$ENDIF}


{ This file is generated by glib-mkenums, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses.  }
(** unsupported pragma#pragma once*)
{$include <gio/gio.h>}
{$include <libportal/portal-helpers.h>}
{ enumerations from "account.h"  }

function xdp_user_information_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_USER_INFORMATION_FLAGS : longint; { return type might be wrong }

{ enumerations from "background.h"  }
function xdp_background_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_BACKGROUND_FLAGS : longint; { return type might be wrong }

{ enumerations from "camera.h"  }
function xdp_camera_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_CAMERA_FLAGS : longint; { return type might be wrong }

{ enumerations from "dynamic-launcher.h"  }
function xdp_launcher_type_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_LAUNCHER_TYPE : longint; { return type might be wrong }

{ enumerations from "email.h"  }
function xdp_email_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_EMAIL_FLAGS : longint; { return type might be wrong }

{ enumerations from "filechooser.h"  }
function xdp_open_file_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_OPEN_FILE_FLAGS : longint; { return type might be wrong }

function xdp_save_file_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_SAVE_FILE_FLAGS : longint; { return type might be wrong }

{ enumerations from "inhibit.h"  }
function xdp_inhibit_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_INHIBIT_FLAGS : longint; { return type might be wrong }

function xdp_login_session_state_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_LOGIN_SESSION_STATE : longint; { return type might be wrong }

function xdp_session_monitor_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_SESSION_MONITOR_FLAGS : longint; { return type might be wrong }

{ enumerations from "location.h"  }
function xdp_location_accuracy_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_LOCATION_ACCURACY : longint; { return type might be wrong }

function xdp_location_monitor_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_LOCATION_MONITOR_FLAGS : longint; { return type might be wrong }

{ enumerations from "notification.h"  }
function xdp_notification_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_NOTIFICATION_FLAGS : longint; { return type might be wrong }

{ enumerations from "openuri.h"  }
function xdp_open_uri_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_OPEN_URI_FLAGS : longint; { return type might be wrong }

{ enumerations from "print.h"  }
function xdp_print_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_PRINT_FLAGS : longint; { return type might be wrong }

{ enumerations from "remote.h"  }
function xdp_output_type_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_OUTPUT_TYPE : longint; { return type might be wrong }

function xdp_device_type_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_DEVICE_TYPE : longint; { return type might be wrong }

function xdp_session_type_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_SESSION_TYPE : longint; { return type might be wrong }

function xdp_session_state_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_SESSION_STATE : longint; { return type might be wrong }

function xdp_screencast_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_SCREENCAST_FLAGS : longint; { return type might be wrong }

function xdp_cursor_mode_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_CURSOR_MODE : longint; { return type might be wrong }

function xdp_persist_mode_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_PERSIST_MODE : longint; { return type might be wrong }

function xdp_remote_desktop_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_REMOTE_DESKTOP_FLAGS : longint; { return type might be wrong }

function xdp_button_state_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_BUTTON_STATE : longint; { return type might be wrong }

function xdp_discrete_axis_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_DISCRETE_AXIS : longint; { return type might be wrong }

function xdp_key_state_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_KEY_STATE : longint; { return type might be wrong }

{ enumerations from "screenshot.h"  }
function xdp_screenshot_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_SCREENSHOT_FLAGS : longint; { return type might be wrong }

{ enumerations from "spawn.h"  }
function xdp_spawn_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_SPAWN_FLAGS : longint; { return type might be wrong }

{ enumerations from "updates.h"  }
function xdp_update_status_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_UPDATE_STATUS : longint; { return type might be wrong }

function xdp_update_monitor_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_UPDATE_MONITOR_FLAGS : longint; { return type might be wrong }

function xdp_update_install_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_UPDATE_INSTALL_FLAGS : longint; { return type might be wrong }

{ enumerations from "wallpaper.h"  }
function xdp_wallpaper_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function XDP_TYPE_WALLPAPER_FLAGS : longint; { return type might be wrong }

{ Generated data ends here  }

implementation

{ was #define dname def_expr }
function XDP_TYPE_USER_INFORMATION_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_USER_INFORMATION_FLAGS:=xdp_user_information_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_BACKGROUND_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_BACKGROUND_FLAGS:=xdp_background_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_CAMERA_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_CAMERA_FLAGS:=xdp_camera_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_LAUNCHER_TYPE : longint; { return type might be wrong }
  begin
    XDP_TYPE_LAUNCHER_TYPE:=xdp_launcher_type_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_EMAIL_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_EMAIL_FLAGS:=xdp_email_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_OPEN_FILE_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_OPEN_FILE_FLAGS:=xdp_open_file_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_SAVE_FILE_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_SAVE_FILE_FLAGS:=xdp_save_file_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_INHIBIT_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_INHIBIT_FLAGS:=xdp_inhibit_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_LOGIN_SESSION_STATE : longint; { return type might be wrong }
  begin
    XDP_TYPE_LOGIN_SESSION_STATE:=xdp_login_session_state_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_SESSION_MONITOR_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_SESSION_MONITOR_FLAGS:=xdp_session_monitor_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_LOCATION_ACCURACY : longint; { return type might be wrong }
  begin
    XDP_TYPE_LOCATION_ACCURACY:=xdp_location_accuracy_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_LOCATION_MONITOR_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_LOCATION_MONITOR_FLAGS:=xdp_location_monitor_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_NOTIFICATION_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_NOTIFICATION_FLAGS:=xdp_notification_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_OPEN_URI_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_OPEN_URI_FLAGS:=xdp_open_uri_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_PRINT_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_PRINT_FLAGS:=xdp_print_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_OUTPUT_TYPE : longint; { return type might be wrong }
  begin
    XDP_TYPE_OUTPUT_TYPE:=xdp_output_type_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_DEVICE_TYPE : longint; { return type might be wrong }
  begin
    XDP_TYPE_DEVICE_TYPE:=xdp_device_type_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_SESSION_TYPE : longint; { return type might be wrong }
  begin
    XDP_TYPE_SESSION_TYPE:=xdp_session_type_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_SESSION_STATE : longint; { return type might be wrong }
  begin
    XDP_TYPE_SESSION_STATE:=xdp_session_state_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_SCREENCAST_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_SCREENCAST_FLAGS:=xdp_screencast_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_CURSOR_MODE : longint; { return type might be wrong }
  begin
    XDP_TYPE_CURSOR_MODE:=xdp_cursor_mode_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_PERSIST_MODE : longint; { return type might be wrong }
  begin
    XDP_TYPE_PERSIST_MODE:=xdp_persist_mode_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_REMOTE_DESKTOP_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_REMOTE_DESKTOP_FLAGS:=xdp_remote_desktop_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_BUTTON_STATE : longint; { return type might be wrong }
  begin
    XDP_TYPE_BUTTON_STATE:=xdp_button_state_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_DISCRETE_AXIS : longint; { return type might be wrong }
  begin
    XDP_TYPE_DISCRETE_AXIS:=xdp_discrete_axis_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_KEY_STATE : longint; { return type might be wrong }
  begin
    XDP_TYPE_KEY_STATE:=xdp_key_state_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_SCREENSHOT_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_SCREENSHOT_FLAGS:=xdp_screenshot_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_SPAWN_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_SPAWN_FLAGS:=xdp_spawn_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_UPDATE_STATUS : longint; { return type might be wrong }
  begin
    XDP_TYPE_UPDATE_STATUS:=xdp_update_status_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_UPDATE_MONITOR_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_UPDATE_MONITOR_FLAGS:=xdp_update_monitor_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_UPDATE_INSTALL_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_UPDATE_INSTALL_FLAGS:=xdp_update_install_flags_get_type;
  end;

{ was #define dname def_expr }
function XDP_TYPE_WALLPAPER_FLAGS : longint; { return type might be wrong }
  begin
    XDP_TYPE_WALLPAPER_FLAGS:=xdp_wallpaper_flags_get_type;
  end;


end.
