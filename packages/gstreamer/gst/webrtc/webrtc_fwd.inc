/////////////////////////////////////////////////////////////
//                                                         //
//   WARNUNG, dies Datei wird automatisch durch            //
//   das Program "Convert_Unit_to_pas_includes" erzeugt !  //
//   Erzeugt am: 05-10-2024   19:50                        //
//                                                         //
/////////////////////////////////////////////////////////////

{$IFDEF read_interface}

type
  PGstWebRTCDTLSTransportState = ^TGstWebRTCDTLSTransportState;
  TGstWebRTCDTLSTransportState = longint;

const
  GST_WEBRTC_DTLS_TRANSPORT_STATE_NEW = 0;
  GST_WEBRTC_DTLS_TRANSPORT_STATE_CLOSED = 1;
  GST_WEBRTC_DTLS_TRANSPORT_STATE_FAILED = 2;
  GST_WEBRTC_DTLS_TRANSPORT_STATE_CONNECTING = 3;
  GST_WEBRTC_DTLS_TRANSPORT_STATE_CONNECTED = 4;

type
  PGstWebRTCICEGatheringState = ^TGstWebRTCICEGatheringState;
  TGstWebRTCICEGatheringState = longint;

const
  GST_WEBRTC_ICE_GATHERING_STATE_NEW = 0;
  GST_WEBRTC_ICE_GATHERING_STATE_GATHERING = 1;
  GST_WEBRTC_ICE_GATHERING_STATE_COMPLETE = 2;

type
  PGstWebRTCICEConnectionState = ^TGstWebRTCICEConnectionState;
  TGstWebRTCICEConnectionState = longint;

const
  GST_WEBRTC_ICE_CONNECTION_STATE_NEW = 0;
  GST_WEBRTC_ICE_CONNECTION_STATE_CHECKING = 1;
  GST_WEBRTC_ICE_CONNECTION_STATE_CONNECTED = 2;
  GST_WEBRTC_ICE_CONNECTION_STATE_COMPLETED = 3;
  GST_WEBRTC_ICE_CONNECTION_STATE_FAILED = 4;
  GST_WEBRTC_ICE_CONNECTION_STATE_DISCONNECTED = 5;
  GST_WEBRTC_ICE_CONNECTION_STATE_CLOSED = 6;

type
  PGstWebRTCSignalingState = ^TGstWebRTCSignalingState;
  TGstWebRTCSignalingState = longint;

const
  GST_WEBRTC_SIGNALING_STATE_STABLE = 0;
  GST_WEBRTC_SIGNALING_STATE_CLOSED = 1;
  GST_WEBRTC_SIGNALING_STATE_HAVE_LOCAL_OFFER = 2;
  GST_WEBRTC_SIGNALING_STATE_HAVE_REMOTE_OFFER = 3;
  GST_WEBRTC_SIGNALING_STATE_HAVE_LOCAL_PRANSWER = 4;
  GST_WEBRTC_SIGNALING_STATE_HAVE_REMOTE_PRANSWER = 5;

type
  PGstWebRTCPeerConnectionState = ^TGstWebRTCPeerConnectionState;
  TGstWebRTCPeerConnectionState = longint;

const
  GST_WEBRTC_PEER_CONNECTION_STATE_NEW = 0;
  GST_WEBRTC_PEER_CONNECTION_STATE_CONNECTING = 1;
  GST_WEBRTC_PEER_CONNECTION_STATE_CONNECTED = 2;
  GST_WEBRTC_PEER_CONNECTION_STATE_DISCONNECTED = 3;
  GST_WEBRTC_PEER_CONNECTION_STATE_FAILED = 4;
  GST_WEBRTC_PEER_CONNECTION_STATE_CLOSED = 5;

type
  PGstWebRTCICERole = ^TGstWebRTCICERole;
  TGstWebRTCICERole = longint;

const
  GST_WEBRTC_ICE_ROLE_CONTROLLED = 0;
  GST_WEBRTC_ICE_ROLE_CONTROLLING = 1;

type
  PGstWebRTCICEComponent = ^TGstWebRTCICEComponent;
  TGstWebRTCICEComponent = longint;

const
  GST_WEBRTC_ICE_COMPONENT_RTP = 0;
  GST_WEBRTC_ICE_COMPONENT_RTCP = 1;

type
  PGstWebRTCSDPType = ^TGstWebRTCSDPType;
  TGstWebRTCSDPType = longint;

const
  GST_WEBRTC_SDP_TYPE_OFFER = 1;
  GST_WEBRTC_SDP_TYPE_PRANSWER = 2;
  GST_WEBRTC_SDP_TYPE_ANSWER = 3;
  GST_WEBRTC_SDP_TYPE_ROLLBACK = 4;

type
  PGstWebRTCRTPTransceiverDirection = ^TGstWebRTCRTPTransceiverDirection;
  TGstWebRTCRTPTransceiverDirection = longint;

const
  GST_WEBRTC_RTP_TRANSCEIVER_DIRECTION_NONE = 0;
  GST_WEBRTC_RTP_TRANSCEIVER_DIRECTION_INACTIVE = 1;
  GST_WEBRTC_RTP_TRANSCEIVER_DIRECTION_SENDONLY = 2;
  GST_WEBRTC_RTP_TRANSCEIVER_DIRECTION_RECVONLY = 3;
  GST_WEBRTC_RTP_TRANSCEIVER_DIRECTION_SENDRECV = 4;

type
  PGstWebRTCDTLSSetup = ^TGstWebRTCDTLSSetup;
  TGstWebRTCDTLSSetup = longint;

const
  GST_WEBRTC_DTLS_SETUP_NONE = 0;
  GST_WEBRTC_DTLS_SETUP_ACTPASS = 1;
  GST_WEBRTC_DTLS_SETUP_ACTIVE = 2;
  GST_WEBRTC_DTLS_SETUP_PASSIVE = 3;

type
  PGstWebRTCStatsType = ^TGstWebRTCStatsType;
  TGstWebRTCStatsType = longint;

const
  GST_WEBRTC_STATS_CODEC = 1;
  GST_WEBRTC_STATS_INBOUND_RTP = 2;
  GST_WEBRTC_STATS_OUTBOUND_RTP = 3;
  GST_WEBRTC_STATS_REMOTE_INBOUND_RTP = 4;
  GST_WEBRTC_STATS_REMOTE_OUTBOUND_RTP = 5;
  GST_WEBRTC_STATS_CSRC = 6;
  GST_WEBRTC_STATS_PEER_CONNECTION = 7;
  GST_WEBRTC_STATS_DATA_CHANNEL = 8;
  GST_WEBRTC_STATS_STREAM = 9;
  GST_WEBRTC_STATS_TRANSPORT = 10;
  GST_WEBRTC_STATS_CANDIDATE_PAIR = 11;
  GST_WEBRTC_STATS_LOCAL_CANDIDATE = 12;
  GST_WEBRTC_STATS_REMOTE_CANDIDATE = 13;
  GST_WEBRTC_STATS_CERTIFICATE = 14;

type
  PGstWebRTCFECType = ^TGstWebRTCFECType;
  TGstWebRTCFECType = longint;

const
  GST_WEBRTC_FEC_TYPE_NONE = 0;
  GST_WEBRTC_FEC_TYPE_ULP_RED = 1;

type
  PGstWebRTCSCTPTransportState = ^TGstWebRTCSCTPTransportState;
  TGstWebRTCSCTPTransportState = longint;

const
  GST_WEBRTC_SCTP_TRANSPORT_STATE_NEW = 0;
  GST_WEBRTC_SCTP_TRANSPORT_STATE_CONNECTING = 1;
  GST_WEBRTC_SCTP_TRANSPORT_STATE_CONNECTED = 2;
  GST_WEBRTC_SCTP_TRANSPORT_STATE_CLOSED = 3;

type
  PGstWebRTCPriorityType = ^TGstWebRTCPriorityType;
  TGstWebRTCPriorityType = longint;

const
  GST_WEBRTC_PRIORITY_TYPE_VERY_LOW = 1;
  GST_WEBRTC_PRIORITY_TYPE_LOW = 2;
  GST_WEBRTC_PRIORITY_TYPE_MEDIUM = 3;
  GST_WEBRTC_PRIORITY_TYPE_HIGH = 4;

type
  PGstWebRTCDataChannelState = ^TGstWebRTCDataChannelState;
  TGstWebRTCDataChannelState = longint;

const
  GST_WEBRTC_DATA_CHANNEL_STATE_CONNECTING = 1;
  GST_WEBRTC_DATA_CHANNEL_STATE_OPEN = 2;
  GST_WEBRTC_DATA_CHANNEL_STATE_CLOSING = 3;
  GST_WEBRTC_DATA_CHANNEL_STATE_CLOSED = 4;

type
  PGstWebRTCBundlePolicy = ^TGstWebRTCBundlePolicy;
  TGstWebRTCBundlePolicy = longint;

const
  GST_WEBRTC_BUNDLE_POLICY_NONE = 0;
  GST_WEBRTC_BUNDLE_POLICY_BALANCED = 1;
  GST_WEBRTC_BUNDLE_POLICY_MAX_COMPAT = 2;
  GST_WEBRTC_BUNDLE_POLICY_MAX_BUNDLE = 3;

type
  PGstWebRTCICETransportPolicy = ^TGstWebRTCICETransportPolicy;
  TGstWebRTCICETransportPolicy = longint;

const
  GST_WEBRTC_ICE_TRANSPORT_POLICY_ALL = 0;
  GST_WEBRTC_ICE_TRANSPORT_POLICY_RELAY = 1;

type
  PGstWebRTCKind = ^TGstWebRTCKind;
  TGstWebRTCKind = longint;

const
  GST_WEBRTC_KIND_UNKNOWN = 0;
  GST_WEBRTC_KIND_AUDIO = 1;
  GST_WEBRTC_KIND_VIDEO = 2;

function gst_webrtc_error_quark: TGQuark; cdecl; external libgstwebrtc;

type
  PGstWebRTCError = ^TGstWebRTCError;
  TGstWebRTCError = longint;

const
  GST_WEBRTC_ERROR_DATA_CHANNEL_FAILURE = 0;
  GST_WEBRTC_ERROR_DTLS_FAILURE = 1;
  GST_WEBRTC_ERROR_FINGERPRINT_FAILURE = 2;
  GST_WEBRTC_ERROR_SCTP_FAILURE = 3;
  GST_WEBRTC_ERROR_SDP_SYNTAX_ERROR = 4;
  GST_WEBRTC_ERROR_HARDWARE_ENCODER_NOT_AVAILABLE = 5;
  GST_WEBRTC_ERROR_ENCODER_ERROR = 6;
  GST_WEBRTC_ERROR_INVALID_STATE = 7;
  GST_WEBRTC_ERROR_INTERNAL_FAILURE = 8;
  GST_WEBRTC_ERROR_INVALID_MODIFICATION = 9;
  GST_WEBRTC_ERROR_TYPE_ERROR = 10;

function GST_WEBRTC_ERROR: TGQuark;

// === Konventiert am: 5-10-24 17:14:10 ===


{$ENDIF read_interface}


{$IFDEF read_implementation}

function GST_WEBRTC_ERROR: TGQuark;
begin
  GST_WEBRTC_ERROR := gst_webrtc_error_quark;
end;


{$ENDIF read_implementation}
